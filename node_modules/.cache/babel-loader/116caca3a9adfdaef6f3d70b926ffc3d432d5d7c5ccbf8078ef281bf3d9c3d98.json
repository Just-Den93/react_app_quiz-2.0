{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\ContentContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CategoryRow from './CategoryRow';\nimport Modal from './Modal';\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\nimport styles from '../styles/ContentContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentContainer({\n  usedBlocks,\n  markBlockAsUsed,\n  data,\n  mode\n}) {\n  _s();\n  const [selectedBlock, setSelectedBlock] = useState(null);\n\n  // Проверка на наличие данных\n  if (!data) {\n    console.log('Данные не загружены');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('Данные для отображения:', data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: styles.contentContainer,\n    children: [data.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      category: category,\n      usedBlocks: usedBlocks,\n      onItemClick: block => handleItemClick(block, category.id, setSelectedBlock)\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n      block: selectedBlock,\n      onClose: () => closeModal(setSelectedBlock),\n      markBlockAsUsed: markBlockAsUsed,\n      mode: mode // Передача режима в Modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentContainer, \"TFdMDgBcJp6HsjHoypcpq808cGU=\");\n_c = ContentContainer;\nexport default ContentContainer;\nvar _c;\n$RefreshReg$(_c, \"ContentContainer\");","map":{"version":3,"names":["React","useState","CategoryRow","Modal","handleItemClick","closeModal","styles","jsxDEV","_jsxDEV","ContentContainer","usedBlocks","markBlockAsUsed","data","mode","_s","selectedBlock","setSelectedBlock","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","contentContainer","map","category","onItemClick","block","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/ContentContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CategoryRow from './CategoryRow';\r\nimport Modal from './Modal';\r\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\r\nimport styles from '../styles/ContentContainer.module.css';\r\n\r\nfunction ContentContainer({ usedBlocks, markBlockAsUsed, data, mode }) {\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n\r\n  // Проверка на наличие данных\r\n  if (!data) {\r\n    console.log('Данные не загружены');\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  console.log('Данные для отображения:', data);\r\n\r\n  return (\r\n    <div id=\"content-container\" className={styles.contentContainer}>\r\n      {data.map((category) => (\r\n        <CategoryRow\r\n          key={category.id}\r\n          category={category}\r\n          usedBlocks={usedBlocks}\r\n          onItemClick={(block) => handleItemClick(block, category.id, setSelectedBlock)}\r\n        />\r\n      ))}\r\n      {selectedBlock && (\r\n        <Modal\r\n          block={selectedBlock}\r\n          onClose={() => closeModal(setSelectedBlock)}\r\n          markBlockAsUsed={markBlockAsUsed}\r\n          mode={mode} // Передача режима в Modal\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,EAAEC,UAAU,QAAQ,gCAAgC;AAC5E,OAAOC,MAAM,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,gBAAgBA,CAAC;EAAEC,UAAU;EAAEC,eAAe;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,IAAI,CAACW,IAAI,EAAE;IACTK,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,oBAAOV,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEAN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,IAAI,CAAC;EAE5C,oBACEJ,OAAA;IAAKgB,EAAE,EAAC,mBAAmB;IAACC,SAAS,EAAEnB,MAAM,CAACoB,gBAAiB;IAAAP,QAAA,GAC5DP,IAAI,CAACe,GAAG,CAAEC,QAAQ,iBACjBpB,OAAA,CAACN,WAAW;MAEV0B,QAAQ,EAAEA,QAAS;MACnBlB,UAAU,EAAEA,UAAW;MACvBmB,WAAW,EAAGC,KAAK,IAAK1B,eAAe,CAAC0B,KAAK,EAAEF,QAAQ,CAACJ,EAAE,EAAER,gBAAgB;IAAE,GAHzEY,QAAQ,CAACJ,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACF,CAAC,EACDR,aAAa,iBACZP,OAAA,CAACL,KAAK;MACJ2B,KAAK,EAAEf,aAAc;MACrBgB,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAACW,gBAAgB,CAAE;MAC5CL,eAAe,EAAEA,eAAgB;MACjCE,IAAI,EAAEA,IAAK,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACT,EAAA,CA/BQL,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAiCzB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}