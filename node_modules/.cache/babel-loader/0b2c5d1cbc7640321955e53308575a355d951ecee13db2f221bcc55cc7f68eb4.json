{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\context\\\\ModalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nexport function useModal() {\n  _s();\n  return useContext(ModalContext);\n}\n_s(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ModalProvider({\n  children\n}) {\n  _s2();\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const [showEndMessage, setShowEndMessage] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const toggleMenuModal = () => {\n    setIsMenuVisible(!isMenuVisible);\n  };\n  const toggleEndMessage = state => {\n    setShowEndMessage(state);\n  };\n  const toggleSettings = () => {\n    setIsSettingsVisible(!isSettingsVisible);\n  };\n  const handleKeyDown = useCallback(event => {\n    if (event.key === 'Escape') {\n      setIsMenuVisible(false);\n    }\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      isMenuVisible,\n      showEndMessage,\n      isSettingsVisible,\n      toggleMenuModal,\n      toggleEndMessage,\n      toggleSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s2(ModalProvider, \"1jPZLx4d3R2aBv7Q8xFUcEpTR/U=\");\n_c = ModalProvider;\nvar _c;\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","ModalContext","useModal","_s","ModalProvider","children","_s2","isMenuVisible","setIsMenuVisible","showEndMessage","setShowEndMessage","isSettingsVisible","setIsSettingsVisible","toggleMenuModal","toggleEndMessage","state","toggleSettings","handleKeyDown","event","key","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/context/ModalContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\n\r\nconst ModalContext = createContext();\r\n\r\nexport function useModal() {\r\n  return useContext(ModalContext);\r\n}\r\n\r\nexport function ModalProvider({ children }) {\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n  const [showEndMessage, setShowEndMessage] = useState(false);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  const toggleMenuModal = () => {\r\n    setIsMenuVisible(!isMenuVisible);\r\n  };\r\n\r\n  const toggleEndMessage = (state) => {\r\n    setShowEndMessage(state);\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    setIsSettingsVisible(!isSettingsVisible);\r\n  };\r\n\r\n  const handleKeyDown = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      setIsMenuVisible(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleKeyDown]);\r\n\r\n  return (\r\n    <ModalContext.Provider value={{\r\n      isMenuVisible,\r\n      showEndMessage,\r\n      isSettingsVisible,\r\n      toggleMenuModal,\r\n      toggleEndMessage,\r\n      toggleSettings\r\n    }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASQ,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,OAAOR,UAAU,CAACM,YAAY,CAAC;AACjC;AAACE,EAAA,CAFeD,QAAQ;AAIxB,OAAO,SAASE,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC1C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC5BL,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCL,iBAAiB,CAACK,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAED,MAAMM,aAAa,GAAGpB,WAAW,CAAEqB,KAAK,IAAK;IAC3C,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;MAC1BX,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACdsB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACjD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBACEjB,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAC5BjB,aAAa;MACbE,cAAc;MACdE,iBAAiB;MACjBE,eAAe;MACfC,gBAAgB;MAChBE;IACF,CAAE;IAAAX,QAAA,EACCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACtB,GAAA,CA1CeF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}