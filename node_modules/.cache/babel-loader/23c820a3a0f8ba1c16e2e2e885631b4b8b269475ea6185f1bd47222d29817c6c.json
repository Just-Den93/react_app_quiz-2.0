{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { useQuizContext } from '../context/QuizContext';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    quizStates,\n    updateQuizState,\n    markBlockAsUsed,\n    setShowQuizPage,\n    selectedMode,\n    currentQuizId\n  } = useQuizContext();\n  const currentQuizState = quizStates[currentQuizId] || {};\n  const [data, setData] = useState(currentQuizState.data || null);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  useEffect(() => {\n    //  console.log('Current Quiz ID:', currentQuizId);\n    //  console.log('Current Quiz State:', currentQuizState);\n\n    if (!data && currentQuizId && selectedMode) {\n      console.log('Loading data for mode:', selectedMode);\n      const selectedData = loadJsonDataByMode(selectedMode);\n      if (selectedData) {\n        console.log('Data loaded:', selectedData);\n        setData(selectedData.categories);\n        updateQuizState(currentQuizId, {\n          data: selectedData.categories\n        });\n      } else {\n        console.log('No data found for mode:', selectedMode);\n      }\n    }\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\n  const handleBlockUse = (categoryName, blockId) => {\n    markBlockAsUsed(currentQuizId, categoryName, blockId);\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: currentQuizState.usedBlocks || {},\n      markBlockAsUsed: handleBlockUse,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings,\n      showMainMenu: () => setShowQuizPage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"0XpTy2GWsY8GyQxZsyB5cAfG2Pk=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","useQuizContext","loadJsonDataByMode","jsxDEV","_jsxDEV","QuizPage","_s","quizStates","updateQuizState","markBlockAsUsed","setShowQuizPage","selectedMode","currentQuizId","currentQuizState","data","setData","isSettingsVisible","setIsSettingsVisible","console","log","selectedData","categories","handleBlockUse","categoryName","blockId","showSettings","hideSettings","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","usedBlocks","showMainMenu","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { useQuizContext } from '../context/QuizContext';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, updateQuizState, markBlockAsUsed, setShowQuizPage, selectedMode, currentQuizId } = useQuizContext();\r\n  const currentQuizState = quizStates[currentQuizId] || {};\r\n  const [data, setData] = useState(currentQuizState.data || null);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n   //  console.log('Current Quiz ID:', currentQuizId);\r\n   //  console.log('Current Quiz State:', currentQuizState);\r\n\r\n    if (!data && currentQuizId && selectedMode) {\r\n      console.log('Loading data for mode:', selectedMode);\r\n      const selectedData = loadJsonDataByMode(selectedMode);\r\n      if (selectedData) {\r\n        console.log('Data loaded:', selectedData);\r\n        setData(selectedData.categories);\r\n        updateQuizState(currentQuizId, { data: selectedData.categories });\r\n      } else {\r\n        console.log('No data found for mode:', selectedMode);\r\n      }\r\n    }\r\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\r\n\r\n  const handleBlockUse = (categoryName, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryName, blockId);\r\n  };\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      {data ? (\r\n        <ContentContainer\r\n          usedBlocks={currentQuizState.usedBlocks || {}}\r\n          markBlockAsUsed={handleBlockUse}\r\n          data={data}\r\n        />\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal showSettings={showSettings} showMainMenu={() => setShowQuizPage(false)} />\r\n      {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}