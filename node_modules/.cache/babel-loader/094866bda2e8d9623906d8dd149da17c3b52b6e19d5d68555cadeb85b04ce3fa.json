{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\SelectionMode\\\\SelectionMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ConfettiAnimation from \"../ConfettiAnimation/ConfettiAnimation\"; // Импортируем компонент конфетти\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectionMode = ({\n  block,\n  categoryName,\n  handleSelectCategory\n}) => {\n  _s();\n  const [isLastBlock, setIsLastBlock] = useState(false);\n  const [answerShown, setAnswerShown] = useState(false);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  useEffect(() => {\n    setAnswerShown(false);\n    setHintUsed(false);\n    setHighlightedOptions([]);\n  }, [block]);\n  const handleSelectCategoryInternal = () => {\n    if (block.id === block.categoryId - 1) {\n      // Проверка, если выбран последний блок\n      setIsLastBlock(true); // Отображаем конфетти, если это последний блок\n    }\n    handleSelectCategory(block.categoryId, block.id);\n  };\n  const handleShowAnswer = () => {\n    setAnswerShown(true);\n    const correctAnswerIndex = block.options.findIndex(option => option === block[\"correct answer\"]);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex) {\n        return \"\"; // Оставляем правильный ответ без изменений\n      }\n      return \"incorrectOption\"; // Класс для неправильного ответа\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const handleHintInternal = () => {\n    setHintUsed(true);\n    const correctAnswerIndex = block.options.findIndex(option => option === block[\"correct answer\"]);\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * block.options.length);\n    } while (randomIndex === correctAnswerIndex);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex || index === randomIndex) {\n        return \"\";\n      }\n      return \"incorrectOption\"; // Неправильный вариант\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const getOptionFontSize = text => {\n    const length = text.length;\n    if (length <= 10) {\n      return 25;\n    } else if (length <= 22) {\n      return 22;\n    } else {\n      return 18;\n    }\n  };\n  const getAnswerFontSize = text => {\n    const length = text.length;\n    if (length <= 90) {\n      return 22;\n    } else if (length <= 110) {\n      return 20;\n    } else {\n      return 18;\n    }\n  };\n  const formatTextWithHighlights = text => {\n    const regex = /`([^`]+)`/g;\n    const parts = [];\n    let lastIndex = 0;\n    let match;\n    while ((match = regex.exec(text)) !== null) {\n      if (lastIndex < match.index) {\n        parts.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          children: text.slice(lastIndex, match.index)\n        }, lastIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this));\n      }\n      parts.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: '#e21b3c',\n          color: 'white',\n          padding: '0 4px'\n        },\n        children: match[1]\n      }, match.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this));\n      lastIndex = match.index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      parts.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text.slice(lastIndex)\n      }, lastIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this));\n    }\n    return parts;\n  };\n  if (!block) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"infoCategoryName\",\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectedNumber\",\n        children: block.id + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectionMode\",\n        children: [answerShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          style: {\n            fontSize: `${getAnswerFontSize(block.text)}px`\n          },\n          children: formatTextWithHighlights(block.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: block.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: block.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${highlightedOptions[index]}`,\n            style: {\n              fontSize: `${getOptionFontSize(option)}px`\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectCategoryInternal,\n        children: \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u0438 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), answerShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShowAnswer,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438 \\u0432\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0434\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), !hintUsed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHintInternal,\n          children: \"\\u041F\\u0456\\u0434\\u043A\\u0430\\u0437\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), isLastBlock && /*#__PURE__*/_jsxDEV(ConfettiAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectionMode, \"w2xAO9Z5fgffEZQnP145yUefpWw=\");\n_c = SelectionMode;\nexport default SelectionMode;\nvar _c;\n$RefreshReg$(_c, \"SelectionMode\");","map":{"version":3,"names":["React","useState","useEffect","ConfettiAnimation","jsxDEV","_jsxDEV","SelectionMode","block","categoryName","handleSelectCategory","_s","isLastBlock","setIsLastBlock","answerShown","setAnswerShown","hintUsed","setHintUsed","highlightedOptions","setHighlightedOptions","handleSelectCategoryInternal","id","categoryId","handleShowAnswer","correctAnswerIndex","options","findIndex","option","updatedOptions","map","index","handleHintInternal","randomIndex","Math","floor","random","length","getOptionFontSize","text","getAnswerFontSize","formatTextWithHighlights","regex","parts","lastIndex","match","exec","push","children","slice","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","padding","className","fontSize","question","onClick","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/SelectionMode/SelectionMode.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ConfettiAnimation from \"../ConfettiAnimation/ConfettiAnimation\"; // Импортируем компонент конфетти\r\n\r\nconst SelectionMode = ({ block, categoryName, handleSelectCategory }) => {\r\n  const [isLastBlock, setIsLastBlock] = useState(false);\r\n  const [answerShown, setAnswerShown] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnswerShown(false);\r\n    setHintUsed(false);\r\n    setHighlightedOptions([]);\r\n  }, [block]);\r\n\r\n  const handleSelectCategoryInternal = () => {\r\n    if (block.id === block.categoryId - 1) {\r\n      // Проверка, если выбран последний блок\r\n      setIsLastBlock(true); // Отображаем конфетти, если это последний блок\r\n    }\r\n    handleSelectCategory(block.categoryId, block.id);\r\n  };\r\n\r\n  const handleShowAnswer = () => {\r\n    setAnswerShown(true);\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block[\"correct answer\"]\r\n    );\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex) {\r\n        return \"\"; // Оставляем правильный ответ без изменений\r\n      }\r\n      return \"incorrectOption\"; // Класс для неправильного ответа\r\n    });\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const handleHintInternal = () => {\r\n    setHintUsed(true);\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block[\"correct answer\"]\r\n    );\r\n    let randomIndex;\r\n    do {\r\n      randomIndex = Math.floor(Math.random() * block.options.length);\r\n    } while (randomIndex === correctAnswerIndex);\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex || index === randomIndex) {\r\n        return \"\";\r\n      }\r\n      return \"incorrectOption\"; // Неправильный вариант\r\n    });\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const getOptionFontSize = (text) => {\r\n    const length = text.length;\r\n    if (length <= 10) {\r\n      return 25;\r\n    } else if (length <= 22) {\r\n      return 22;\r\n    } else {\r\n      return 18;\r\n    }\r\n  };\r\n\r\n  const getAnswerFontSize = (text) => {\r\n    const length = text.length;\r\n    if (length <= 90) {\r\n      return 22;\r\n    } else if (length <= 110) {\r\n      return 20;\r\n    } else {\r\n      return 18;\r\n    }\r\n  };\r\n\r\n  const formatTextWithHighlights = (text) => {\r\n    const regex = /`([^`]+)`/g;\r\n    const parts = [];\r\n    let lastIndex = 0;\r\n    let match;\r\n    while ((match = regex.exec(text)) !== null) {\r\n      if (lastIndex < match.index) {\r\n        parts.push(<span key={lastIndex}>{text.slice(lastIndex, match.index)}</span>);\r\n      }\r\n      parts.push(\r\n        <span key={match.index} style={{ backgroundColor: '#e21b3c', color: 'white', padding: '0 4px' }}>\r\n          {match[1]}\r\n        </span>\r\n      );\r\n      lastIndex = match.index + match[0].length;\r\n    }\r\n    if (lastIndex < text.length) {\r\n      parts.push(<span key={lastIndex}>{text.slice(lastIndex)}</span>);\r\n    }\r\n    return parts;\r\n  };\r\n\r\n  if (!block) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"selectedInfo\">\r\n        <span className=\"infoCategoryName\">{categoryName}</span>\r\n        <div className=\"selectedNumber\">{block.id + 1}</div>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"selectionMode\">\r\n          {answerShown ? (\r\n            <div className=\"question\" style={{ fontSize: `${getAnswerFontSize(block.text)}px` }}>\r\n              {formatTextWithHighlights(block.text)}\r\n            </div>\r\n          ) : (\r\n            <div className=\"question\">{block.question}</div>\r\n          )}\r\n          <div className=\"options\">\r\n            {block.options.map((option, index) => (\r\n              <div\r\n                key={index}\r\n                className={`option ${highlightedOptions[index]}`}\r\n                style={{ fontSize: `${getOptionFontSize(option)}px` }}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"controlBlock\">\r\n        <button onClick={handleSelectCategoryInternal}>Обрати категорію</button>\r\n        {answerShown ? (\r\n          <div>\r\n            <button onClick={handleShowAnswer}>Показати відповідь</button>\r\n            {!hintUsed && <button onClick={handleHintInternal}>Підказка</button>}\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      {isLastBlock && <ConfettiAnimation />} {/* Анимация конфетти при последнем блоке */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionMode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}