{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport QuizPage from '../QuizPage/QuizPage';\nimport QuizCard from '../QuizCard/QuizCard';\nimport Sidebar from '../Sidebar/Sidebar';\nimport styles from './App.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nimport { loadUniqueUuids } from '../../utils/loadJsonData';\nfunction App() {\n  const {\n    showQuizPage,\n    setShowQuizPage,\n    setSelectedMode,\n    setCurrentQuizId\n  } = useQuizContext();\n  const [quizData, setQuizData] = useState([]);\n  useEffect(() => {\n    const uniqueData = loadUniqueUuids();\n    setQuizData(uniqueData);\n  }, []);\n  const startQuiz = (mode, uuid) => {\n    setSelectedMode(mode);\n    setCurrentQuizId(uuid);\n    setShowQuizPage(true);\n    localStorage.setItem('showQuizPage', 'true');\n  };\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, !showQuizPage && /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: showQuizPage ? styles.hidden : styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: !showQuizPage ? quizData.map(data => /*#__PURE__*/React.createElement(QuizCard, {\n      key: data.uuid,\n      startQuiz: () => startQuiz(data.mode, data.uuid),\n      mode: data.mode,\n      uuid: data.uuid,\n      category: data.categories[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    })) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }))), showQuizPage && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.fullscreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuizPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","QuizPage","QuizCard","Sidebar","styles","useQuizContext","loadUniqueUuids","App","showQuizPage","setShowQuizPage","setSelectedMode","setCurrentQuizId","quizData","setQuizData","uniqueData","startQuiz","mode","uuid","localStorage","setItem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","container","hidden","content","path","element","map","data","key","category","categories","fullscreen"],"sources":["E:/quiz-app-react/src/components/App/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport QuizPage from '../QuizPage/QuizPage';\r\nimport QuizCard from '../QuizCard/QuizCard';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport styles from './App.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport { loadUniqueUuids } from '../../utils/loadJsonData';\r\n\r\n\r\nfunction App() {\r\n  const { showQuizPage, setShowQuizPage, setSelectedMode, setCurrentQuizId } = useQuizContext();\r\n  const [quizData, setQuizData] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const uniqueData = loadUniqueUuids();\r\n    setQuizData(uniqueData);\r\n  }, []);\r\n\r\n\r\n  const startQuiz = (mode, uuid) => {\r\n    setSelectedMode(mode);\r\n    setCurrentQuizId(uuid);\r\n    setShowQuizPage(true);\r\n    localStorage.setItem('showQuizPage', 'true');\r\n  };\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className={styles.container}>\r\n        {!showQuizPage && <Sidebar />}\r\n        <div className={showQuizPage ? styles.hidden : styles.content}>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                !showQuizPage ? (\r\n                  quizData.map((data) => (\r\n                    <QuizCard\r\n                      key={data.uuid}\r\n                      startQuiz={() => startQuiz(data.mode, data.uuid)}\r\n                      mode={data.mode}\r\n                      uuid={data.uuid}\r\n                      category={data.categories[0]}\r\n                    />\r\n                  ))\r\n                ) : null\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n        {showQuizPage && (\r\n          <div className={styles.fullscreen}>\r\n            <QuizPage />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}