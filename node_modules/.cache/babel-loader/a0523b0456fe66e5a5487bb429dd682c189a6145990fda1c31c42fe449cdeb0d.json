{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Settings.jsx\";\n// src/components/Settings.jsx\nimport React from 'react'; // Remove `useState`\nimport styles from '../styles/Settings.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings({\n  onClose,\n  selectedMode,\n  setSelectedMode\n}) {\n  const handleModeChange = event => {\n    setSelectedMode(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.settings,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.switchButton,\n        children: \"\\u0420\\u0435\\u0436\\u0438\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.switchButton,\n        children: \"Switch 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.switchButton,\n        children: \"Switch 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.radioGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"QAMode\",\n            checked: selectedMode === \"QAMode\",\n            onChange: handleModeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), \"QAMode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"SelectionMode\",\n            checked: selectedMode === \"SelectionMode\",\n            onChange: handleModeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \"SelectionMode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.closeButton,\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Settings","onClose","selectedMode","setSelectedMode","handleModeChange","event","target","value","className","settings","children","sidebar","switchButton","fileName","_jsxFileName","lineNumber","columnNumber","content","radioGroup","type","checked","onChange","closeButton","onClick","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Settings.jsx"],"sourcesContent":["// src/components/Settings.jsx\r\nimport React from 'react'; // Remove `useState`\r\nimport styles from '../styles/Settings.module.css';\r\n\r\nfunction Settings({ onClose, selectedMode, setSelectedMode }) {\r\n  const handleModeChange = (event) => {\r\n    setSelectedMode(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.settings}>\r\n      <div className={styles.sidebar}>\r\n        <button className={styles.switchButton}>Режим</button>\r\n        <button className={styles.switchButton}>Switch 2</button>\r\n        <button className={styles.switchButton}>Switch 3</button>\r\n      </div>\r\n      <div className={styles.content}>\r\n        <h2>Choose Mode</h2>\r\n        <div className={styles.radioGroup}>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"QAMode\"\r\n              checked={selectedMode === \"QAMode\"}\r\n              onChange={handleModeChange}\r\n            />\r\n            QAMode\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"SelectionMode\"\r\n              checked={selectedMode === \"SelectionMode\"}\r\n              onChange={handleModeChange}\r\n            />\r\n            SelectionMode\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <button className={styles.closeButton} onClick={onClose}>Close</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAC5D,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,QAAS;IAAAC,QAAA,gBAC9BX,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACc,OAAQ;MAAAD,QAAA,gBAC7BX,OAAA;QAAQS,SAAS,EAAEX,MAAM,CAACe,YAAa;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDjB,OAAA;QAAQS,SAAS,EAAEX,MAAM,CAACe,YAAa;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzDjB,OAAA;QAAQS,SAAS,EAAEX,MAAM,CAACe,YAAa;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNjB,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACoB,OAAQ;MAAAP,QAAA,gBAC7BX,OAAA;QAAAW,QAAA,EAAI;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBjB,OAAA;QAAKS,SAAS,EAAEX,MAAM,CAACqB,UAAW;QAAAR,QAAA,gBAChCX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YACEoB,IAAI,EAAC,OAAO;YACZZ,KAAK,EAAC,QAAQ;YACda,OAAO,EAAElB,YAAY,KAAK,QAAS;YACnCmB,QAAQ,EAAEjB;UAAiB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,UAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRjB,OAAA;UAAAW,QAAA,gBACEX,OAAA;YACEoB,IAAI,EAAC,OAAO;YACZZ,KAAK,EAAC,eAAe;YACrBa,OAAO,EAAElB,YAAY,KAAK,eAAgB;YAC1CmB,QAAQ,EAAEjB;UAAiB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,iBAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjB,OAAA;MAAQS,SAAS,EAAEX,MAAM,CAACyB,WAAY;MAACC,OAAO,EAAEtB,OAAQ;MAAAS,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAACQ,EAAA,GAtCQxB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}