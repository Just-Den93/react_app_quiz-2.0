{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\ContentContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CategoryRow from './CategoryRow';\nimport Modal from './Modal';\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\nimport { useQuizContext } from '../context/QuizContext'; // Импортируем контекст\nimport styles from '../styles/ContentContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentContainer({\n  usedBlocks,\n  markBlockAsUsed,\n  data\n}) {\n  _s();\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const {\n    currentQuizId\n  } = useQuizContext(); // Получаем currentQuizId из контекста\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: styles.contentContainer,\n    children: [data.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      category: category,\n      usedBlocks: usedBlocks,\n      onItemClick: handleItemClick // Передаем функцию обработки клика\n      ,\n      setSelectedBlock: setSelectedBlock // Передаем функцию изменения выбранного блока\n      ,\n      markBlockAsUsed: markBlockAsUsed // Передаем функцию для отметки блока как использованного\n      ,\n      currentQuizId: currentQuizId // Передаем currentQuizId\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n      block: selectedBlock,\n      onClose: () => closeModal(setSelectedBlock),\n      markBlockAsUsed: markBlockAsUsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentContainer, \"82Fl79htDApfyEL85Nm3eo0rG/c=\", false, function () {\n  return [useQuizContext];\n});\n_c = ContentContainer;\nexport default ContentContainer;\nvar _c;\n$RefreshReg$(_c, \"ContentContainer\");","map":{"version":3,"names":["React","useState","CategoryRow","Modal","handleItemClick","closeModal","useQuizContext","styles","jsxDEV","_jsxDEV","ContentContainer","usedBlocks","markBlockAsUsed","data","_s","selectedBlock","setSelectedBlock","currentQuizId","id","className","contentContainer","children","map","category","onItemClick","fileName","_jsxFileName","lineNumber","columnNumber","block","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/ContentContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CategoryRow from './CategoryRow';\r\nimport Modal from './Modal';\r\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\r\nimport { useQuizContext } from '../context/QuizContext'; // Импортируем контекст\r\nimport styles from '../styles/ContentContainer.module.css';\r\n\r\nfunction ContentContainer({ usedBlocks, markBlockAsUsed, data }) {\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const { currentQuizId } = useQuizContext(); // Получаем currentQuizId из контекста\r\n\r\n  return (\r\n    <div id=\"content-container\" className={styles.contentContainer}>\r\n      {data.map((category) => (\r\n        <CategoryRow\r\n          key={category.id}\r\n          category={category}\r\n          usedBlocks={usedBlocks}\r\n          onItemClick={handleItemClick} // Передаем функцию обработки клика\r\n          setSelectedBlock={setSelectedBlock} // Передаем функцию изменения выбранного блока\r\n          markBlockAsUsed={markBlockAsUsed} // Передаем функцию для отметки блока как использованного\r\n          currentQuizId={currentQuizId} // Передаем currentQuizId\r\n        />\r\n      ))}\r\n      {selectedBlock && (\r\n        <Modal\r\n          block={selectedBlock}\r\n          onClose={() => closeModal(setSelectedBlock)}\r\n          markBlockAsUsed={markBlockAsUsed}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,EAAEC,UAAU,QAAQ,gCAAgC;AAC5E,SAASC,cAAc,QAAQ,wBAAwB,CAAC,CAAC;AACzD,OAAOC,MAAM,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,gBAAgBA,CAAC;EAAEC,UAAU;EAAEC,eAAe;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM;IAAEgB;EAAc,CAAC,GAAGX,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE5C,oBACEG,OAAA;IAAKS,EAAE,EAAC,mBAAmB;IAACC,SAAS,EAAEZ,MAAM,CAACa,gBAAiB;IAAAC,QAAA,GAC5DR,IAAI,CAACS,GAAG,CAAEC,QAAQ,iBACjBd,OAAA,CAACP,WAAW;MAEVqB,QAAQ,EAAEA,QAAS;MACnBZ,UAAU,EAAEA,UAAW;MACvBa,WAAW,EAAEpB,eAAgB,CAAC;MAAA;MAC9BY,gBAAgB,EAAEA,gBAAiB,CAAC;MAAA;MACpCJ,eAAe,EAAEA,eAAgB,CAAC;MAAA;MAClCK,aAAa,EAAEA,aAAc,CAAC;IAAA,GANzBM,QAAQ,CAACL,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjB,CACF,CAAC,EACDb,aAAa,iBACZN,OAAA,CAACN,KAAK;MACJ0B,KAAK,EAAEd,aAAc;MACrBe,OAAO,EAAEA,CAAA,KAAMzB,UAAU,CAACW,gBAAgB,CAAE;MAC5CJ,eAAe,EAAEA;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CA1BQJ,gBAAgB;EAAA,QAEGJ,cAAc;AAAA;AAAAyB,EAAA,GAFjCrB,gBAAgB;AA4BzB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}