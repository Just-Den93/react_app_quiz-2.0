{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\n\n// Логика отображения/закрытия меню\nexport function useMenuModal() {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const showMenuModal = () => {\n    setIsVisible(true);\n  };\n  const closeMenuModal = () => {\n    setIsVisible(false);\n  };\n  const handleKeyDown = useCallback(event => {\n    if (event.key === 'Escape') {\n      if (isVisible) {\n        closeMenuModal();\n      } else {\n        showMenuModal();\n      }\n    }\n  }, [isVisible]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return {\n    isVisible,\n    showMenuModal,\n    closeMenuModal\n  };\n}\n\n// Вынесенная функция для сброса состояния и закрытия модального окна\n_s(useMenuModal, \"sYMxLeMQV4hqcAJTGj4YQkZloeI=\");\nexport function resetQuizStateAndCloseModal(currentQuizId, setQuizStates, closeMenuModal) {\n  // Очищаем все данные текущей викторины в localStorage\n  localStorage.removeItem(`data-${currentQuizId}`);\n  localStorage.removeItem(`usedBlocks-${currentQuizId}`);\n  localStorage.removeItem('quizStates'); // Очищаем состояние викторины в localStorage\n\n  // Сбрасываем состояние викторины в контексте приложения\n  setQuizStates(prevStates => ({\n    ...prevStates,\n    [currentQuizId]: {\n      usedBlocks: {},\n      data: null\n    }\n  }));\n\n  // Закрываем меню\n  closeMenuModal();\n}","map":{"version":3,"names":["useState","useCallback","useEffect","useMenuModal","_s","isVisible","setIsVisible","showMenuModal","closeMenuModal","handleKeyDown","event","key","window","addEventListener","removeEventListener","resetQuizStateAndCloseModal","currentQuizId","setQuizStates","localStorage","removeItem","prevStates","usedBlocks","data"],"sources":["E:/quiz-app-react/src/components/MenuModal/menuModalUtils.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\n// Логика отображения/закрытия меню\r\nexport function useMenuModal() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const showMenuModal = () => {\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const closeMenuModal = () => {\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const handleKeyDown = useCallback((event) => {\r\n    if (event.key === 'Escape') {\r\n      if (isVisible) {\r\n        closeMenuModal();\r\n      } else {\r\n        showMenuModal();\r\n      }\r\n    }\r\n  }, [isVisible]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleKeyDown]);\r\n\r\n  return {\r\n    isVisible,\r\n    showMenuModal,\r\n    closeMenuModal,\r\n  };\r\n}\r\n\r\n// Вынесенная функция для сброса состояния и закрытия модального окна\r\nexport function resetQuizStateAndCloseModal(currentQuizId, setQuizStates, closeMenuModal) {\r\n  // Очищаем все данные текущей викторины в localStorage\r\n  localStorage.removeItem(`data-${currentQuizId}`);\r\n  localStorage.removeItem(`usedBlocks-${currentQuizId}`);\r\n  localStorage.removeItem('quizStates');  // Очищаем состояние викторины в localStorage\r\n\r\n  // Сбрасываем состояние викторины в контексте приложения\r\n  setQuizStates((prevStates) => ({\r\n    ...prevStates,\r\n    [currentQuizId]: {\r\n      usedBlocks: {},\r\n      data: null,\r\n    },\r\n  }));\r\n\r\n  // Закрываем меню\r\n  closeMenuModal();\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAExD;AACA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1BD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMG,aAAa,GAAGR,WAAW,CAAES,KAAK,IAAK;IAC3C,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;MAC1B,IAAIN,SAAS,EAAE;QACbG,cAAc,CAAC,CAAC;MAClB,CAAC,MAAM;QACLD,aAAa,CAAC,CAAC;MACjB;IACF;EACF,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEfH,SAAS,CAAC,MAAM;IACdU,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACjD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,OAAO;IACLJ,SAAS;IACTE,aAAa;IACbC;EACF,CAAC;AACH;;AAEA;AAAAJ,EAAA,CAnCgBD,YAAY;AAoC5B,OAAO,SAASY,2BAA2BA,CAACC,aAAa,EAAEC,aAAa,EAAET,cAAc,EAAE;EACxF;EACAU,YAAY,CAACC,UAAU,CAAC,QAAQH,aAAa,EAAE,CAAC;EAChDE,YAAY,CAACC,UAAU,CAAC,cAAcH,aAAa,EAAE,CAAC;EACtDE,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAE;;EAExC;EACAF,aAAa,CAAEG,UAAU,KAAM;IAC7B,GAAGA,UAAU;IACb,CAACJ,aAAa,GAAG;MACfK,UAAU,EAAE,CAAC,CAAC;MACdC,IAAI,EAAE;IACR;EACF,CAAC,CAAC,CAAC;;EAEH;EACAd,cAAc,CAAC,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}