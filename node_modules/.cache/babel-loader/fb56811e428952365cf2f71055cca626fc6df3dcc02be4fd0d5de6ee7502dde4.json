{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport QuizPage from './QuizPage';\nimport QuizCard from './QuizCard';\nimport Sidebar from './Sidebar';\nimport styles from '../styles/App.module.css';\nimport { QuizProvider, useQuizContext } from '../context/QuizContext';\nimport { loadUniqueUuids } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    showQuizPage,\n    setShowQuizPage,\n    setSelectedMode,\n    setCurrentQuizId,\n    selectedMode,\n    currentQuizId\n  } = useQuizContext();\n  const [quizData, setQuizData] = useState([]);\n  useEffect(() => {\n    const uniqueData = loadUniqueUuids(); // Загрузка данных\n    setQuizData(uniqueData); // Установка данных в состояние\n  }, []);\n  const startQuiz = (mode, uuid) => {\n    console.log('startQuiz called with mode:', mode, 'and uuid:', uuid);\n    setSelectedMode(mode);\n    setCurrentQuizId(uuid);\n    setShowQuizPage(true);\n    localStorage.setItem('showQuizPage', 'true');\n  };\n\n  // Этот useEffect добавлен для проверки состояния контекста\n  useEffect(() => {\n    setTimeout(() => {\n      console.log('showQuizPage:', showQuizPage);\n      console.log('selectedMode:', selectedMode);\n      console.log('currentQuizId:', currentQuizId);\n      if (showQuizPage && selectedMode && currentQuizId) {\n        console.log('All states are set, QuizPage should render.');\n      }\n    }, 0); // Задержка в 0 миллисекунд, чтобы убедиться, что состояние обновилось\n  }, [showQuizPage, selectedMode, currentQuizId]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [!showQuizPage && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showQuizPage ? styles.hidden : styles.content,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: !showQuizPage ? quizData.map(data => /*#__PURE__*/_jsxDEV(QuizCard, {\n              startQuiz: () => startQuiz(data.mode, data.uuid),\n              mode: data.mode,\n              uuid: data.uuid,\n              category: data.categories[0] // Отображаем первую категорию как пример\n            }, data.uuid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this), showQuizPage && selectedMode && currentQuizId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.fullscreen,\n        children: /*#__PURE__*/_jsxDEV(QuizPage, {\n          quizId: currentQuizId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 2\n  }, this);\n}\n\n// Оборачиваем приложение в провайдер контекста\n_s(App, \"eDDzwv3N1jF7u4yuCytcfv3bv1U=\", false, function () {\n  return [useQuizContext];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(QuizProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","QuizPage","QuizCard","Sidebar","styles","QuizProvider","useQuizContext","loadUniqueUuids","jsxDEV","_jsxDEV","App","_s","showQuizPage","setShowQuizPage","setSelectedMode","setCurrentQuizId","selectedMode","currentQuizId","quizData","setQuizData","uniqueData","startQuiz","mode","uuid","console","log","localStorage","setItem","setTimeout","children","className","container","fileName","_jsxFileName","lineNumber","columnNumber","hidden","content","path","element","map","data","category","categories","fullscreen","quizId","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport QuizPage from './QuizPage';\r\nimport QuizCard from './QuizCard';\r\nimport Sidebar from './Sidebar';\r\nimport styles from '../styles/App.module.css';\r\nimport { QuizProvider, useQuizContext } from '../context/QuizContext';\r\nimport { loadUniqueUuids } from '../utils/loadJsonData';\r\n\r\nfunction App() {\r\n  const { showQuizPage, setShowQuizPage, setSelectedMode, setCurrentQuizId, selectedMode, currentQuizId } = useQuizContext();\r\n  const [quizData, setQuizData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const uniqueData = loadUniqueUuids(); // Загрузка данных\r\n    setQuizData(uniqueData); // Установка данных в состояние\r\n  }, []);\r\n\r\n  const startQuiz = (mode, uuid) => {\r\n\tconsole.log('startQuiz called with mode:', mode, 'and uuid:', uuid);\r\n\tsetSelectedMode(mode);\r\n\tsetCurrentQuizId(uuid);\r\n\tsetShowQuizPage(true);\r\n\tlocalStorage.setItem('showQuizPage', 'true');\r\n };\r\n \r\n \r\n  // Этот useEffect добавлен для проверки состояния контекста\r\n  useEffect(() => {\r\n\tsetTimeout(() => {\r\n\t  console.log('showQuizPage:', showQuizPage);\r\n\t  console.log('selectedMode:', selectedMode);\r\n\t  console.log('currentQuizId:', currentQuizId);\r\n\t  if (showQuizPage && selectedMode && currentQuizId) {\r\n\t\t console.log('All states are set, QuizPage should render.');\r\n\t  }\r\n\t}, 0); // Задержка в 0 миллисекунд, чтобы убедиться, что состояние обновилось\r\n }, [showQuizPage, selectedMode, currentQuizId]);\r\n \r\n\r\n  return (\r\n\t<Router>\r\n\t  <div className={styles.container}>\r\n\t\t {!showQuizPage && <Sidebar />}\r\n\t\t <div className={showQuizPage ? styles.hidden : styles.content}>\r\n\t\t\t<Routes>\r\n\t\t\t  <Route\r\n\t\t\t\t path=\"/\"\r\n\t\t\t\t element={\r\n\t\t\t\t\t!showQuizPage ? (\r\n\t\t\t\t\t  quizData.map((data) => (\r\n\t\t\t\t\t\t <QuizCard\r\n\t\t\t\t\t\t\tkey={data.uuid}\r\n\t\t\t\t\t\t\tstartQuiz={() => startQuiz(data.mode, data.uuid)}\r\n\t\t\t\t\t\t\tmode={data.mode}\r\n\t\t\t\t\t\t\tuuid={data.uuid}\r\n\t\t\t\t\t\t\tcategory={data.categories[0]} // Отображаем первую категорию как пример\r\n\t\t\t\t\t\t />\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t) : null\r\n\t\t\t\t }\r\n\t\t\t  />\r\n\t\t\t</Routes>\r\n\t\t </div>\r\n\t\t {showQuizPage && selectedMode && currentQuizId ? (\r\n\t\t\t<div className={styles.fullscreen}>\r\n\t\t\t  <QuizPage quizId={currentQuizId} />\r\n\t\t\t</div>\r\n\t\t ) : (\r\n\t\t\t<div>Loading...</div>\r\n\t\t )}\r\n\t  </div>\r\n\t</Router>\r\n );\r\n \r\n}\r\n\r\n// Оборачиваем приложение в провайдер контекста\r\nexport default function AppWrapper() {\r\n  return (\r\n    <QuizProvider>\r\n      <App />\r\n    </QuizProvider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}