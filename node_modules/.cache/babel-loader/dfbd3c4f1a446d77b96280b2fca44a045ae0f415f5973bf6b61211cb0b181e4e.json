{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport QuizPage from './QuizPage';\nimport QuizCard from './QuizCard';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showQuizPage, setShowQuizPage] = useState(false);\n  const [usedBlocks, setUsedBlocks] = useState(() => {\n    const saved = localStorage.getItem('usedBlocks');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedMode, setSelectedMode] = useState(() => {\n    const savedMode = localStorage.getItem('selectedMode');\n    return savedMode ? savedMode : 'QAMode';\n  });\n  const markBlockAsUsed = (categoryId, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryId]) {\n        updatedUsedBlocks[categoryId] = [];\n      }\n      updatedUsedBlocks[categoryId].push(blockId);\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\n      return updatedUsedBlocks;\n    });\n  };\n  useEffect(() => {\n    localStorage.setItem('usedBlocks', JSON.stringify(usedBlocks));\n  }, [usedBlocks]);\n  useEffect(() => {\n    localStorage.setItem('selectedMode', selectedMode);\n  }, [selectedMode]);\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  const handleNewGame = () => {\n    localStorage.removeItem('usedBlocks');\n    setUsedBlocks({});\n    window.location.reload();\n  };\n  const handleShowQuizPage = () => {\n    setShowQuizPage(true);\n  };\n  const handleShowMainMenu = () => {\n    setShowQuizPage(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [!showQuizPage && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quiz\",\n          element: showQuizPage ? /*#__PURE__*/_jsxDEV(QuizPage, {\n            showMainMenu: handleShowMainMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(QuizCard, {\n            startQuiz: handleShowQuizPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quiz\",\n          element: showQuizPage ? /*#__PURE__*/_jsxDEV(QuizPage, {\n            showMainMenu: handleShowMainMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(QuizCard, {\n            startQuiz: handleShowQuizPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XplI5idwYSn2w1OL9dIaTXUDh08=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","QuizPage","QuizCard","Sidebar","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","jsxDEV","_jsxDEV","App","_s","showQuizPage","setShowQuizPage","usedBlocks","setUsedBlocks","saved","localStorage","getItem","JSON","parse","isSettingsVisible","setIsSettingsVisible","selectedMode","setSelectedMode","savedMode","markBlockAsUsed","categoryId","blockId","prevUsedBlocks","updatedUsedBlocks","push","setItem","stringify","showSettings","hideSettings","handleNewGame","removeItem","window","location","reload","handleShowQuizPage","handleShowMainMenu","children","className","container","fileName","_jsxFileName","lineNumber","columnNumber","path","element","showMainMenu","startQuiz","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport QuizPage from './QuizPage';\r\nimport QuizCard from './QuizCard';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/App.module.css';\r\n\r\nfunction App() {\r\n  const [showQuizPage, setShowQuizPage] = useState(false);\r\n  const [usedBlocks, setUsedBlocks] = useState(() => {\r\n    const saved = localStorage.getItem('usedBlocks');\r\n    return saved ? JSON.parse(saved) : {};\r\n  });\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedMode, setSelectedMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('selectedMode');\r\n    return savedMode ? savedMode : 'QAMode';\r\n  });\r\n\r\n  const markBlockAsUsed = (categoryId, blockId) => {\r\n    setUsedBlocks((prevUsedBlocks) => {\r\n      const updatedUsedBlocks = { ...prevUsedBlocks };\r\n      if (!updatedUsedBlocks[categoryId]) {\r\n        updatedUsedBlocks[categoryId] = [];\r\n      }\r\n      updatedUsedBlocks[categoryId].push(blockId);\r\n\r\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\r\n      return updatedUsedBlocks;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('usedBlocks', JSON.stringify(usedBlocks));\r\n  }, [usedBlocks]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedMode', selectedMode);\r\n  }, [selectedMode]);\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  const handleNewGame = () => {\r\n    localStorage.removeItem('usedBlocks');\r\n    setUsedBlocks({});\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleShowQuizPage = () => {\r\n    setShowQuizPage(true);\r\n  };\r\n\r\n  const handleShowMainMenu = () => {\r\n    setShowQuizPage(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={styles.container}>\r\n        {!showQuizPage && <Sidebar />}\r\n        <Routes>\r\n          <Route\r\n            path=\"/quiz\"\r\n            element={\r\n              showQuizPage ? (\r\n                <QuizPage showMainMenu={handleShowMainMenu} />\r\n              ) : (\r\n                <QuizCard startQuiz={handleShowQuizPage} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/quiz\"\r\n            element={\r\n              showQuizPage ? (\r\n                <QuizPage showMainMenu={handleShowMainMenu} />\r\n              ) : (\r\n                <QuizCard startQuiz={handleShowQuizPage} />\r\n              )\r\n            }\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}