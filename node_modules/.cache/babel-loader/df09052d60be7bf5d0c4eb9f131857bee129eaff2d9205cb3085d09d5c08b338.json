{"ast":null,"code":"import React from'react';import{useQuizContext}from'../../context/QuizContext';import styles from'./QuizCard.module.css';import quizImage from'../../images/quizpng.png';import{ReactComponent as PCImage}from'../../images/PC_horizontal_1line_color.svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizCard(_ref){let{startQuiz,mode,name,categories}=_ref;const{completedGames}=useQuizContext();// Проверка наличия categories и их структуры\nconst totalQuestions=categories&&Array.isArray(categories)?categories.reduce((acc,category)=>{var _category$blocks;return acc+(((_category$blocks=category.blocks)===null||_category$blocks===void 0?void 0:_category$blocks.length)||0);},0):0;return/*#__PURE__*/_jsxs(\"div\",{className:styles.card,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.image,children:[/*#__PURE__*/_jsx(\"img\",{src:quizImage,alt:\"Quiz Image\",className:styles.imageContent}),/*#__PURE__*/_jsxs(\"div\",{className:styles.questionCount,children:[totalQuestions,\" \\u0437\\u0430\\u043F\\u0438\\u0442\\u0430\\u043D\\u044C\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.details,children:[/*#__PURE__*/_jsx(\"h2\",{children:name}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:styles.bottomRow,children:[/*#__PURE__*/_jsx(PCImage,{className:styles.affiliationIcon}),/*#__PURE__*/_jsxs(\"p\",{className:styles.games,children:[\"\\u0406\\u0433\\u0440\\u0438: \",completedGames]}),/*#__PURE__*/_jsx(\"button\",{className:styles.startButton,onClick:startQuiz,children:\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043D\\u0430\\u0436\\u0438\\u0432\\u043E\"})]})]})]});}export default QuizCard;","map":{"version":3,"names":["React","useQuizContext","styles","quizImage","ReactComponent","PCImage","jsx","_jsx","jsxs","_jsxs","QuizCard","_ref","startQuiz","mode","name","categories","completedGames","totalQuestions","Array","isArray","reduce","acc","category","_category$blocks","blocks","length","className","card","children","image","src","alt","imageContent","questionCount","details","bottomRow","affiliationIcon","games","startButton","onClick"],"sources":["E:/quiz-app-react/src/components/QuizCard/QuizCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport styles from './QuizCard.module.css';\r\nimport quizImage from '../../images/quizpng.png';\r\nimport { ReactComponent as PCImage } from '../../images/PC_horizontal_1line_color.svg';\r\n\r\nfunction QuizCard({ startQuiz, mode, name, categories }) {\r\n  const { completedGames } = useQuizContext();\r\n\r\n  // Проверка наличия categories и их структуры\r\n  const totalQuestions = categories && Array.isArray(categories)\r\n    ? categories.reduce((acc, category) => acc + (category.blocks?.length || 0), 0)\r\n    : 0;\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <div className={styles.image}>\r\n        <img src={quizImage} alt=\"Quiz Image\" className={styles.imageContent} />\r\n        {/* Плашка с общим количеством вопросов */}\r\n        <div className={styles.questionCount}>{totalQuestions} запитань</div>\r\n      </div>\r\n      <div className={styles.details}>\r\n        <h2>{name}</h2> {/* Отображаем название викторины */}\r\n        <div className={styles.bottomRow}>\r\n          <PCImage className={styles.affiliationIcon} />\r\n          <p className={styles.games}>Ігри: {completedGames}</p>\r\n          <button className={styles.startButton} onClick={startQuiz}>\r\n            Провести наживо\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuizCard.propTypes = {\r\n  startQuiz: PropTypes.func.isRequired,\r\n  mode: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  categories: PropTypes.array.isRequired, // Проп для всех категорий\r\n};\r\n\r\nexport default QuizCard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,cAAc,KAAQ,2BAA2B,CAC1D,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAC1C,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,OAASC,cAAc,GAAI,CAAAC,OAAO,KAAQ,4CAA4C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvF,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,SAAS,CAAEC,IAAI,CAAEC,IAAI,CAAEC,UAAW,CAAC,CAAAJ,IAAA,CACrD,KAAM,CAAEK,cAAe,CAAC,CAAGf,cAAc,CAAC,CAAC,CAE3C;AACA,KAAM,CAAAgB,cAAc,CAAGF,UAAU,EAAIG,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,CAC1DA,UAAU,CAACK,MAAM,CAAC,CAACC,GAAG,CAAEC,QAAQ,QAAAC,gBAAA,OAAK,CAAAF,GAAG,EAAI,EAAAE,gBAAA,CAAAD,QAAQ,CAACE,MAAM,UAAAD,gBAAA,iBAAfA,gBAAA,CAAiBE,MAAM,GAAI,CAAC,CAAC,GAAE,CAAC,CAAC,CAC7E,CAAC,CAEL,mBACEhB,KAAA,QAAKiB,SAAS,CAAExB,MAAM,CAACyB,IAAK,CAAAC,QAAA,eAC1BnB,KAAA,QAAKiB,SAAS,CAAExB,MAAM,CAAC2B,KAAM,CAAAD,QAAA,eAC3BrB,IAAA,QAAKuB,GAAG,CAAE3B,SAAU,CAAC4B,GAAG,CAAC,YAAY,CAACL,SAAS,CAAExB,MAAM,CAAC8B,YAAa,CAAE,CAAC,cAExEvB,KAAA,QAAKiB,SAAS,CAAExB,MAAM,CAAC+B,aAAc,CAAAL,QAAA,EAAEX,cAAc,CAAC,mDAAS,EAAK,CAAC,EAClE,CAAC,cACNR,KAAA,QAAKiB,SAAS,CAAExB,MAAM,CAACgC,OAAQ,CAAAN,QAAA,eAC7BrB,IAAA,OAAAqB,QAAA,CAAKd,IAAI,CAAK,CAAC,IAAC,cAChBL,KAAA,QAAKiB,SAAS,CAAExB,MAAM,CAACiC,SAAU,CAAAP,QAAA,eAC/BrB,IAAA,CAACF,OAAO,EAACqB,SAAS,CAAExB,MAAM,CAACkC,eAAgB,CAAE,CAAC,cAC9C3B,KAAA,MAAGiB,SAAS,CAAExB,MAAM,CAACmC,KAAM,CAAAT,QAAA,EAAC,4BAAM,CAACZ,cAAc,EAAI,CAAC,cACtDT,IAAA,WAAQmB,SAAS,CAAExB,MAAM,CAACoC,WAAY,CAACC,OAAO,CAAE3B,SAAU,CAAAgB,QAAA,CAAC,uFAE3D,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CASA,cAAe,CAAAlB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}