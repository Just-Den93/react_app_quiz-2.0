{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from './QAMode';\nimport SelectionMode from './SelectionMode';\nimport styles from '../styles/Modal.module.css';\nimport { useModalLogic } from '../utils/modalUtils';\n\n// Добавляем объект, который маппит значения mode на компоненты\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modeComponents = {\n  1: QAMode,\n  2: SelectionMode\n  // В будущем можно легко добавить другие режимы:\n  // 3: AnotherModeComponent,\n};\nfunction Modal({\n  block,\n  onClose,\n  markBlockAsUsed,\n  mode\n}) {\n  _s();\n  const {\n    timerStarted,\n    timerEnded,\n    showAnswer,\n    setTimerStarted,\n    handleTimerEnd,\n    handleShowAnswer,\n    handleSelectCategory,\n    handleForceStop\n  } = useModalLogic(block, markBlockAsUsed, onClose);\n\n  // Получаем компонент на основе mode\n  const ModeComponent = modeComponents[mode];\n  if (!block) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Здесь можно добавить индикатор загрузки или оставить просто заглушку\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), ModeComponent && /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block,\n        showAnswer: showAnswer,\n        setTimerStarted: setTimerStarted,\n        timerStarted: timerStarted,\n        timerEnded: timerEnded,\n        handleTimerEnd: handleTimerEnd,\n        handleShowAnswer: handleShowAnswer,\n        handleSelectCategory: handleSelectCategory,\n        handleForceStop: handleForceStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"6yEjQtkuBuS02q7Rvp9ubgO7p3c=\", false, function () {\n  return [useModalLogic];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","styles","useModalLogic","jsxDEV","_jsxDEV","modeComponents","Modal","block","onClose","markBlockAsUsed","mode","_s","timerStarted","timerEnded","showAnswer","setTimerStarted","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","ModeComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","modal","show","onClick","modalContent","e","stopPropagation","closeButton","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from './QAMode';\r\nimport SelectionMode from './SelectionMode';\r\nimport styles from '../styles/Modal.module.css';\r\nimport { useModalLogic } from '../utils/modalUtils';\r\n\r\n// Добавляем объект, который маппит значения mode на компоненты\r\nconst modeComponents = {\r\n  1: QAMode,\r\n  2: SelectionMode,\r\n  // В будущем можно легко добавить другие режимы:\r\n  // 3: AnotherModeComponent,\r\n};\r\n\r\nfunction Modal({ block, onClose, markBlockAsUsed, mode }) {\r\n  const {\r\n    timerStarted,\r\n    timerEnded,\r\n    showAnswer,\r\n    setTimerStarted,\r\n    handleTimerEnd,\r\n    handleShowAnswer,\r\n    handleSelectCategory,\r\n    handleForceStop,\r\n  } = useModalLogic(block, markBlockAsUsed, onClose);\r\n\r\n  // Получаем компонент на основе mode\r\n  const ModeComponent = modeComponents[mode];\r\n\r\n  if (!block) {\r\n    return <div>Загрузка...</div>; // Здесь можно добавить индикатор загрузки или оставить просто заглушку\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        {ModeComponent && (\r\n          <ModeComponent\r\n            block={block}\r\n            showAnswer={showAnswer}\r\n            setTimerStarted={setTimerStarted}\r\n            timerStarted={timerStarted}\r\n            timerEnded={timerEnded}\r\n            handleTimerEnd={handleTimerEnd}\r\n            handleShowAnswer={handleShowAnswer}\r\n            handleSelectCategory={handleSelectCategory}\r\n            handleForceStop={handleForceStop}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAEN,MAAM;EACT,CAAC,EAAEC;EACH;EACA;AACF,CAAC;AAED,SAASM,KAAKA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,eAAe;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM;IACJC,YAAY;IACZC,UAAU;IACVC,UAAU;IACVC,eAAe;IACfC,cAAc;IACdC,gBAAgB;IAChBC,oBAAoB;IACpBC;EACF,CAAC,GAAGjB,aAAa,CAACK,KAAK,EAAEE,eAAe,EAAED,OAAO,CAAC;;EAElD;EACA,MAAMY,aAAa,GAAGf,cAAc,CAACK,IAAI,CAAC;EAE1C,IAAI,CAACH,KAAK,EAAE;IACV,oBAAOH,OAAA;MAAAiB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACjC;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAE,GAAGzB,MAAM,CAAC0B,KAAK,IAAI1B,MAAM,CAAC2B,IAAI,EAAG;IAACC,OAAO,EAAErB,OAAQ;IAAAa,QAAA,eACjEjB,OAAA;MAAKsB,SAAS,EAAEzB,MAAM,CAAC6B,YAAa;MAACD,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAX,QAAA,gBACvEjB,OAAA;QAAMsB,SAAS,EAAEzB,MAAM,CAACgC,WAAY;QAACJ,OAAO,EAAErB,OAAQ;QAAAa,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpEL,aAAa,iBACZhB,OAAA,CAACgB,aAAa;QACZb,KAAK,EAAEA,KAAM;QACbO,UAAU,EAAEA,UAAW;QACvBC,eAAe,EAAEA,eAAgB;QACjCH,YAAY,EAAEA,YAAa;QAC3BC,UAAU,EAAEA,UAAW;QACvBG,cAAc,EAAEA,cAAe;QAC/BC,gBAAgB,EAAEA,gBAAiB;QACnCC,oBAAoB,EAAEA,oBAAqB;QAC3CC,eAAe,EAAEA;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAvCQL,KAAK;EAAA,QAURJ,aAAa;AAAA;AAAAgC,EAAA,GAVV5B,KAAK;AAyCd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}