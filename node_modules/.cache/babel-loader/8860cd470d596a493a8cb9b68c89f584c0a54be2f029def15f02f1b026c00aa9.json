{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from './QAMode';\nimport SelectionMode from './SelectionMode';\nimport styles from '../styles/Modal.module.css';\nimport { useModalLogic } from '../utils/modalUtils';\nimport { useQuizContext } from '../context/QuizContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modeComponents = {\n  1: QAMode,\n  2: SelectionMode\n};\nfunction Modal({\n  block,\n  onClose\n}) {\n  _s();\n  const {\n    selectedMode,\n    markBlockAsUsed\n  } = useQuizContext();\n  const {\n    handleSelectCategory,\n    timerStarted,\n    handleShowAnswer,\n    showAnswer\n  } = useModalLogic(block, markBlockAsUsed, onClose);\n  const ModeComponent = modeComponents[selectedMode];\n  if (!block) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), ModeComponent && /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block.block,\n        showAnswer: showAnswer,\n        handleShowAnswer: handleShowAnswer,\n        handleSelectCategory: handleSelectCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"22KbVLfCs9L161uEMCot53oss4Y=\", false, function () {\n  return [useQuizContext, useModalLogic];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","styles","useModalLogic","useQuizContext","jsxDEV","_jsxDEV","modeComponents","Modal","block","onClose","_s","selectedMode","markBlockAsUsed","handleSelectCategory","timerStarted","handleShowAnswer","showAnswer","ModeComponent","className","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from './QAMode';\r\nimport SelectionMode from './SelectionMode';\r\nimport styles from '../styles/Modal.module.css';\r\nimport { useModalLogic } from '../utils/modalUtils';\r\nimport { useQuizContext } from '../context/QuizContext';\r\n\r\nconst modeComponents = {\r\n  1: QAMode,\r\n  2: SelectionMode,\r\n};\r\n\r\nfunction Modal({ block, onClose }) {\r\n  const { selectedMode, markBlockAsUsed } = useQuizContext();\r\n  const { handleSelectCategory, timerStarted, handleShowAnswer, showAnswer } = useModalLogic(block, markBlockAsUsed, onClose);\r\n  const ModeComponent = modeComponents[selectedMode];\r\n\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        {ModeComponent && (\r\n          <ModeComponent\r\n            block={block.block}\r\n            showAnswer={showAnswer}\r\n            handleShowAnswer={handleShowAnswer}\r\n            handleSelectCategory={handleSelectCategory}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAEP,MAAM;EACT,CAAC,EAAEC;AACL,CAAC;AAED,SAASO,KAAKA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGT,cAAc,CAAC,CAAC;EAC1D,MAAM;IAAEU,oBAAoB;IAAEC,YAAY;IAAEC,gBAAgB;IAAEC;EAAW,CAAC,GAAGd,aAAa,CAACM,KAAK,EAAEI,eAAe,EAAEH,OAAO,CAAC;EAC3H,MAAMQ,aAAa,GAAGX,cAAc,CAACK,YAAY,CAAC;EAElD,IAAI,CAACH,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAKa,SAAS,EAAE,GAAGjB,MAAM,CAACkB,KAAK,IAAIlB,MAAM,CAACmB,IAAI,EAAG;IAACC,OAAO,EAAEZ,OAAQ;IAAAa,QAAA,eACjEjB,OAAA;MAAKa,SAAS,EAAEjB,MAAM,CAACsB,YAAa;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,gBACvEjB,OAAA;QAAMa,SAAS,EAAEjB,MAAM,CAACyB,WAAY;QAACL,OAAO,EAAEZ,OAAQ;QAAAa,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpEb,aAAa,iBACZZ,OAAA,CAACY,aAAa;QACZT,KAAK,EAAEA,KAAK,CAACA,KAAM;QACnBQ,UAAU,EAAEA,UAAW;QACvBD,gBAAgB,EAAEA,gBAAiB;QACnCF,oBAAoB,EAAEA;MAAqB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAxBQH,KAAK;EAAA,QAC8BJ,cAAc,EACqBD,aAAa;AAAA;AAAA6B,EAAA,GAFnFxB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}