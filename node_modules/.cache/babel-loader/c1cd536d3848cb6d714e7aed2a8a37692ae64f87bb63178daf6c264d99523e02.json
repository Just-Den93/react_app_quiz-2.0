{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useQuizPageLogic() {\n  _s();\n  const [usedBlocks, setUsedBlocks] = useState(() => {\n    const saved = localStorage.getItem('usedBlocks');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const markBlockAsUsed = (categoryName, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      updatedUsedBlocks[categoryName].push(blockId);\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\n      return updatedUsedBlocks;\n    });\n  };\n  useEffect(() => {\n    localStorage.setItem('usedBlocks', JSON.stringify(usedBlocks));\n  }, [usedBlocks]);\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return {\n    usedBlocks,\n    isSettingsVisible,\n    markBlockAsUsed,\n    showSettings,\n    hideSettings\n  };\n}\n_s(useQuizPageLogic, \"3pH81XPxN1TGQdoWty9Q16g6FwQ=\");","map":{"version":3,"names":["useState","useEffect","useQuizPageLogic","_s","usedBlocks","setUsedBlocks","saved","localStorage","getItem","JSON","parse","isSettingsVisible","setIsSettingsVisible","markBlockAsUsed","categoryName","blockId","prevUsedBlocks","updatedUsedBlocks","push","setItem","stringify","showSettings","hideSettings"],"sources":["E:/quiz-app-react/src/utils/quizPageUtils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport function useQuizPageLogic() {\r\n  const [usedBlocks, setUsedBlocks] = useState(() => {\r\n    const saved = localStorage.getItem('usedBlocks');\r\n    return saved ? JSON.parse(saved) : {};\r\n  });\r\n\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  const markBlockAsUsed = (categoryName, blockId) => {\r\n    setUsedBlocks((prevUsedBlocks) => {\r\n      const updatedUsedBlocks = { ...prevUsedBlocks };\r\n      if (!updatedUsedBlocks[categoryName]) {\r\n        updatedUsedBlocks[categoryName] = [];\r\n      }\r\n      updatedUsedBlocks[categoryName].push(blockId);\r\n\r\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\r\n      return updatedUsedBlocks;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('usedBlocks', JSON.stringify(usedBlocks));\r\n  }, [usedBlocks]);\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  return {\r\n    usedBlocks,\r\n    isSettingsVisible,\r\n    markBlockAsUsed,\r\n    showSettings,\r\n    hideSettings,\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,MAAM;IACjD,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMa,eAAe,GAAGA,CAACC,YAAY,EAAEC,OAAO,KAAK;IACjDV,aAAa,CAAEW,cAAc,IAAK;MAChC,MAAMC,iBAAiB,GAAG;QAAE,GAAGD;MAAe,CAAC;MAC/C,IAAI,CAACC,iBAAiB,CAACH,YAAY,CAAC,EAAE;QACpCG,iBAAiB,CAACH,YAAY,CAAC,GAAG,EAAE;MACtC;MACAG,iBAAiB,CAACH,YAAY,CAAC,CAACI,IAAI,CAACH,OAAO,CAAC;MAE7CR,YAAY,CAACY,OAAO,CAAC,YAAY,EAAEV,IAAI,CAACW,SAAS,CAACH,iBAAiB,CAAC,CAAC;MACrE,OAAOA,iBAAiB;IAC1B,CAAC,CAAC;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdM,YAAY,CAACY,OAAO,CAAC,YAAY,EAAEV,IAAI,CAACW,SAAS,CAAChB,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACzBT,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBV,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,OAAO;IACLR,UAAU;IACVO,iBAAiB;IACjBE,eAAe;IACfQ,YAAY;IACZC;EACF,CAAC;AACH;AAACnB,EAAA,CAxCeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}