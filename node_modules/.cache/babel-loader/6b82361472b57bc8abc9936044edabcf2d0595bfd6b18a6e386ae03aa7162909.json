{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Modal from './Modal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { useQuizContext } from '../context/QuizContext';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { useModalLogic } from '../utils/modalUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    quizStates,\n    updateQuizState,\n    setShowQuizPage,\n    selectedMode,\n    currentQuizId,\n    markBlockAsUsed\n  } = useQuizContext();\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\n  const [data, setData] = useState(currentQuizState.data || null);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null); // Состояние для выбранного блока\n\n  useEffect(() => {\n    if (!data && currentQuizId && selectedMode) {\n      const selectedData = loadJsonDataByMode(selectedMode);\n      if (selectedData) {\n        setData(selectedData.categories);\n        updateQuizState(currentQuizId, {\n          data: selectedData.categories\n        });\n      }\n    }\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\n\n  // Логика для работы с модальным окном\n  const {\n    timerStarted,\n    timerEnded,\n    showAnswer,\n    setTimerStarted,\n    handleTimerEnd,\n    handleShowAnswer,\n    handleSelectCategory,\n    handleForceStop\n  } = useModalLogic(selectedBlock, markBlockAsUsed, () => setSelectedBlock(null));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ContentContainer, {\n        data: data,\n        setSelectedBlock: setSelectedBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n        block: selectedBlock,\n        onClose: () => setSelectedBlock(null),\n        timerStarted: timerStarted,\n        timerEnded: timerEnded,\n        showAnswer: showAnswer,\n        setTimerStarted: setTimerStarted,\n        handleTimerEnd: handleTimerEnd,\n        handleShowAnswer: handleShowAnswer,\n        handleSelectCategory: handleSelectCategory,\n        handleForceStop: handleForceStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: () => setIsSettingsVisible(true),\n      showMainMenu: () => setShowQuizPage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: () => setIsSettingsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"10kkUbapl17w1VYwY7mX6oa/UiA=\", false, function () {\n  return [useQuizContext, useModalLogic];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Header","ContentContainer","EndMessage","MenuModal","Modal","Settings","styles","useQuizContext","loadJsonDataByMode","useModalLogic","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","_s","quizStates","updateQuizState","setShowQuizPage","selectedMode","currentQuizId","markBlockAsUsed","currentQuizState","data","setData","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedData","categories","timerStarted","timerEnded","showAnswer","setTimerStarted","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","block","onClose","showSettings","showMainMenu","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Modal from './Modal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { useQuizContext } from '../context/QuizContext';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\nimport { useModalLogic } from '../utils/modalUtils';\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, updateQuizState, setShowQuizPage, selectedMode, currentQuizId, markBlockAsUsed } = useQuizContext();\r\n \r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [data, setData] = useState(currentQuizState.data || null);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null); // Состояние для выбранного блока\r\n\r\n  useEffect(() => {\r\n    if (!data && currentQuizId && selectedMode) {\r\n      const selectedData = loadJsonDataByMode(selectedMode);\r\n      if (selectedData) {\r\n        setData(selectedData.categories);\r\n        updateQuizState(currentQuizId, { data: selectedData.categories });\r\n      }\r\n    }\r\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\r\n\r\n  // Логика для работы с модальным окном\r\n  const {\r\n    timerStarted,\r\n    timerEnded,\r\n    showAnswer,\r\n    setTimerStarted,\r\n    handleTimerEnd,\r\n    handleShowAnswer,\r\n    handleSelectCategory,\r\n    handleForceStop,\r\n  } = useModalLogic(selectedBlock, markBlockAsUsed, () => setSelectedBlock(null));\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      {data ? (\r\n        <>\r\n          <ContentContainer data={data} setSelectedBlock={setSelectedBlock} />\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              onClose={() => setSelectedBlock(null)}\r\n              timerStarted={timerStarted}\r\n              timerEnded={timerEnded}\r\n              showAnswer={showAnswer}\r\n              setTimerStarted={setTimerStarted}\r\n              handleTimerEnd={handleTimerEnd}\r\n              handleShowAnswer={handleShowAnswer}\r\n              handleSelectCategory={handleSelectCategory}\r\n              handleForceStop={handleForceStop}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal showSettings={() => setIsSettingsVisible(true)} showMainMenu={() => setShowQuizPage(false)} />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}