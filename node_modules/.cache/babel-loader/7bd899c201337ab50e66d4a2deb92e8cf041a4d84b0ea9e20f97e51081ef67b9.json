{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\MenuModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Settings from './Settings';\nimport styles from '../styles/MenuModal.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MenuModal() {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      if (isVisible) {\n        closeMenuModal();\n      } else {\n        showMenuModal();\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isVisible]);\n  const showMenuModal = () => {\n    setIsVisible(true);\n  };\n  const closeMenuModal = () => {\n    setIsVisible(false);\n    setIsSettingsVisible(false);\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"menu-modal\",\n    className: styles.menuModal,\n    style: {\n      display: isVisible ? 'flex' : 'none',\n      opacity: isVisible ? 1 : 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.menuModalContent,\n      children: !isSettingsVisible ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-game-button\",\n          className: styles.menuButton,\n          onClick: handleNewGame,\n          children: \"\\u041D\\u043E\\u0432\\u0430 \\u0433\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"continue-button\",\n          className: styles.menuButton,\n          onClick: closeMenuModal,\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u0432\\u0436\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"settings-button\",\n          className: styles.menuButton,\n          onClick: showSettings,\n          children: \"\\u041D\\u0430\\u043B\\u0430\\u0448\\u0442\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Settings, {\n        onClose: closeMenuModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuModal, \"k7FZ8h2/ztBPSgjO0q6a/q0kDis=\");\n_c = MenuModal;\nexport default MenuModal;\nvar _c;\n$RefreshReg$(_c, \"MenuModal\");","map":{"version":3,"names":["React","useState","Settings","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuModal","_s","isVisible","setIsVisible","isSettingsVisible","setIsSettingsVisible","handleKeyDown","event","key","closeMenuModal","showMenuModal","useEffect","window","addEventListener","removeEventListener","showSettings","id","className","menuModal","style","display","opacity","children","menuModalContent","menuButton","onClick","handleNewGame","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/MenuModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/MenuModal.module.css';\r\n\r\nfunction MenuModal() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Escape') {\r\n      if (isVisible) {\r\n        closeMenuModal();\r\n      } else {\r\n        showMenuModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isVisible]);\r\n\r\n  const showMenuModal = () => {\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const closeMenuModal = () => {\r\n    setIsVisible(false);\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"menu-modal\"\r\n      className={styles.menuModal}\r\n      style={{ display: isVisible ? 'flex' : 'none', opacity: isVisible ? 1 : 0 }}\r\n    >\r\n      <div className={styles.menuModalContent}>\r\n        {!isSettingsVisible ? (\r\n          <>\r\n            <button id=\"new-game-button\" className={styles.menuButton} onClick={handleNewGame}>\r\n              Нова гра\r\n            </button>\r\n            <button id=\"continue-button\" className={styles.menuButton} onClick={closeMenuModal}>\r\n              Продовжити\r\n            </button>\r\n            <button id=\"settings-button\" className={styles.menuButton} onClick={showSettings}>\r\n              Налаштування\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <Settings onClose={closeMenuModal} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}