{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from './QAMode';\nimport SelectionMode from './SelectionMode';\nimport styles from '../styles/Modal.module.css';\nimport { useQuizContext } from '../context/QuizContext';\n// Маппинг mode на соответствующие компоненты\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modeComponents = {\n  1: QAMode,\n  2: SelectionMode\n  // Другие режимы можно добавить здесь\n};\nfunction Modal({\n  block,\n  onClose,\n  onSelectCategory\n}) {\n  _s();\n  const {\n    selectedMode\n  } = useQuizContext(); // Получаем режим напрямую из контекста\n\n  const ModeComponent = modeComponents[selectedMode];\n\n  // Если данных нет, просто не рендерим ничего\n  if (!block) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), ModeComponent && /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block,\n        onSelectCategory: onSelectCategory // Передаем функцию для изменения состояния\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"oNjWi0semKfGyRH3QerL7JcZmZ0=\", false, function () {\n  return [useQuizContext];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","styles","useQuizContext","jsxDEV","_jsxDEV","modeComponents","Modal","block","onClose","onSelectCategory","_s","selectedMode","ModeComponent","className","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from './QAMode';\r\nimport SelectionMode from './SelectionMode';\r\nimport styles from '../styles/Modal.module.css';\r\nimport { useQuizContext } from '../context/QuizContext';\r\n// Маппинг mode на соответствующие компоненты\r\nconst modeComponents = {\r\n  1: QAMode,\r\n  2: SelectionMode,\r\n  // Другие режимы можно добавить здесь\r\n};\r\n\r\nfunction Modal({ block, onClose, onSelectCategory }) {\r\n  const { selectedMode } = useQuizContext(); // Получаем режим напрямую из контекста\r\n\r\n  const ModeComponent = modeComponents[selectedMode];\r\n\r\n  // Если данных нет, просто не рендерим ничего\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        {ModeComponent && (\r\n          <ModeComponent\r\n            block={block}\r\n            onSelectCategory={onSelectCategory}  // Передаем функцию для изменения состояния\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,cAAc,QAAQ,wBAAwB;AACvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAEN,MAAM;EACT,CAAC,EAAEC;EACH;AACF,CAAC;AAED,SAASM,KAAKA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAa,CAAC,GAAGT,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE3C,MAAMU,aAAa,GAAGP,cAAc,CAACM,YAAY,CAAC;;EAElD;EACA,IAAI,CAACJ,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAKS,SAAS,EAAE,GAAGZ,MAAM,CAACa,KAAK,IAAIb,MAAM,CAACc,IAAI,EAAG;IAACC,OAAO,EAAER,OAAQ;IAAAS,QAAA,eACjEb,OAAA;MAAKS,SAAS,EAAEZ,MAAM,CAACiB,YAAa;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,gBACvEb,OAAA;QAAMS,SAAS,EAAEZ,MAAM,CAACoB,WAAY;QAACL,OAAO,EAAER,OAAQ;QAAAS,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpEb,aAAa,iBACZR,OAAA,CAACQ,aAAa;QACZL,KAAK,EAAEA,KAAM;QACbE,gBAAgB,EAAEA,gBAAiB,CAAE;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAvBQJ,KAAK;EAAA,QACaJ,cAAc;AAAA;AAAAwB,EAAA,GADhCpB,KAAK;AAyBd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}