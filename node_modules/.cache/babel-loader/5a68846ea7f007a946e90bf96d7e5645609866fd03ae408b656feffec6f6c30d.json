{"ast":null,"code":"const markBlockAsUsed = (quizId, categoryId, blockId) => {\n  if (!categoryId) {\n    console.error('categoryId не определен, невозможно отметить блок как используемый');\n    return;\n  }\n  setQuizStates(prevStates => {\n    const previousState = prevStates[quizId] || {};\n    const updatedUsedBlocks = {\n      ...previousState.usedBlocks\n    };\n    if (!updatedUsedBlocks[categoryId]) {\n      updatedUsedBlocks[categoryId] = [];\n    }\n    if (!updatedUsedBlocks[categoryId].includes(blockId)) {\n      updatedUsedBlocks[categoryId].push(blockId);\n    }\n    const updatedStates = {\n      ...prevStates,\n      [quizId]: {\n        ...previousState,\n        usedBlocks: updatedUsedBlocks\n      }\n    };\n    localStorage.setItem('quizStates', JSON.stringify(updatedStates));\n    localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\n    return updatedStates;\n  });\n};","map":{"version":3,"names":["markBlockAsUsed","quizId","categoryId","blockId","console","error","setQuizStates","prevStates","previousState","updatedUsedBlocks","usedBlocks","includes","push","updatedStates","localStorage","setItem","JSON","stringify"],"sources":["E:/quiz-app-react/src/context/QuizContext.js"],"sourcesContent":["const markBlockAsUsed = (quizId, categoryId, blockId) => {\r\n  if (!categoryId) {\r\n    console.error('categoryId не определен, невозможно отметить блок как используемый');\r\n    return;\r\n  }\r\n\r\n  setQuizStates(prevStates => {\r\n    const previousState = prevStates[quizId] || {};\r\n    const updatedUsedBlocks = { ...previousState.usedBlocks };\r\n\r\n    if (!updatedUsedBlocks[categoryId]) {\r\n      updatedUsedBlocks[categoryId] = [];\r\n    }\r\n\r\n    if (!updatedUsedBlocks[categoryId].includes(blockId)) {\r\n      updatedUsedBlocks[categoryId].push(blockId);\r\n    }\r\n\r\n    const updatedStates = {\r\n      ...prevStates,\r\n      [quizId]: {\r\n        ...previousState,\r\n        usedBlocks: updatedUsedBlocks,\r\n      },\r\n    };\r\n\r\n    localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n    localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\r\n\r\n    return updatedStates;\r\n  });\r\n};\r\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGA,CAACC,MAAM,EAAEC,UAAU,EAAEC,OAAO,KAAK;EACvD,IAAI,CAACD,UAAU,EAAE;IACfE,OAAO,CAACC,KAAK,CAAC,oEAAoE,CAAC;IACnF;EACF;EAEAC,aAAa,CAACC,UAAU,IAAI;IAC1B,MAAMC,aAAa,GAAGD,UAAU,CAACN,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9C,MAAMQ,iBAAiB,GAAG;MAAE,GAAGD,aAAa,CAACE;IAAW,CAAC;IAEzD,IAAI,CAACD,iBAAiB,CAACP,UAAU,CAAC,EAAE;MAClCO,iBAAiB,CAACP,UAAU,CAAC,GAAG,EAAE;IACpC;IAEA,IAAI,CAACO,iBAAiB,CAACP,UAAU,CAAC,CAACS,QAAQ,CAACR,OAAO,CAAC,EAAE;MACpDM,iBAAiB,CAACP,UAAU,CAAC,CAACU,IAAI,CAACT,OAAO,CAAC;IAC7C;IAEA,MAAMU,aAAa,GAAG;MACpB,GAAGN,UAAU;MACb,CAACN,MAAM,GAAG;QACR,GAAGO,aAAa;QAChBE,UAAU,EAAED;MACd;IACF,CAAC;IAEDK,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC,CAAC;IACjEC,YAAY,CAACC,OAAO,CAAC,cAAcd,MAAM,EAAE,EAAEe,IAAI,CAACC,SAAS,CAACR,iBAAiB,CAAC,CAAC;IAE/E,OAAOI,aAAa;EACtB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}