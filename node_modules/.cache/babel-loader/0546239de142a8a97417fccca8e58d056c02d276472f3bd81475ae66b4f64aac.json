{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { setQuizState, markBlockAsUsed } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  quizState,\n  setQuizState,\n  markBlockAsUsed,\n  showMainMenu,\n  handleNewGame\n}) => {\n  _s();\n  var _quizState$mode;\n  const {\n    mode\n  } = useParams();\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (mode) {\n      const selectedData = loadJsonDataByMode(parseInt(mode, 10));\n      if (selectedData) {\n        setData(selectedData.categories);\n        setQuizState(mode, {\n          categories: selectedData.categories\n        });\n        console.log('Data loaded for mode:', mode, selectedData.categories); // Debugging log\n      } else {\n        console.log('No data found for mode:', mode); // Debugging log\n      }\n    }\n  }, [mode, setQuizState]);\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: ((_quizState$mode = quizState[mode]) === null || _quizState$mode === void 0 ? void 0 : _quizState$mode.usedBlocks) || {},\n      markBlockAsUsed: (categoryName, blockId) => markBlockAsUsed(mode, categoryName, blockId),\n      data: data,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings,\n      showMainMenu: showMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"Zrh/cB9nJCpfoltBDKKIXUdLaAw=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nconst mapStateToProps = state => ({\n  quizState: state.quiz\n});\nconst mapDispatchToProps = {\n  setQuizState,\n  markBlockAsUsed\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizPage);\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","connect","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","loadJsonDataByMode","setQuizState","markBlockAsUsed","jsxDEV","_jsxDEV","QuizPage","quizState","showMainMenu","handleNewGame","_s","_quizState$mode","mode","isSettingsVisible","setIsSettingsVisible","data","setData","selectedData","parseInt","categories","console","log","showSettings","hideSettings","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","usedBlocks","categoryName","blockId","onClose","_c","mapStateToProps","state","quiz","mapDispatchToProps","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\nimport { setQuizState, markBlockAsUsed } from '../store/actions';\r\n\r\nconst QuizPage = ({ quizState, setQuizState, markBlockAsUsed, showMainMenu, handleNewGame }) => {\r\n  const { mode } = useParams();\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (mode) {\r\n      const selectedData = loadJsonDataByMode(parseInt(mode, 10));\r\n      if (selectedData) {\r\n        setData(selectedData.categories);\r\n        setQuizState(mode, { categories: selectedData.categories });\r\n        console.log('Data loaded for mode:', mode, selectedData.categories); // Debugging log\r\n      } else {\r\n        console.log('No data found for mode:', mode); // Debugging log\r\n      }\r\n    }\r\n  }, [mode, setQuizState]);\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      <ContentContainer\r\n        usedBlocks={quizState[mode]?.usedBlocks || {}}\r\n        markBlockAsUsed={(categoryName, blockId) => markBlockAsUsed(mode, categoryName, blockId)}\r\n        data={data}\r\n        mode={mode}\r\n      />\r\n      <EndMessage />\r\n      <MenuModal showSettings={showSettings} showMainMenu={showMainMenu} />\r\n      {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quizState: state.quiz,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setQuizState,\r\n  markBlockAsUsed,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizPage);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}