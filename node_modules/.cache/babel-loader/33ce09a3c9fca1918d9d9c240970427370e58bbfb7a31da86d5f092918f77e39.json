{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\SelectionMode\\\\SelectionMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StartTimerButton from '../StartTimerButton/StartTimerButton';\nimport Timer from '../Timer/Timer';\nimport SelectCategoryButton from '../SelectCategoryButton/SelectCategoryButton';\nimport ShowAnswerButton from '../ShowAnswerButton/ShowAnswerButton';\nimport HintButton from '../HintButton/HintButton';\nimport styles from './SelectionMode.module.css';\n\n// Маппинг чисел и их текстовых эквивалентов на украинском языке\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberWords = {\n  \"0\": \"нуль\",\n  \"1\": \"один\",\n  \"2\": \"два\",\n  \"3\": \"три\",\n  \"4\": \"чотири\",\n  \"5\": \"п'ять\",\n  \"6\": \"шість\",\n  \"7\": \"сім\",\n  \"8\": \"вісім\",\n  \"9\": \"дев'ять\",\n  \"10\": \"десять\",\n  \"20\": \"двадцять\",\n  \"30\": \"тридцять\",\n  \"40\": \"сорок\",\n  \"50\": \"п'ятдесят\",\n  \"60\": \"шістдесят\",\n  \"70\": \"сімдесят\",\n  \"80\": \"вісімдесят\",\n  \"90\": \"дев'яносто\",\n  \"100\": \"сто\",\n  \"1000\": \"тисяча\",\n  \"2000\": \"дві\",\n  \"3000\": \"три\"\n};\n\n// Функция преобразования чисел в текст\nconst numberToWords = num => {\n  if (numberWords[num]) return numberWords[num];\n  return num;\n};\n\n// Функция преобразования слов в числа\nconst wordsToNumber = word => {\n  const foundEntry = Object.entries(numberWords).find(([key, value]) => value === word.toLowerCase());\n  return foundEntry ? foundEntry[0] : word;\n};\nfunction SelectionMode({\n  block,\n  categoryName,\n  showAnswer,\n  setTimerStarted,\n  timerStarted,\n  timerEnded,\n  handleTimerEnd,\n  handleShowAnswer,\n  handleSelectCategory,\n  handleForceStop\n}) {\n  _s();\n  const [answerShown, setAnswerShown] = useState(false);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [displayText, setDisplayText] = useState(block.question); // Изначально показываем вопрос\n  const [textFontSize, setTextFontSize] = useState(30); // Изначальный размер шрифта для вопроса\n\n  useEffect(() => {\n    setAnswerShown(false);\n    setHintUsed(false);\n    setHighlightedOptions([]);\n    setTimerStarted(false);\n    setDisplayText(block.question); // Сброс отображаемого текста при смене блока\n    setTextFontSize(30); // Сброс размера шрифта при смене блока\n  }, [block, setTimerStarted]);\n  const handleForceStopInternal = () => {\n    handleForceStop();\n  };\n  const handleShowAnswerInternal = () => {\n    handleShowAnswer();\n    setAnswerShown(true);\n\n    // Изменение отображаемого текста на 'text' с переносом после символа '('\n    const formattedText = formatText(block.text);\n    setDisplayText(highlightCorrectAnswer(formattedText, block['correct answer'])); // Меняем отображаемый текст на отформатированный и выделяем правильный ответ\n\n    // Проверка длины текста ответа и изменение размера шрифта\n    const textLength = block.text.length;\n    if (textLength <= 90) {\n      setTextFontSize(22);\n    } else if (textLength <= 110) {\n      setTextFontSize(20);\n    } else if (textLength <= 150) {\n      setTextFontSize(18);\n    } else {\n      setTextFontSize(16); // Для текстов больше 150 символов уменьшаем шрифт до 16\n    }\n    const correctAnswerIndex = block.options.findIndex(option => option === block['correct answer']);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex) {\n        return '';\n      }\n      return styles.incorrectOption;\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const handleHintInternal = () => {\n    setHintUsed(true);\n    const correctAnswerIndex = block.options.findIndex(option => option === block['correct answer']);\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * block.options.length);\n    } while (randomIndex === correctAnswerIndex);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex || index === randomIndex) {\n        return '';\n      }\n      return styles.incorrectOption;\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const handleStartTimerInternal = () => {\n    setTimerStarted(true);\n  };\n  const handleSelectCategoryInternal = () => {\n    handleSelectCategory(block.categoryId, block.id);\n  };\n  const getOptionFontSize = text => {\n    const length = text.length;\n    if (length <= 10) {\n      return 25;\n    } else if (length <= 22) {\n      return 22;\n    } else {\n      return 18; // Оставляем размер шрифта по умолчанию\n    }\n  };\n\n  // Функция для форматирования текста, добавляющая перенос строки после символа '('\n  const formatText = text => {\n    const index = text.indexOf('(');\n    if (index !== -1) {\n      return text.slice(0, index) + '\\n' + text.slice(index);\n    }\n    return text;\n  };\n\n  // Функция для выделения правильного ответа цветом, включая проверку на числа и частичное совпадение\n  const highlightCorrectAnswer = (text, correctAnswer) => {\n    // Преобразуем числовой ответ в слова и наоборот\n    const numericAnswer = correctAnswer.split(' ').map(word => wordsToNumber(word)).join(' ');\n    const wordAnswer = correctAnswer.split(' ').map(word => numberToWords(word)).join(' ');\n\n    // Проверка на точное совпадение\n    const exactMatchRegex = new RegExp(`(${correctAnswer}|${numericAnswer}|${wordAnswer})`, 'gi');\n\n    // Проверка на частичное совпадение по окончанию (последние два символа)\n    const partialMatchRegex = new RegExp(`(${correctAnswer.split(' ').map(word => word.slice(0, -2)).join('\\\\s*')}\\\\S*)`, 'gi');\n\n    // Проверка на частичное совпадение по первым трем символам\n    const initialThreeMatchRegex = new RegExp(`(${correctAnswer.split(' ').map(word => word.slice(0, 3)).join('\\\\S*')}\\\\S*)`, 'gi');\n    if (exactMatchRegex.test(text)) {\n      return text.replace(exactMatchRegex, `<span style=\"color: #e21b3c;\">$1</span>`);\n    }\n    if (partialMatchRegex.test(text)) {\n      return text.replace(partialMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\n    }\n    if (initialThreeMatchRegex.test(text)) {\n      return text.replace(initialThreeMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\n    }\n    return text;\n  };\n  if (!block) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectedInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.infoCategoryName,\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectedNumber,\n        children: block.id + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectionMode,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          style: {\n            fontSize: `${textFontSize}px`,\n            whiteSpace: 'pre-line'\n          },\n          dangerouslySetInnerHTML: {\n            __html: displayText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.options,\n          children: block.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.option} ${highlightedOptions[index]}`,\n            style: {\n              fontSize: `${getOptionFontSize(option)}px`\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controlBlock,\n      children: !timerStarted ? /*#__PURE__*/_jsxDEV(StartTimerButton, {\n        onClick: handleStartTimerInternal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : !timerEnded ? /*#__PURE__*/_jsxDEV(Timer, {\n        duration: 30,\n        onEnd: handleTimerEnd,\n        onForceStop: handleForceStopInternal\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this) : !answerShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(ShowAnswerButton, {\n          onClick: handleShowAnswerInternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), !hintUsed && /*#__PURE__*/_jsxDEV(HintButton, {\n          onClick: handleHintInternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SelectCategoryButton, {\n        onClick: handleSelectCategoryInternal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionMode, \"znZ3049F+CX25nIGe+yd5jpao3A=\");\n_c = SelectionMode;\nexport default SelectionMode;\nvar _c;\n$RefreshReg$(_c, \"SelectionMode\");","map":{"version":3,"names":["React","useState","useEffect","StartTimerButton","Timer","SelectCategoryButton","ShowAnswerButton","HintButton","styles","jsxDEV","_jsxDEV","numberWords","numberToWords","num","wordsToNumber","word","foundEntry","Object","entries","find","key","value","toLowerCase","SelectionMode","block","categoryName","showAnswer","setTimerStarted","timerStarted","timerEnded","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","_s","answerShown","setAnswerShown","hintUsed","setHintUsed","highlightedOptions","setHighlightedOptions","displayText","setDisplayText","question","textFontSize","setTextFontSize","handleForceStopInternal","handleShowAnswerInternal","formattedText","formatText","text","highlightCorrectAnswer","textLength","length","correctAnswerIndex","options","findIndex","option","updatedOptions","map","index","incorrectOption","handleHintInternal","randomIndex","Math","floor","random","handleStartTimerInternal","handleSelectCategoryInternal","categoryId","id","getOptionFontSize","indexOf","slice","correctAnswer","numericAnswer","split","join","wordAnswer","exactMatchRegex","RegExp","partialMatchRegex","initialThreeMatchRegex","test","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","className","content","selectedInfo","infoCategoryName","selectedNumber","wrapper","selectionMode","style","fontSize","whiteSpace","dangerouslySetInnerHTML","__html","controlBlock","onClick","duration","onEnd","onForceStop","buttonGroup","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/SelectionMode/SelectionMode.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport StartTimerButton from '../StartTimerButton/StartTimerButton';\r\nimport Timer from '../Timer/Timer';\r\nimport SelectCategoryButton from '../SelectCategoryButton/SelectCategoryButton';\r\nimport ShowAnswerButton from '../ShowAnswerButton/ShowAnswerButton';\r\nimport HintButton from '../HintButton/HintButton';\r\nimport styles from './SelectionMode.module.css';\r\n\r\n// Маппинг чисел и их текстовых эквивалентов на украинском языке\r\nconst numberWords = {\r\n  \"0\": \"нуль\",\r\n  \"1\": \"один\",\r\n  \"2\": \"два\",\r\n  \"3\": \"три\",\r\n  \"4\": \"чотири\",\r\n  \"5\": \"п'ять\",\r\n  \"6\": \"шість\",\r\n  \"7\": \"сім\",\r\n  \"8\": \"вісім\",\r\n  \"9\": \"дев'ять\",\r\n  \"10\": \"десять\",\r\n  \"20\": \"двадцять\",\r\n  \"30\": \"тридцять\",\r\n  \"40\": \"сорок\",\r\n  \"50\": \"п'ятдесят\",\r\n  \"60\": \"шістдесят\",\r\n  \"70\": \"сімдесят\",\r\n  \"80\": \"вісімдесят\",\r\n  \"90\": \"дев'яносто\",\r\n  \"100\": \"сто\",\r\n  \"1000\": \"тисяча\",\r\n  \"2000\": \"дві\",\r\n  \"3000\": \"три\"\r\n};\r\n\r\n// Функция преобразования чисел в текст\r\nconst numberToWords = (num) => {\r\n  if (numberWords[num]) return numberWords[num];\r\n  return num;\r\n};\r\n\r\n// Функция преобразования слов в числа\r\nconst wordsToNumber = (word) => {\r\n  const foundEntry = Object.entries(numberWords).find(([key, value]) => value === word.toLowerCase());\r\n  return foundEntry ? foundEntry[0] : word;\r\n};\r\n\r\nfunction SelectionMode({\r\n  block,\r\n  categoryName,\r\n  showAnswer,\r\n  setTimerStarted,\r\n  timerStarted,\r\n  timerEnded,\r\n  handleTimerEnd,\r\n  handleShowAnswer,\r\n  handleSelectCategory,\r\n  handleForceStop,\r\n}) {\r\n  const [answerShown, setAnswerShown] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\r\n  const [displayText, setDisplayText] = useState(block.question); // Изначально показываем вопрос\r\n  const [textFontSize, setTextFontSize] = useState(30); // Изначальный размер шрифта для вопроса\r\n\r\n  useEffect(() => {\r\n    setAnswerShown(false);\r\n    setHintUsed(false);\r\n    setHighlightedOptions([]);\r\n    setTimerStarted(false);\r\n    setDisplayText(block.question); // Сброс отображаемого текста при смене блока\r\n    setTextFontSize(30); // Сброс размера шрифта при смене блока\r\n  }, [block, setTimerStarted]);\r\n\r\n  const handleForceStopInternal = () => {\r\n    handleForceStop();\r\n  };\r\n\r\n  const handleShowAnswerInternal = () => {\r\n    handleShowAnswer();\r\n    setAnswerShown(true);\r\n\r\n    // Изменение отображаемого текста на 'text' с переносом после символа '('\r\n    const formattedText = formatText(block.text);\r\n    setDisplayText(highlightCorrectAnswer(formattedText, block['correct answer'])); // Меняем отображаемый текст на отформатированный и выделяем правильный ответ\r\n\r\n    // Проверка длины текста ответа и изменение размера шрифта\r\n    const textLength = block.text.length;\r\n    if (textLength <= 90) {\r\n      setTextFontSize(22);\r\n    } else if (textLength <= 110) {\r\n      setTextFontSize(20);\r\n    } else if (textLength <= 150) {\r\n      setTextFontSize(18);\r\n    } else {\r\n      setTextFontSize(16); // Для текстов больше 150 символов уменьшаем шрифт до 16\r\n    }\r\n\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block['correct answer']\r\n    );\r\n\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex) {\r\n        return '';\r\n      }\r\n      return styles.incorrectOption;\r\n    });\r\n\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const handleHintInternal = () => {\r\n    setHintUsed(true);\r\n\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block['correct answer']\r\n    );\r\n\r\n    let randomIndex;\r\n    do {\r\n      randomIndex = Math.floor(Math.random() * block.options.length);\r\n    } while (randomIndex === correctAnswerIndex);\r\n\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex || index === randomIndex) {\r\n        return '';\r\n      }\r\n      return styles.incorrectOption;\r\n    });\r\n\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const handleStartTimerInternal = () => {\r\n    setTimerStarted(true);\r\n  };\r\n\r\n  const handleSelectCategoryInternal = () => {\r\n    handleSelectCategory(block.categoryId, block.id);\r\n  };\r\n\r\n  const getOptionFontSize = (text) => {\r\n    const length = text.length;\r\n    if (length <= 10) {\r\n      return 25;\r\n    } else if (length <= 22) {\r\n      return 22;\r\n    } else {\r\n      return 18; // Оставляем размер шрифта по умолчанию\r\n    }\r\n  };\r\n\r\n  // Функция для форматирования текста, добавляющая перенос строки после символа '('\r\n  const formatText = (text) => {\r\n    const index = text.indexOf('(');\r\n    if (index !== -1) {\r\n      return text.slice(0, index) + '\\n' + text.slice(index);\r\n    }\r\n    return text;\r\n  };\r\n\r\n  // Функция для выделения правильного ответа цветом, включая проверку на числа и частичное совпадение\r\n  const highlightCorrectAnswer = (text, correctAnswer) => {\r\n    // Преобразуем числовой ответ в слова и наоборот\r\n    const numericAnswer = correctAnswer.split(' ').map(word => wordsToNumber(word)).join(' ');\r\n    const wordAnswer = correctAnswer.split(' ').map(word => numberToWords(word)).join(' ');\r\n\r\n    // Проверка на точное совпадение\r\n    const exactMatchRegex = new RegExp(`(${correctAnswer}|${numericAnswer}|${wordAnswer})`, 'gi');\r\n    \r\n    // Проверка на частичное совпадение по окончанию (последние два символа)\r\n    const partialMatchRegex = new RegExp(`(${correctAnswer.split(' ').map(word => word.slice(0, -2)).join('\\\\s*')}\\\\S*)`, 'gi');\r\n\r\n    // Проверка на частичное совпадение по первым трем символам\r\n    const initialThreeMatchRegex = new RegExp(`(${correctAnswer.split(' ').map(word => word.slice(0, 3)).join('\\\\S*')}\\\\S*)`, 'gi');\r\n\r\n    if (exactMatchRegex.test(text)) {\r\n      return text.replace(exactMatchRegex, `<span style=\"color: #e21b3c;\">$1</span>`);\r\n    }\r\n\r\n    if (partialMatchRegex.test(text)) {\r\n      return text.replace(partialMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\r\n    }\r\n\r\n    if (initialThreeMatchRegex.test(text)) {\r\n      return text.replace(initialThreeMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\r\n    }\r\n\r\n    return text;\r\n  };\r\n\r\n  if (!block) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <div className={styles.selectedInfo}>\r\n        <span className={styles.infoCategoryName}>{categoryName}</span>\r\n        <div className={styles.selectedNumber}>{block.id + 1}</div>\r\n      </div>\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.selectionMode}>\r\n          <div\r\n            className={styles.question}\r\n            style={{ fontSize: `${textFontSize}px`, whiteSpace: 'pre-line' }}\r\n            dangerouslySetInnerHTML={{ __html: displayText }}\r\n          />\r\n          <div className={styles.options}>\r\n            {block.options.map((option, index) => (\r\n              <div\r\n                key={index}\r\n                className={`${styles.option} ${highlightedOptions[index]}`}\r\n                style={{ fontSize: `${getOptionFontSize(option)}px` }}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.controlBlock}>\r\n        {!timerStarted ? (\r\n          <StartTimerButton onClick={handleStartTimerInternal} />\r\n        ) : !timerEnded ? (\r\n          <Timer\r\n            key={block.id}\r\n            duration={30}\r\n            onEnd={handleTimerEnd}\r\n            onForceStop={handleForceStopInternal}\r\n          />\r\n        ) : !answerShown ? (\r\n          <div className={styles.buttonGroup}>\r\n            <ShowAnswerButton onClick={handleShowAnswerInternal} />\r\n            {!hintUsed && <HintButton onClick={handleHintInternal} />}\r\n          </div>\r\n        ) : (\r\n          <SelectCategoryButton onClick={handleSelectCategoryInternal} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionMode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}