{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\nexport function useQuizContext() {\n  _s();\n  return useContext(QuizContext);\n}\n_s(useQuizContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function QuizProvider({\n  children\n}) {\n  _s2();\n  const [showQuizPage, setShowQuizPage] = useState(() => {\n    return JSON.parse(localStorage.getItem('showQuizPage')) || false;\n  });\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\n    return localStorage.getItem('currentQuizId');\n  });\n  const [quizStates, setQuizStates] = useState(() => {\n    return JSON.parse(localStorage.getItem('quizStates')) || {};\n  });\n  useEffect(() => {\n    localStorage.setItem('showQuizPage', JSON.stringify(showQuizPage));\n  }, [showQuizPage]);\n  useEffect(() => {\n    localStorage.setItem('currentQuizId', currentQuizId);\n  }, [currentQuizId]);\n  useEffect(() => {\n    localStorage.setItem('quizStates', JSON.stringify(quizStates));\n  }, [quizStates]);\n  const updateQuizState = (uuid, newState) => {\n    setQuizStates(prevStates => ({\n      ...prevStates,\n      [uuid]: {\n        ...prevStates[uuid],\n        ...newState\n      }\n    }));\n  };\n  const markBlockAsUsed = (quizId, categoryId, blockId) => {\n    setQuizStates(prevStates => {\n      var _previousState$usedBl;\n      const previousState = prevStates[quizId] || {};\n      const updatedUsedBlocks = {\n        ...previousState.usedBlocks,\n        [categoryId]: [...(((_previousState$usedBl = previousState.usedBlocks) === null || _previousState$usedBl === void 0 ? void 0 : _previousState$usedBl[categoryId]) || []), blockId]\n      };\n      return {\n        ...prevStates,\n        [quizId]: {\n          ...previousState,\n          usedBlocks: updatedUsedBlocks\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      showQuizPage,\n      setShowQuizPage,\n      selectedMode,\n      setSelectedMode,\n      currentQuizId,\n      setCurrentQuizId,\n      quizStates,\n      setQuizStates,\n      // Добавляем setQuizStates в контекст\n      updateQuizState,\n      markBlockAsUsed\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuizProvider, \"Hy3dPhVTxbyQ5e8nRM7hArET8sU=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","QuizContext","useQuizContext","_s","QuizProvider","children","_s2","showQuizPage","setShowQuizPage","JSON","parse","localStorage","getItem","selectedMode","setSelectedMode","currentQuizId","setCurrentQuizId","quizStates","setQuizStates","setItem","stringify","updateQuizState","uuid","newState","prevStates","markBlockAsUsed","quizId","categoryId","blockId","_previousState$usedBl","previousState","updatedUsedBlocks","usedBlocks","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst QuizContext = createContext();\r\n\r\nexport function useQuizContext() {\r\n  return useContext(QuizContext);\r\n}\r\n\r\nexport function QuizProvider({ children }) {\r\n  const [showQuizPage, setShowQuizPage] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('showQuizPage')) || false;\r\n  });\r\n  const [selectedMode, setSelectedMode] = useState(null);\r\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\r\n    return localStorage.getItem('currentQuizId');\r\n  });\r\n  const [quizStates, setQuizStates] = useState(() => {\r\n    return JSON.parse(localStorage.getItem('quizStates')) || {};\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('showQuizPage', JSON.stringify(showQuizPage));\r\n  }, [showQuizPage]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('currentQuizId', currentQuizId);\r\n  }, [currentQuizId]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('quizStates', JSON.stringify(quizStates));\r\n  }, [quizStates]);\r\n\r\n  const updateQuizState = (uuid, newState) => {\r\n    setQuizStates(prevStates => ({\r\n      ...prevStates,\r\n      [uuid]: {\r\n        ...prevStates[uuid],\r\n        ...newState,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const markBlockAsUsed = (quizId, categoryId, blockId) => {\r\n    setQuizStates(prevStates => {\r\n      const previousState = prevStates[quizId] || {};\r\n      const updatedUsedBlocks = {\r\n        ...previousState.usedBlocks,\r\n        [categoryId]: [...(previousState.usedBlocks?.[categoryId] || []), blockId],\r\n      };\r\n\r\n      return {\r\n        ...prevStates,\r\n        [quizId]: {\r\n          ...previousState,\r\n          usedBlocks: updatedUsedBlocks,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <QuizContext.Provider value={{\r\n      showQuizPage,\r\n      setShowQuizPage,\r\n      selectedMode,\r\n      setSelectedMode,\r\n      currentQuizId,\r\n      setCurrentQuizId,\r\n      quizStates,\r\n      setQuizStates, // Добавляем setQuizStates в контекст\r\n      updateQuizState,\r\n      markBlockAsUsed,\r\n    }}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}