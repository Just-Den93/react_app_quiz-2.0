{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\SelectionMode\\\\SelectionMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StartTimerButton from '../StartTimerButton/StartTimerButton';\nimport Timer from '../Timer/Timer';\nimport SelectCategoryButton from '../SelectCategoryButton/SelectCategoryButton';\nimport ShowAnswerButton from '../ShowAnswerButton/ShowAnswerButton';\nimport HintButton from '../HintButton/HintButton';\nimport styles from './SelectionMode.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionMode({\n  block,\n  categoryName,\n  showAnswer,\n  setTimerStarted,\n  timerStarted,\n  timerEnded,\n  handleTimerEnd,\n  handleShowAnswer,\n  handleSelectCategory,\n  handleForceStop\n}) {\n  _s();\n  const [answerShown, setAnswerShown] = useState(false);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [displayText, setDisplayText] = useState(block.question); // Изначально показываем вопрос\n  const [textFontSize, setTextFontSize] = useState(30); // Изначальный размер шрифта для вопроса\n\n  useEffect(() => {\n    setAnswerShown(false);\n    setHintUsed(false);\n    setHighlightedOptions([]);\n    setTimerStarted(false);\n    setDisplayText(block.question); // Сброс отображаемого текста при смене блока\n    setTextFontSize(30); // Сброс размера шрифта при смене блока\n  }, [block, setTimerStarted]);\n  const handleForceStopInternal = () => {\n    handleForceStop();\n  };\n  const handleShowAnswerInternal = () => {\n    handleShowAnswer();\n    setAnswerShown(true);\n\n    // Изменение отображаемого текста на 'text' с переносом после символа '('\n    const formattedText = formatText(block.text);\n    setDisplayText(highlightCorrectAnswer(formattedText, block['correct answer'])); // Меняем отображаемый текст на отформатированный и выделяем правильный ответ\n\n    // Проверка длины текста ответа и изменение размера шрифта\n    const textLength = block.text.length;\n    if (textLength <= 90) {\n      setTextFontSize(22);\n    } else if (textLength <= 110) {\n      setTextFontSize(20);\n    } else if (textLength <= 150) {\n      setTextFontSize(18);\n    } else {\n      setTextFontSize(16); // Для текстов больше 150 символов уменьшаем шрифт до 16\n    }\n    const correctAnswerIndex = block.options.findIndex(option => option === block['correct answer']);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex) {\n        return '';\n      }\n      return styles.incorrectOption;\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const handleHintInternal = () => {\n    setHintUsed(true);\n    const correctAnswerIndex = block.options.findIndex(option => option === block['correct answer']);\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * block.options.length);\n    } while (randomIndex === correctAnswerIndex);\n    const updatedOptions = block.options.map((option, index) => {\n      if (index === correctAnswerIndex || index === randomIndex) {\n        return '';\n      }\n      return styles.incorrectOption;\n    });\n    setHighlightedOptions(updatedOptions);\n  };\n  const handleStartTimerInternal = () => {\n    setTimerStarted(true);\n  };\n  const handleSelectCategoryInternal = () => {\n    handleSelectCategory(block.categoryId, block.id);\n  };\n  const getOptionFontSize = text => {\n    const length = text.length;\n    if (length <= 10) {\n      return 25;\n    } else if (length <= 22) {\n      return 22;\n    } else {\n      return 18; // Оставляем размер шрифта по умолчанию\n    }\n  };\n\n  // Функция для форматирования текста, добавляющая перенос строки после символа '('\n  const formatText = text => {\n    const index = text.indexOf('(');\n    if (index !== -1) {\n      return text.slice(0, index) + '\\n' + text.slice(index);\n    }\n    return text;\n  };\n\n  // Функция для выделения правильного ответа цветом\n  const highlightCorrectAnswer = (text, correctAnswer) => {\n    const exactMatchRegex = new RegExp(`(${correctAnswer})`, 'gi');\n    const partialMatchRegex = new RegExp(`(${correctAnswer.slice(0, -2)})\\\\S*`, 'gi'); // Сравнение до последних двух символов\n\n    // Проверяем на точное совпадение сначала\n    if (exactMatchRegex.test(text)) {\n      return text.replace(exactMatchRegex, `<span style=\"color: #e21b3c;\">$1</span>`);\n    }\n\n    // Если точного совпадения нет, проверяем до предпоследнего символа\n    return text.replace(partialMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\n  };\n  if (!block) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectedInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.infoCategoryName,\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectedNumber,\n        children: block.id + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectionMode,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          style: {\n            fontSize: `${textFontSize}px`,\n            whiteSpace: 'pre-line'\n          },\n          dangerouslySetInnerHTML: {\n            __html: displayText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.options,\n          children: block.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.option} ${highlightedOptions[index]}`,\n            style: {\n              fontSize: `${getOptionFontSize(option)}px`\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controlBlock,\n      children: !timerStarted ? /*#__PURE__*/_jsxDEV(StartTimerButton, {\n        onClick: handleStartTimerInternal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : !timerEnded ? /*#__PURE__*/_jsxDEV(Timer, {\n        duration: 30,\n        onEnd: handleTimerEnd,\n        onForceStop: handleForceStopInternal\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : !answerShown ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(ShowAnswerButton, {\n          onClick: handleShowAnswerInternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), !hintUsed && /*#__PURE__*/_jsxDEV(HintButton, {\n          onClick: handleHintInternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(SelectCategoryButton, {\n        onClick: handleSelectCategoryInternal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionMode, \"znZ3049F+CX25nIGe+yd5jpao3A=\");\n_c = SelectionMode;\nexport default SelectionMode;\nvar _c;\n$RefreshReg$(_c, \"SelectionMode\");","map":{"version":3,"names":["React","useState","useEffect","StartTimerButton","Timer","SelectCategoryButton","ShowAnswerButton","HintButton","styles","jsxDEV","_jsxDEV","SelectionMode","block","categoryName","showAnswer","setTimerStarted","timerStarted","timerEnded","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","_s","answerShown","setAnswerShown","hintUsed","setHintUsed","highlightedOptions","setHighlightedOptions","displayText","setDisplayText","question","textFontSize","setTextFontSize","handleForceStopInternal","handleShowAnswerInternal","formattedText","formatText","text","highlightCorrectAnswer","textLength","length","correctAnswerIndex","options","findIndex","option","updatedOptions","map","index","incorrectOption","handleHintInternal","randomIndex","Math","floor","random","handleStartTimerInternal","handleSelectCategoryInternal","categoryId","id","getOptionFontSize","indexOf","slice","correctAnswer","exactMatchRegex","RegExp","partialMatchRegex","test","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","className","content","selectedInfo","infoCategoryName","selectedNumber","wrapper","selectionMode","style","fontSize","whiteSpace","dangerouslySetInnerHTML","__html","controlBlock","onClick","duration","onEnd","onForceStop","buttonGroup","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/SelectionMode/SelectionMode.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport StartTimerButton from '../StartTimerButton/StartTimerButton';\r\nimport Timer from '../Timer/Timer';\r\nimport SelectCategoryButton from '../SelectCategoryButton/SelectCategoryButton';\r\nimport ShowAnswerButton from '../ShowAnswerButton/ShowAnswerButton';\r\nimport HintButton from '../HintButton/HintButton';\r\nimport styles from './SelectionMode.module.css';\r\n\r\nfunction SelectionMode({\r\n  block,\r\n  categoryName,\r\n  showAnswer,\r\n  setTimerStarted,\r\n  timerStarted,\r\n  timerEnded,\r\n  handleTimerEnd,\r\n  handleShowAnswer,\r\n  handleSelectCategory,\r\n  handleForceStop,\r\n}) {\r\n  const [answerShown, setAnswerShown] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\r\n  const [displayText, setDisplayText] = useState(block.question); // Изначально показываем вопрос\r\n  const [textFontSize, setTextFontSize] = useState(30); // Изначальный размер шрифта для вопроса\r\n\r\n  useEffect(() => {\r\n    setAnswerShown(false);\r\n    setHintUsed(false);\r\n    setHighlightedOptions([]);\r\n    setTimerStarted(false);\r\n    setDisplayText(block.question); // Сброс отображаемого текста при смене блока\r\n    setTextFontSize(30); // Сброс размера шрифта при смене блока\r\n  }, [block, setTimerStarted]);\r\n\r\n  const handleForceStopInternal = () => {\r\n    handleForceStop();\r\n  };\r\n\r\n  const handleShowAnswerInternal = () => {\r\n    handleShowAnswer();\r\n    setAnswerShown(true);\r\n\r\n    // Изменение отображаемого текста на 'text' с переносом после символа '('\r\n    const formattedText = formatText(block.text);\r\n    setDisplayText(highlightCorrectAnswer(formattedText, block['correct answer'])); // Меняем отображаемый текст на отформатированный и выделяем правильный ответ\r\n\r\n    // Проверка длины текста ответа и изменение размера шрифта\r\n    const textLength = block.text.length;\r\n    if (textLength <= 90) {\r\n      setTextFontSize(22);\r\n    } else if (textLength <= 110) {\r\n      setTextFontSize(20);\r\n    } else if (textLength <= 150) {\r\n      setTextFontSize(18);\r\n    } else {\r\n      setTextFontSize(16); // Для текстов больше 150 символов уменьшаем шрифт до 16\r\n    }\r\n\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block['correct answer']\r\n    );\r\n\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex) {\r\n        return '';\r\n      }\r\n      return styles.incorrectOption;\r\n    });\r\n\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const handleHintInternal = () => {\r\n    setHintUsed(true);\r\n\r\n    const correctAnswerIndex = block.options.findIndex(\r\n      (option) => option === block['correct answer']\r\n    );\r\n\r\n    let randomIndex;\r\n    do {\r\n      randomIndex = Math.floor(Math.random() * block.options.length);\r\n    } while (randomIndex === correctAnswerIndex);\r\n\r\n    const updatedOptions = block.options.map((option, index) => {\r\n      if (index === correctAnswerIndex || index === randomIndex) {\r\n        return '';\r\n      }\r\n      return styles.incorrectOption;\r\n    });\r\n\r\n    setHighlightedOptions(updatedOptions);\r\n  };\r\n\r\n  const handleStartTimerInternal = () => {\r\n    setTimerStarted(true);\r\n  };\r\n\r\n  const handleSelectCategoryInternal = () => {\r\n    handleSelectCategory(block.categoryId, block.id);\r\n  };\r\n\r\n  const getOptionFontSize = (text) => {\r\n    const length = text.length;\r\n    if (length <= 10) {\r\n      return 25;\r\n    } else if (length <= 22) {\r\n      return 22;\r\n    } else {\r\n      return 18; // Оставляем размер шрифта по умолчанию\r\n    }\r\n  };\r\n\r\n  // Функция для форматирования текста, добавляющая перенос строки после символа '('\r\n  const formatText = (text) => {\r\n    const index = text.indexOf('(');\r\n    if (index !== -1) {\r\n      return text.slice(0, index) + '\\n' + text.slice(index);\r\n    }\r\n    return text;\r\n  };\r\n\r\n  // Функция для выделения правильного ответа цветом\r\n  const highlightCorrectAnswer = (text, correctAnswer) => {\r\n    const exactMatchRegex = new RegExp(`(${correctAnswer})`, 'gi');\r\n    const partialMatchRegex = new RegExp(`(${correctAnswer.slice(0, -2)})\\\\S*`, 'gi'); // Сравнение до последних двух символов\r\n\r\n    // Проверяем на точное совпадение сначала\r\n    if (exactMatchRegex.test(text)) {\r\n      return text.replace(exactMatchRegex, `<span style=\"color: #e21b3c;\">$1</span>`);\r\n    }\r\n\r\n    // Если точного совпадения нет, проверяем до предпоследнего символа\r\n    return text.replace(partialMatchRegex, `<span style=\"color: #e21b3c;\">$&</span>`);\r\n  };\r\n\r\n  if (!block) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <div className={styles.selectedInfo}>\r\n        <span className={styles.infoCategoryName}>{categoryName}</span>\r\n        <div className={styles.selectedNumber}>{block.id + 1}</div>\r\n      </div>\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.selectionMode}>\r\n          <div\r\n            className={styles.question}\r\n            style={{ fontSize: `${textFontSize}px`, whiteSpace: 'pre-line' }}\r\n            dangerouslySetInnerHTML={{ __html: displayText }}\r\n          />\r\n          <div className={styles.options}>\r\n            {block.options.map((option, index) => (\r\n              <div\r\n                key={index}\r\n                className={`${styles.option} ${highlightedOptions[index]}`}\r\n                style={{ fontSize: `${getOptionFontSize(option)}px` }}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.controlBlock}>\r\n        {!timerStarted ? (\r\n          <StartTimerButton onClick={handleStartTimerInternal} />\r\n        ) : !timerEnded ? (\r\n          <Timer\r\n            key={block.id}\r\n            duration={30}\r\n            onEnd={handleTimerEnd}\r\n            onForceStop={handleForceStopInternal}\r\n          />\r\n        ) : !answerShown ? (\r\n          <div className={styles.buttonGroup}>\r\n            <ShowAnswerButton onClick={handleShowAnswerInternal} />\r\n            {!hintUsed && <HintButton onClick={handleHintInternal} />}\r\n          </div>\r\n        ) : (\r\n          <SelectCategoryButton onClick={handleSelectCategoryInternal} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionMode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}