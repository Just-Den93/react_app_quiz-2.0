{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\App\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport QuizPage from '../QuizPage/QuizPage';\nimport QuizCard from '../QuizCard/QuizCard';\nimport Sidebar from '../Sidebar/Sidebar';\nimport styles from './App.module.css';\nimport { useGameState } from '../../context/GameStateContext'; // Используем контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    showQuizPage,\n    setShowQuizPage,\n    data\n  } = useGameState(); // Добавляем состояние showQuizPage\n  const [quizData, setQuizData] = useState([]);\n  useEffect(() => {\n    // Здесь можно загрузить данные викторины\n    if (data) {\n      setQuizData(data);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [!showQuizPage && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content_wrapper,\n        children: showQuizPage ? /*#__PURE__*/_jsxDEV(QuizPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: quizData.map(quiz => /*#__PURE__*/_jsxDEV(QuizCard, {\n                mode: quiz.mode,\n                name: quiz['quiz name'],\n                categories: quiz.categories,\n                uuid: quiz.uuid\n              }, quiz.uuid, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aP0HLhrOLl3DyOHppeh2wInuyKg=\", false, function () {\n  return [useGameState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","QuizPage","QuizCard","Sidebar","styles","useGameState","jsxDEV","_jsxDEV","App","_s","showQuizPage","setShowQuizPage","data","quizData","setQuizData","children","className","container","fileName","_jsxFileName","lineNumber","columnNumber","content_wrapper","content","path","element","map","quiz","mode","name","categories","uuid","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/App/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport QuizPage from '../QuizPage/QuizPage';\r\nimport QuizCard from '../QuizCard/QuizCard';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport styles from './App.module.css';\r\nimport { useGameState } from '../../context/GameStateContext'; // Используем контекст\r\n\r\nfunction App() {\r\n  const { showQuizPage, setShowQuizPage, data } = useGameState(); // Добавляем состояние showQuizPage\r\n  const [quizData, setQuizData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Здесь можно загрузить данные викторины\r\n    if (data) {\r\n      setQuizData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={styles.container}>\r\n        {!showQuizPage && <Sidebar />} {/* Показываем Sidebar, если не отображается QuizPage */}\r\n        <div className={styles.content_wrapper}>\r\n          {/* Показываем QuizPage, если showQuizPage true */}\r\n          {showQuizPage ? (\r\n            <QuizPage />\r\n          ) : (\r\n            <div className={styles.content}>\r\n              <Routes>\r\n                <Route\r\n                  path=\"/\"\r\n                  element={\r\n                    quizData.map((quiz) => (\r\n                      <QuizCard\r\n                        key={quiz.uuid}\r\n                        mode={quiz.mode}\r\n                        name={quiz['quiz name']}\r\n                        categories={quiz.categories}\r\n                        uuid={quiz.uuid}\r\n                      />\r\n                    ))\r\n                  }\r\n                />\r\n              </Routes>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,YAAY,QAAQ,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,YAAY;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGP,YAAY,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,IAAIiB,IAAI,EAAE;MACRE,WAAW,CAACF,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACT,MAAM;IAAAiB,QAAA,eACLR,OAAA;MAAKS,SAAS,EAAEZ,MAAM,CAACa,SAAU;MAAAF,QAAA,GAC9B,CAACL,YAAY,iBAAIH,OAAA,CAACJ,OAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAC,eAC/Bd,OAAA;QAAKS,SAAS,EAAEZ,MAAM,CAACkB,eAAgB;QAAAP,QAAA,EAEpCL,YAAY,gBACXH,OAAA,CAACN,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEZd,OAAA;UAAKS,SAAS,EAAEZ,MAAM,CAACmB,OAAQ;UAAAR,QAAA,eAC7BR,OAAA,CAACR,MAAM;YAAAgB,QAAA,eACLR,OAAA,CAACP,KAAK;cACJwB,IAAI,EAAC,GAAG;cACRC,OAAO,EACLZ,QAAQ,CAACa,GAAG,CAAEC,IAAI,iBAChBpB,OAAA,CAACL,QAAQ;gBAEP0B,IAAI,EAAED,IAAI,CAACC,IAAK;gBAChBC,IAAI,EAAEF,IAAI,CAAC,WAAW,CAAE;gBACxBG,UAAU,EAAEH,IAAI,CAACG,UAAW;gBAC5BC,IAAI,EAAEJ,IAAI,CAACI;cAAK,GAJXJ,IAAI,CAACI,IAAI;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKf,CACF;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACZ,EAAA,CA3CQD,GAAG;EAAA,QACsCH,YAAY;AAAA;AAAA2B,EAAA,GADrDxB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}