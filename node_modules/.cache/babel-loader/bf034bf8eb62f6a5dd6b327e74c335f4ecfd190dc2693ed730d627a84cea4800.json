{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport ContentContainer from '../ContentContainer/ContentContainer';\nimport EndMessage from '../EndMessage/EndMessage';\nimport MenuModal from '../MenuModal/MenuModal';\nimport Modal from '../Modal/Modal';\nimport Settings from '../Settings/Settings';\nimport ConfettiAnimation from '../ConfettiAnimation/ConfettiAnimation'; // Импортируем компонент конфетти\nimport styles from './QuizPage.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nimport PCImage from '../../images/PC_horizontal_1line_black.svg'; // Убедитесь, что путь к изображению верен  \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    quizStates,\n    setShowQuizPage,\n    currentQuizId,\n    selectedMode,\n    data,\n    markBlockAsUsed\n  } = useQuizContext();\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false); // Добавляем состояние для показа конфетти\n\n  const handleBlockSelect = (block, category) => {\n    console.log('Selected Block:', block); // Логгируем выбранный блок\n    console.log('Selected Category:', category); // Логгируем выбранную категорию\n    setSelectedBlock(block);\n    setSelectedCategory(category);\n  };\n  const handleCloseModal = () => {\n    setSelectedBlock(null);\n    setSelectedCategory(null);\n  };\n  const handleSelectCategory = (categoryId, blockId) => {\n    markBlockAsUsed(currentQuizId, categoryId, blockId); // Отмечаем блок как использованный\n    handleCloseModal(); // Закрываем модальное окно после выбора категории\n  };\n  const handleConfettiButtonClick = () => {\n    setShowConfetti(true);\n  };\n  useEffect(() => {\n    console.log('Data in QuizPage:', data); // Логгируем данные при каждом рендере\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: PCImage,\n        alt: \"PC horizontal line\",\n        className: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(ContentContainer, {\n        data: data,\n        onBlockSelect: handleBlockSelect,\n        usedBlocks: currentQuizState.usedBlocks || {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n        block: selectedBlock,\n        categoryName: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name) || 'Без категории' // Проверяем categoryName\n        ,\n        onClose: handleCloseModal,\n        selectedMode: selectedMode,\n        onSelectCategory: handleSelectCategory // Передаем функцию для обработки выбора категории\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: () => setIsSettingsVisible(true),\n      showMainMenu: () => setShowQuizPage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: () => setIsSettingsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfettiButtonClick,\n      children: \"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u043A\\u043E\\u043D\\u0444\\u0435\\u0442\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(ConfettiAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"BrFylMBxM0LEoSnHSnZtTTPjBpU=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","ContentContainer","EndMessage","MenuModal","Modal","Settings","ConfettiAnimation","styles","useQuizContext","PCImage","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","_s","quizStates","setShowQuizPage","currentQuizId","selectedMode","data","markBlockAsUsed","currentQuizState","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedCategory","setSelectedCategory","showConfetti","setShowConfetti","handleBlockSelect","block","category","console","log","handleCloseModal","handleSelectCategory","categoryId","blockId","handleConfettiButtonClick","className","quiz_page","children","src","alt","image","fileName","_jsxFileName","lineNumber","columnNumber","onBlockSelect","usedBlocks","categoryName","name","onClose","onSelectCategory","showSettings","showMainMenu","onClick","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\nimport EndMessage from '../EndMessage/EndMessage';\r\nimport MenuModal from '../MenuModal/MenuModal';\r\nimport Modal from '../Modal/Modal';\r\nimport Settings from '../Settings/Settings';\r\nimport ConfettiAnimation from '../ConfettiAnimation/ConfettiAnimation'; // Импортируем компонент конфетти\r\nimport styles from './QuizPage.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport PCImage from '../../images/PC_horizontal_1line_black.svg'; // Убедитесь, что путь к изображению верен  \r\n\r\nfunction QuizPage() {\r\n  const { quizStates, setShowQuizPage, currentQuizId, selectedMode, data, markBlockAsUsed } = useQuizContext();\r\n\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [showConfetti, setShowConfetti] = useState(false); // Добавляем состояние для показа конфетти\r\n\r\n  const handleBlockSelect = (block, category) => {\r\n    console.log('Selected Block:', block); // Логгируем выбранный блок\r\n    console.log('Selected Category:', category); // Логгируем выбранную категорию\r\n    setSelectedBlock(block);\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBlock(null);\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n  const handleSelectCategory = (categoryId, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryId, blockId);  // Отмечаем блок как использованный\r\n    handleCloseModal();  // Закрываем модальное окно после выбора категории\r\n  };\r\n\r\n  const handleConfettiButtonClick = () => {\r\n    setShowConfetti(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Data in QuizPage:', data); // Логгируем данные при каждом рендере\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      {data ? (\r\n        <>\r\n        <img src={PCImage} alt=\"PC horizontal line\" className={styles.image} /> {/* Добавляем изображение */}\r\n          <ContentContainer \r\n            data={data} \r\n            onBlockSelect={handleBlockSelect} \r\n            usedBlocks={currentQuizState.usedBlocks || {}} \r\n          />\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              categoryName={selectedCategory?.name || 'Без категории'} // Проверяем categoryName\r\n              onClose={handleCloseModal}\r\n              selectedMode={selectedMode}\r\n              onSelectCategory={handleSelectCategory}  // Передаем функцию для обработки выбора категории\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal \r\n        showSettings={() => setIsSettingsVisible(true)} \r\n        showMainMenu={() => setShowQuizPage(false)} \r\n      />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n\r\n      {/* Добавляем кнопку для проверки анимации конфетти */}\r\n      <button onClick={handleConfettiButtonClick}>Запустить конфетти</button>\r\n\r\n      {/* Показываем анимацию конфетти при нажатии на кнопку */}\r\n      {showConfetti && <ConfettiAnimation />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}