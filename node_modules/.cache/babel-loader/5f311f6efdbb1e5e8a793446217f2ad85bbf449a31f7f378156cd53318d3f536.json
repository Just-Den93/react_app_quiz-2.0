{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\SelectionMode\\\\SelectionMode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, BUTTON_VARIANTS } from '../common/Button/Button';\nimport Timer from '../Timer/Timer';\nimport styles from './SelectionMode.module.css';\nimport { formatTextWithHighlights, getOptionFontSize, getAnswerFontSize, handleForceStopInternal, handleShowAnswerInternal, handleHintInternal } from './SelectionModeUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectionMode({\n  block,\n  categoryName,\n  showAnswer,\n  setTimerStarted,\n  timerStarted,\n  timerEnded,\n  handleTimerEnd,\n  handleShowAnswer,\n  handleSelectCategory,\n  handleForceStop\n}) {\n  _s();\n  const [answerShown, setAnswerShown] = useState(false);\n  const [hintUsed, setHintUsed] = useState(false);\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\n  const [forceStopped, setForceStopped] = useState(false);\n  useEffect(() => {\n    setAnswerShown(false);\n    setHintUsed(false);\n    setHighlightedOptions([]);\n    setTimerStarted(false);\n  }, [block, setTimerStarted]);\n  const renderControl = () => {\n    if (!timerStarted) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: BUTTON_VARIANTS.TIMER,\n        onClick: () => setTimerStarted(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n    if (!timerEnded) {\n      return /*#__PURE__*/_jsxDEV(Timer, {\n        duration: 30,\n        onEnd: handleTimerEnd,\n        onForceStop: () => handleForceStopInternal(handleForceStop, setForceStopped)\n      }, block.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n    if (!answerShown) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: BUTTON_VARIANTS.SHOW_ANSWER,\n          onClick: () => handleShowAnswerInternal(block, styles, handleShowAnswer, setAnswerShown, setHighlightedOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), !hintUsed && /*#__PURE__*/_jsxDEV(Button, {\n          variant: BUTTON_VARIANTS.HINT,\n          onClick: () => handleHintInternal(block, styles, setHintUsed, setHighlightedOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: BUTTON_VARIANTS.SELECT_CATEGORY,\n      onClick: () => handleSelectCategory(block.categoryId, block.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controlBlock,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.timerSpace,\n        children: renderControl()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectionMode, \"Gz8+Hrrw1V8sS7yXxziL9HaOZWs=\");\n_c = SelectionMode;\nexport default SelectionMode;\nvar _c;\n$RefreshReg$(_c, \"SelectionMode\");","map":{"version":3,"names":["React","useState","useEffect","Button","BUTTON_VARIANTS","Timer","styles","formatTextWithHighlights","getOptionFontSize","getAnswerFontSize","handleForceStopInternal","handleShowAnswerInternal","handleHintInternal","jsxDEV","_jsxDEV","SelectionMode","block","categoryName","showAnswer","setTimerStarted","timerStarted","timerEnded","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","_s","answerShown","setAnswerShown","hintUsed","setHintUsed","highlightedOptions","setHighlightedOptions","forceStopped","setForceStopped","renderControl","variant","TIMER","onClick","fileName","_jsxFileName","lineNumber","columnNumber","duration","onEnd","onForceStop","id","className","buttonGroup","children","SHOW_ANSWER","HINT","SELECT_CATEGORY","categoryId","content","controlBlock","timerSpace","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/SelectionMode/SelectionMode.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, BUTTON_VARIANTS } from '../common/Button/Button';\r\nimport Timer from '../Timer/Timer';\r\nimport styles from './SelectionMode.module.css';\r\nimport {\r\n  formatTextWithHighlights,\r\n  getOptionFontSize,\r\n  getAnswerFontSize,\r\n  handleForceStopInternal,\r\n  handleShowAnswerInternal,\r\n  handleHintInternal,\r\n} from './SelectionModeUtils';\r\n\r\nfunction SelectionMode({\r\n  block,\r\n  categoryName,\r\n  showAnswer,\r\n  setTimerStarted,\r\n  timerStarted,\r\n  timerEnded,\r\n  handleTimerEnd,\r\n  handleShowAnswer,\r\n  handleSelectCategory,\r\n  handleForceStop,\r\n}) {\r\n  const [answerShown, setAnswerShown] = useState(false);\r\n  const [hintUsed, setHintUsed] = useState(false);\r\n  const [highlightedOptions, setHighlightedOptions] = useState([]);\r\n  const [forceStopped, setForceStopped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnswerShown(false);\r\n    setHintUsed(false);\r\n    setHighlightedOptions([]);\r\n    setTimerStarted(false);\r\n  }, [block, setTimerStarted]);\r\n\r\n  const renderControl = () => {\r\n    if (!timerStarted) {\r\n      return (\r\n        <Button \r\n          variant={BUTTON_VARIANTS.TIMER}\r\n          onClick={() => setTimerStarted(true)}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (!timerEnded) {\r\n      return (\r\n        <Timer\r\n          key={block.id}\r\n          duration={30}\r\n          onEnd={handleTimerEnd}\r\n          onForceStop={() => handleForceStopInternal(handleForceStop, setForceStopped)}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (!answerShown) {\r\n      return (\r\n        <div className={styles.buttonGroup}>\r\n          <Button \r\n            variant={BUTTON_VARIANTS.SHOW_ANSWER}\r\n            onClick={() => handleShowAnswerInternal(block, styles, handleShowAnswer, setAnswerShown, setHighlightedOptions)}\r\n          />\r\n          {!hintUsed && (\r\n            <Button \r\n              variant={BUTTON_VARIANTS.HINT}\r\n              onClick={() => handleHintInternal(block, styles, setHintUsed, setHighlightedOptions)}\r\n            />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button \r\n        variant={BUTTON_VARIANTS.SELECT_CATEGORY}\r\n        onClick={() => handleSelectCategory(block.categoryId, block.id)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      {/* Остальной код компонента... */}\r\n      <div className={styles.controlBlock}>\r\n        <div className={styles.timerSpace}>\r\n          {renderControl()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionMode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}