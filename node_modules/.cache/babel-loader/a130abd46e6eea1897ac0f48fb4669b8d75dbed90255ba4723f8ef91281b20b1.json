{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Создаем контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\n\n// Хук для доступа к контексту\nexport function useQuizContext() {\n  _s();\n  return useContext(QuizContext);\n}\n\n// Провайдер контекста\n_s(useQuizContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function QuizProvider({\n  children\n}) {\n  _s2();\n  const [showQuizPage, setShowQuizPage] = useState(() => {\n    const savedState = localStorage.getItem('showQuizPage');\n    return savedState === 'true';\n  });\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [usedBlocks, setUsedBlocks] = useState(() => {\n    const saved = localStorage.getItem('usedBlocks');\n    return saved ? JSON.parse(saved) : {};\n  });\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      showQuizPage,\n      setShowQuizPage,\n      selectedMode,\n      setSelectedMode,\n      usedBlocks,\n      setUsedBlocks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuizProvider, \"FIXby2rQVduc4V+7LCMSNJJN6S4=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","QuizContext","useQuizContext","_s","QuizProvider","children","_s2","showQuizPage","setShowQuizPage","savedState","localStorage","getItem","selectedMode","setSelectedMode","usedBlocks","setUsedBlocks","saved","JSON","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Создаем контекст\r\nconst QuizContext = createContext();\r\n\r\n// Хук для доступа к контексту\r\nexport function useQuizContext() {\r\n  return useContext(QuizContext);\r\n}\r\n\r\n// Провайдер контекста\r\nexport function QuizProvider({ children }) {\r\n  const [showQuizPage, setShowQuizPage] = useState(() => {\r\n    const savedState = localStorage.getItem('showQuizPage');\r\n    return savedState === 'true';\r\n  });\r\n  const [selectedMode, setSelectedMode] = useState(null);\r\n  const [usedBlocks, setUsedBlocks] = useState(() => {\r\n    const saved = localStorage.getItem('usedBlocks');\r\n    return saved ? JSON.parse(saved) : {};\r\n  });\r\n\r\n  return (\r\n    <QuizContext.Provider value={{\r\n      showQuizPage,\r\n      setShowQuizPage,\r\n      selectedMode,\r\n      setSelectedMode,\r\n      usedBlocks,\r\n      setUsedBlocks\r\n    }}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASM,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;;AAEA;AAAAE,EAAA,CAJgBD,cAAc;AAK9B,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrD,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACvD,OAAOF,UAAU,KAAK,MAAM;EAC9B,CAAC,CAAC;EACF,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACjD,MAAMkB,KAAK,GAAGN,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,oBACEhB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAC3Bb,YAAY;MACZC,eAAe;MACfI,YAAY;MACZC,eAAe;MACfC,UAAU;MACVC;IACF,CAAE;IAAAV,QAAA,EACCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,GAAA,CAvBeF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}