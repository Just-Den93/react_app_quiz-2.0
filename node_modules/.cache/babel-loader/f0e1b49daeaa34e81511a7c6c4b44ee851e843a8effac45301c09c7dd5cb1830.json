{"ast":null,"code":"import React,{useMemo,useState,useEffect}from'react';import ContentContainer from'../ContentContainer/ContentContainer';import EndMessage from'../EndMessage/EndMessage';import MenuModal from'../MenuModal/MenuModal';import Modal from'../Modal/Modal';import Settings from'../Settings/Settings';import ConfettiAnimation from'../ConfettiAnimation/ConfettiAnimation';import styles from'./QuizPage.module.css';import{useQuizContext}from'../../context/QuizContext';import PCImage from'../../images/PC_horizontal_1line_black.svg';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizPage(){const{quizStates,setShowQuizPage,currentQuizId,selectedMode,data,markBlockAsUsed,setQuizStates}=useQuizContext();const currentQuizState=useMemo(()=>quizStates[currentQuizId]||{},[quizStates,currentQuizId]);const[isSettingsVisible,setIsSettingsVisible]=useState(false);const[selectedBlock,setSelectedBlock]=useState(null);const[selectedCategory,setSelectedCategory]=useState(null);const[confettiRunning,setConfettiRunning]=useState(false);const[showEndMessage,setShowEndMessage]=useState(false);const[isMenuVisible,setIsMenuVisible]=useState(false);// Управление видимостью MenuModal\n// Общий метод для сброса данных\nconst resetQuizData=()=>{localStorage.removeItem(\"data-\".concat(currentQuizId));setQuizStates(prevStates=>({...prevStates,[currentQuizId]:{...prevStates[currentQuizId],usedBlocks:{},// Сброс блоков\ndata:null// Сброс данных викторины\n}}));};const totalBlocks=useMemo(()=>{return(data===null||data===void 0?void 0:data.reduce((acc,category)=>acc+category.blocks.length,0))||0;},[data]);const usedBlocksCount=useMemo(()=>{return Object.values(currentQuizState.usedBlocks||{}).reduce((acc,categoryBlocks)=>acc+categoryBlocks.length,0);},[currentQuizState]);const handleBlockSelect=(block,category)=>{setSelectedBlock(block);setSelectedCategory(category);};const handleCloseModal=()=>{setSelectedBlock(null);setSelectedCategory(null);};const handleSelectCategory=(categoryId,blockId)=>{markBlockAsUsed(currentQuizId,categoryId,blockId);if(usedBlocksCount===totalBlocks-1){setConfettiRunning(true);setShowEndMessage(true);}handleCloseModal();};const handleNewGame=()=>{resetQuizData();// Вызов сброса данных\nsetConfettiRunning(false);setShowEndMessage(false);setIsMenuVisible(false);// Закрытие MenuModal после начала новой игры\n};const handleMainMenu=function(){let clearState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(clearState){resetQuizData();// Вызов сброса данных\n}setShowQuizPage(false);setConfettiRunning(false);};// Обработка нажатия клавиши Escape для открытия/закрытия MenuModal\nuseEffect(()=>{const handleKeyDown=event=>{if(event.key==='Escape'){setIsMenuVisible(prevState=>!prevState);// Переключение видимости MenuModal\n}};window.addEventListener('keydown',handleKeyDown);return()=>{window.removeEventListener('keydown',handleKeyDown);};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.quiz_page,children:[/*#__PURE__*/_jsx(ConfettiAnimation,{isRunning:confettiRunning}),data?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:PCImage,alt:\"PC horizontal line\",className:styles.image}),/*#__PURE__*/_jsx(ContentContainer,{data:data,onBlockSelect:handleBlockSelect,usedBlocks:currentQuizState.usedBlocks||{}}),selectedBlock&&/*#__PURE__*/_jsx(Modal,{block:selectedBlock,categoryName:(selectedCategory===null||selectedCategory===void 0?void 0:selectedCategory.name)||'Без категории',onClose:handleCloseModal,selectedMode:selectedMode,onSelectCategory:handleSelectCategory})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No data available.\"}),showEndMessage&&/*#__PURE__*/_jsx(EndMessage,{onNewGame:handleNewGame,onMainMenu:()=>handleMainMenu(true)// Очистка данных только если вызвано из EndMessage\n}),/*#__PURE__*/_jsx(MenuModal,{showSettings:()=>setIsSettingsVisible(true),showMainMenu:()=>handleMainMenu(false)// Без очистки, если вызвано из MenuModal\n,onNewGame:handleNewGame// Передаем метод для MenuModal\n,isVisible:isMenuVisible,closeMenuModal:()=>setIsMenuVisible(false)// Закрываем MenuModal\n}),isSettingsVisible&&/*#__PURE__*/_jsx(Settings,{onClose:()=>setIsSettingsVisible(false)})]});}export default QuizPage;","map":{"version":3,"names":["React","useMemo","useState","useEffect","ContentContainer","EndMessage","MenuModal","Modal","Settings","ConfettiAnimation","styles","useQuizContext","PCImage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","QuizPage","quizStates","setShowQuizPage","currentQuizId","selectedMode","data","markBlockAsUsed","setQuizStates","currentQuizState","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedCategory","setSelectedCategory","confettiRunning","setConfettiRunning","showEndMessage","setShowEndMessage","isMenuVisible","setIsMenuVisible","resetQuizData","localStorage","removeItem","concat","prevStates","usedBlocks","totalBlocks","reduce","acc","category","blocks","length","usedBlocksCount","Object","values","categoryBlocks","handleBlockSelect","block","handleCloseModal","handleSelectCategory","categoryId","blockId","handleNewGame","handleMainMenu","clearState","arguments","undefined","handleKeyDown","event","key","prevState","window","addEventListener","removeEventListener","className","quiz_page","children","isRunning","src","alt","image","onBlockSelect","categoryName","name","onClose","onSelectCategory","onNewGame","onMainMenu","showSettings","showMainMenu","isVisible","closeMenuModal"],"sources":["E:/quiz-app-react/src/components/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\nimport EndMessage from '../EndMessage/EndMessage';\r\nimport MenuModal from '../MenuModal/MenuModal';\r\nimport Modal from '../Modal/Modal';\r\nimport Settings from '../Settings/Settings';\r\nimport ConfettiAnimation from '../ConfettiAnimation/ConfettiAnimation';\r\nimport styles from './QuizPage.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport PCImage from '../../images/PC_horizontal_1line_black.svg';\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, setShowQuizPage, currentQuizId, selectedMode, data, markBlockAsUsed, setQuizStates } = useQuizContext();\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [confettiRunning, setConfettiRunning] = useState(false);\r\n  const [showEndMessage, setShowEndMessage] = useState(false);\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false); // Управление видимостью MenuModal\r\n\r\n  // Общий метод для сброса данных\r\n  const resetQuizData = () => {\r\n    localStorage.removeItem(`data-${currentQuizId}`);\r\n    setQuizStates((prevStates) => ({\r\n      ...prevStates,\r\n      [currentQuizId]: {\r\n        ...prevStates[currentQuizId],\r\n        usedBlocks: {},  // Сброс блоков\r\n        data: null,      // Сброс данных викторины\r\n      },\r\n    }));\r\n  };\r\n\r\n  const totalBlocks = useMemo(() => {\r\n    return data?.reduce((acc, category) => acc + category.blocks.length, 0) || 0;\r\n  }, [data]);\r\n\r\n  const usedBlocksCount = useMemo(() => {\r\n    return Object.values(currentQuizState.usedBlocks || {}).reduce(\r\n      (acc, categoryBlocks) => acc + categoryBlocks.length,\r\n      0\r\n    );\r\n  }, [currentQuizState]);\r\n\r\n  const handleBlockSelect = (block, category) => {\r\n    setSelectedBlock(block);\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBlock(null);\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n  const handleSelectCategory = (categoryId, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryId, blockId);\r\n\r\n    if (usedBlocksCount === totalBlocks - 1) {\r\n      setConfettiRunning(true);\r\n      setShowEndMessage(true);\r\n    }\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleNewGame = () => {\r\n    resetQuizData();  // Вызов сброса данных\r\n    setConfettiRunning(false);\r\n    setShowEndMessage(false);\r\n    setIsMenuVisible(false); // Закрытие MenuModal после начала новой игры\r\n  };\r\n\r\n  const handleMainMenu = (clearState = false) => {\r\n    if (clearState) {\r\n      resetQuizData();  // Вызов сброса данных\r\n    }\r\n    setShowQuizPage(false);\r\n    setConfettiRunning(false);\r\n  };\r\n\r\n  // Обработка нажатия клавиши Escape для открытия/закрытия MenuModal\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === 'Escape') {\r\n        setIsMenuVisible((prevState) => !prevState); // Переключение видимости MenuModal\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <ConfettiAnimation isRunning={confettiRunning} />\r\n      {data ? (\r\n        <>\r\n          <img src={PCImage} alt=\"PC horizontal line\" className={styles.image} />\r\n          <ContentContainer\r\n            data={data}\r\n            onBlockSelect={handleBlockSelect}\r\n            usedBlocks={currentQuizState.usedBlocks || {}}\r\n          />\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              categoryName={selectedCategory?.name || 'Без категории'}\r\n              onClose={handleCloseModal}\r\n              selectedMode={selectedMode}\r\n              onSelectCategory={handleSelectCategory}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      {showEndMessage && (\r\n        <EndMessage\r\n          onNewGame={handleNewGame}\r\n          onMainMenu={() => handleMainMenu(true)}  // Очистка данных только если вызвано из EndMessage\r\n        />\r\n      )}\r\n      <MenuModal\r\n        showSettings={() => setIsSettingsVisible(true)}\r\n        showMainMenu={() => handleMainMenu(false)} // Без очистки, если вызвано из MenuModal\r\n        onNewGame={handleNewGame}  // Передаем метод для MenuModal\r\n        isVisible={isMenuVisible}\r\n        closeMenuModal={() => setIsMenuVisible(false)}  // Закрываем MenuModal\r\n      />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}