{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { loadJsonDataByUUID } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    uuid\n  } = useParams();\n  const [data, setData] = useState(null);\n  const [usedBlocks, setUsedBlocks] = useState(() => {\n    const saved = localStorage.getItem('usedBlocks');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  useEffect(() => {\n    const selectedData = loadJsonDataByUUID(uuid);\n    console.log(\"Loaded Data:\", selectedData);\n    if (selectedData) {\n      setData(selectedData.categories);\n    } else {\n      console.error(\"No data found for UUID:\", uuid);\n    }\n  }, [uuid]);\n  const markBlockAsUsed = (categoryName, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      updatedUsedBlocks[categoryName].push(blockId);\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\n      return updatedUsedBlocks;\n    });\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: usedBlocks,\n      markBlockAsUsed: markBlockAsUsed,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"3Hhe0v6zfPMhKGSiBLRcn561fnI=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","loadJsonDataByUUID","jsxDEV","_jsxDEV","QuizPage","_s","uuid","data","setData","usedBlocks","setUsedBlocks","saved","localStorage","getItem","JSON","parse","isSettingsVisible","setIsSettingsVisible","selectedData","console","log","categories","error","markBlockAsUsed","categoryName","blockId","prevUsedBlocks","updatedUsedBlocks","push","setItem","stringify","showSettings","hideSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quiz_page","onClose","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { loadJsonDataByUUID } from '../utils/loadJsonData';\r\n\r\nfunction QuizPage() {\r\n    const { uuid } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const [usedBlocks, setUsedBlocks] = useState(() => {\r\n        const saved = localStorage.getItem('usedBlocks');\r\n        return saved ? JSON.parse(saved) : {};\r\n    });\r\n    const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const selectedData = loadJsonDataByUUID(uuid);\r\n        console.log(\"Loaded Data:\", selectedData);\r\n        if (selectedData) {\r\n            setData(selectedData.categories);\r\n        } else {\r\n            console.error(\"No data found for UUID:\", uuid);\r\n        }\r\n    }, [uuid]);\r\n\r\n    const markBlockAsUsed = (categoryName, blockId) => {\r\n        setUsedBlocks((prevUsedBlocks) => {\r\n            const updatedUsedBlocks = { ...prevUsedBlocks };\r\n            if (!updatedUsedBlocks[categoryName]) {\r\n                updatedUsedBlocks[categoryName] = [];\r\n            }\r\n            updatedUsedBlocks[categoryName].push(blockId);\r\n\r\n            localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\r\n            return updatedUsedBlocks;\r\n        });\r\n    };\r\n\r\n    const showSettings = () => {\r\n        setIsSettingsVisible(true);\r\n    };\r\n\r\n    const hideSettings = () => {\r\n        setIsSettingsVisible(false);\r\n    };\r\n\r\n    if (!data) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.quiz_page}>\r\n            <Header />\r\n            <ContentContainer\r\n                usedBlocks={usedBlocks}\r\n                markBlockAsUsed={markBlockAsUsed}\r\n                data={data}\r\n            />\r\n            <EndMessage />\r\n            <MenuModal showSettings={showSettings} />\r\n            {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}