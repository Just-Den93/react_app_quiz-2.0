{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{loadJsonDataByMode}from'../utils/loadJsonData';import{jsx as _jsx}from\"react/jsx-runtime\";const QuizContext=/*#__PURE__*/createContext();export function useQuizContext(){return useContext(QuizContext);}export function QuizProvider(_ref){let{children}=_ref;const[showQuizPage,setShowQuizPage]=useState(()=>{const savedState=localStorage.getItem('showQuizPage');return savedState==='true';});const[selectedMode,setSelectedMode]=useState(()=>{const mode=localStorage.getItem('selectedMode');return mode||null;});const[currentQuizId,setCurrentQuizId]=useState(()=>{return localStorage.getItem('currentQuizId');});const[quizStates,setQuizStates]=useState(()=>{const savedStates=localStorage.getItem('quizStates');return savedStates?JSON.parse(savedStates):{};});const[data,setData]=useState(()=>{const savedData=localStorage.getItem('data');return savedData?JSON.parse(savedData):null;});useEffect(()=>{if(selectedMode&&currentQuizId){const selectedData=loadJsonDataByMode(selectedMode);const savedData=localStorage.getItem('data');// Проверяем, существует ли `selectedData` и имеет ли он категорию\nif(selectedData&&selectedData.categories&&JSON.stringify(selectedData.categories)!==savedData){// Если данные отличаются, обновляем локальное состояние и localStorage\nsetData(selectedData.categories);updateQuizState(currentQuizId,{data:selectedData.categories});localStorage.setItem('data',JSON.stringify(selectedData.categories));}}},[selectedMode,currentQuizId]);useEffect(()=>{if(selectedMode!==null){localStorage.setItem('selectedMode',selectedMode);}},[selectedMode]);useEffect(()=>{localStorage.setItem('showQuizPage',showQuizPage.toString());},[showQuizPage]);useEffect(()=>{if(currentQuizId!==null){localStorage.setItem('currentQuizId',currentQuizId);}},[currentQuizId]);const updateQuizState=(uuid,newState)=>{setQuizStates(prevStates=>{const updatedStates={...prevStates,[uuid]:{...prevStates[uuid],...newState}};localStorage.setItem('quizStates',JSON.stringify(updatedStates));return updatedStates;});};const markBlockAsUsed=(quizId,categoryId,blockId)=>{if(!categoryId){console.error('categoryId не определен, невозможно отметить блок как используемый');return;}setQuizStates(prevStates=>{const previousState=prevStates[quizId]||{};const updatedUsedBlocks={...previousState.usedBlocks};if(!updatedUsedBlocks[categoryId]){updatedUsedBlocks[categoryId]=[];}if(!updatedUsedBlocks[categoryId].includes(blockId)){updatedUsedBlocks[categoryId].push(blockId);}const updatedStates={...prevStates,[quizId]:{...previousState,usedBlocks:updatedUsedBlocks}};localStorage.setItem('quizStates',JSON.stringify(updatedStates));localStorage.setItem(\"usedBlocks-\".concat(quizId),JSON.stringify(updatedUsedBlocks));return updatedStates;});};return/*#__PURE__*/_jsx(QuizContext.Provider,{value:{showQuizPage,setShowQuizPage,selectedMode,setSelectedMode,currentQuizId,setCurrentQuizId,quizStates,setQuizStates,updateQuizState,markBlockAsUsed,data},children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadJsonDataByMode","jsx","_jsx","QuizContext","useQuizContext","QuizProvider","_ref","children","showQuizPage","setShowQuizPage","savedState","localStorage","getItem","selectedMode","setSelectedMode","mode","currentQuizId","setCurrentQuizId","quizStates","setQuizStates","savedStates","JSON","parse","data","setData","savedData","selectedData","categories","stringify","updateQuizState","setItem","toString","uuid","newState","prevStates","updatedStates","markBlockAsUsed","quizId","categoryId","blockId","console","error","previousState","updatedUsedBlocks","usedBlocks","includes","push","concat","Provider","value"],"sources":["E:/quiz-app-react/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nconst QuizContext = createContext();\r\n\r\nexport function useQuizContext() {\r\n  return useContext(QuizContext);\r\n}\r\n\r\nexport function QuizProvider({ children }) {\r\n  const [showQuizPage, setShowQuizPage] = useState(() => {\r\n    const savedState = localStorage.getItem('showQuizPage');\r\n    return savedState === 'true';\r\n  });\r\n\r\n  const [selectedMode, setSelectedMode] = useState(() => {\r\n    const mode = localStorage.getItem('selectedMode');\r\n    return mode || null;\r\n  });\r\n\r\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\r\n    return localStorage.getItem('currentQuizId');\r\n  });\r\n\r\n  const [quizStates, setQuizStates] = useState(() => {\r\n    const savedStates = localStorage.getItem('quizStates');\r\n    return savedStates ? JSON.parse(savedStates) : {};\r\n  });\r\n\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('data');\r\n    return savedData ? JSON.parse(savedData) : null;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedMode && currentQuizId) {\r\n      const selectedData = loadJsonDataByMode(selectedMode);\r\n      const savedData = localStorage.getItem('data');\r\n\r\n      // Проверяем, существует ли `selectedData` и имеет ли он категорию\r\n      if (selectedData && selectedData.categories && JSON.stringify(selectedData.categories) !== savedData) {\r\n        // Если данные отличаются, обновляем локальное состояние и localStorage\r\n        setData(selectedData.categories);\r\n        updateQuizState(currentQuizId, { data: selectedData.categories });\r\n        localStorage.setItem('data', JSON.stringify(selectedData.categories));\r\n      }\r\n    }\r\n  }, [selectedMode, currentQuizId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode !== null) {\r\n      localStorage.setItem('selectedMode', selectedMode);\r\n    }\r\n  }, [selectedMode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('showQuizPage', showQuizPage.toString());\r\n  }, [showQuizPage]);\r\n\r\n  useEffect(() => {\r\n    if (currentQuizId !== null) {\r\n      localStorage.setItem('currentQuizId', currentQuizId);\r\n    }\r\n  }, [currentQuizId]);\r\n\r\n  const updateQuizState = (uuid, newState) => {\r\n    setQuizStates((prevStates) => {\r\n      const updatedStates = {\r\n        ...prevStates,\r\n        [uuid]: {\r\n          ...prevStates[uuid],\r\n          ...newState,\r\n        },\r\n      };\r\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  const markBlockAsUsed = (quizId, categoryId, blockId) => {\r\n    if (!categoryId) {\r\n      console.error('categoryId не определен, невозможно отметить блок как используемый');\r\n      return;\r\n    }\r\n\r\n    setQuizStates((prevStates) => {\r\n      const previousState = prevStates[quizId] || {};\r\n      const updatedUsedBlocks = { ...previousState.usedBlocks };\r\n\r\n      if (!updatedUsedBlocks[categoryId]) {\r\n        updatedUsedBlocks[categoryId] = [];\r\n      }\r\n\r\n      if (!updatedUsedBlocks[categoryId].includes(blockId)) {\r\n        updatedUsedBlocks[categoryId].push(blockId);\r\n      }\r\n\r\n      const updatedStates = {\r\n        ...prevStates,\r\n        [quizId]: {\r\n          ...previousState,\r\n          usedBlocks: updatedUsedBlocks,\r\n        },\r\n      };\r\n\r\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n      localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\r\n\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <QuizContext.Provider value={{\r\n      showQuizPage,\r\n      setShowQuizPage,\r\n      selectedMode,\r\n      setSelectedMode,\r\n      currentQuizId,\r\n      setCurrentQuizId,\r\n      quizStates,\r\n      setQuizStates,\r\n      updateQuizState,\r\n      markBlockAsUsed,\r\n      data,\r\n    }}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}