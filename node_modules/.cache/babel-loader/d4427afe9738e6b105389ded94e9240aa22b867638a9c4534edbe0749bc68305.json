{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { loadJsonDataByMode } from '../utils/loadJsonData'; // Adjusted import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage({\n  showMainMenu,\n  handleNewGame\n}) {\n  _s();\n  const {\n    mode\n  } = useParams();\n  const [usedBlocks, setUsedBlocks] = useState(() => {\n    const saved = localStorage.getItem('usedBlocks');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (mode) {\n      console.log('Загрузка данных для режима:', mode); // Log to check mode\n      const selectedData = loadJsonDataByMode(parseInt(mode, 10)); // Load data by mode\n      if (selectedData) {\n        console.log('Данные загружены:', selectedData); // Log to check loaded data\n        setData(selectedData.categories);\n      } else {\n        console.log('Данные не найдены для режима:', mode); // Log if data not found\n      }\n    }\n  }, [mode]);\n  const markBlockAsUsed = (categoryName, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      updatedUsedBlocks[categoryName].push(blockId);\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\n      return updatedUsedBlocks;\n    });\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: usedBlocks,\n      markBlockAsUsed: markBlockAsUsed,\n      data: data,\n      mode: mode // Passing mode to ContentContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings,\n      showMainMenu: showMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"EozK+7Et2D+TvjlXvvoFEYJgHDY=\", false, function () {\n  return [useParams];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","loadJsonDataByMode","jsxDEV","_jsxDEV","QuizPage","showMainMenu","handleNewGame","_s","mode","usedBlocks","setUsedBlocks","saved","localStorage","getItem","JSON","parse","isSettingsVisible","setIsSettingsVisible","data","setData","console","log","selectedData","parseInt","categories","markBlockAsUsed","categoryName","blockId","prevUsedBlocks","updatedUsedBlocks","push","setItem","stringify","showSettings","hideSettings","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData'; // Adjusted import\r\n\r\nfunction QuizPage({ showMainMenu, handleNewGame }) {\r\n  const { mode } = useParams();\r\n  const [usedBlocks, setUsedBlocks] = useState(() => {\r\n    const saved = localStorage.getItem('usedBlocks');\r\n    return saved ? JSON.parse(saved) : {};\r\n  });\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (mode) {\r\n      console.log('Загрузка данных для режима:', mode); // Log to check mode\r\n      const selectedData = loadJsonDataByMode(parseInt(mode, 10)); // Load data by mode\r\n      if (selectedData) {\r\n        console.log('Данные загружены:', selectedData); // Log to check loaded data\r\n        setData(selectedData.categories);\r\n      } else {\r\n        console.log('Данные не найдены для режима:', mode); // Log if data not found\r\n      }\r\n    }\r\n  }, [mode]);\r\n\r\n  const markBlockAsUsed = (categoryName, blockId) => {\r\n    setUsedBlocks((prevUsedBlocks) => {\r\n      const updatedUsedBlocks = { ...prevUsedBlocks };\r\n      if (!updatedUsedBlocks[categoryName]) {\r\n        updatedUsedBlocks[categoryName] = [];\r\n      }\r\n      updatedUsedBlocks[categoryName].push(blockId);\r\n\r\n      localStorage.setItem('usedBlocks', JSON.stringify(updatedUsedBlocks));\r\n      return updatedUsedBlocks;\r\n    });\r\n  };\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      <ContentContainer\r\n        usedBlocks={usedBlocks}\r\n        markBlockAsUsed={markBlockAsUsed}\r\n        data={data}\r\n        mode={mode} // Passing mode to ContentContainer\r\n      />\r\n      <EndMessage />\r\n      <MenuModal showSettings={showSettings} showMainMenu={showMainMenu} />\r\n      {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}