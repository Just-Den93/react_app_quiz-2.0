{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\NewGameButton\\\\NewGameButton.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuizContext } from '../../context/QuizContext';\nimport { useMenuModal } from '../MenuModal/menuModalUtils';\nimport styles from './NewGameButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewGameButton({\n  currentQuizId\n}) {\n  _s();\n  const {\n    setQuizStates\n  } = useQuizContext();\n  const {\n    closeMenuModal\n  } = useMenuModal();\n  const handleNewGame = () => {\n    // Очищаем данные текущей викторины в localStorage\n    localStorage.removeItem(`data-${currentQuizId}`);\n    localStorage.removeItem(`usedBlocks-${currentQuizId}`); // Удаляем использованные блоки\n\n    // Сброс состояния в контексте\n    setQuizStates(prevStates => ({\n      ...prevStates,\n      [currentQuizId]: {\n        usedBlocks: {},\n        // Полностью очищаем использованные блоки\n        data: null // Очищаем данные\n      }\n    }));\n\n    // Закрываем меню после сброса состояния\n    closeMenuModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"new-game-button\",\n    className: styles.newGameButton,\n    onClick: handleNewGame,\n    children: \"\\u041D\\u043E\\u0432\\u0430 \\u0433\\u0440\\u0430\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(NewGameButton, \"rotc9pP2mjcMCxfEk+itRyUbgYU=\", false, function () {\n  return [useQuizContext, useMenuModal];\n});\n_c = NewGameButton;\nexport default NewGameButton;\nvar _c;\n$RefreshReg$(_c, \"NewGameButton\");","map":{"version":3,"names":["React","useQuizContext","useMenuModal","styles","jsxDEV","_jsxDEV","NewGameButton","currentQuizId","_s","setQuizStates","closeMenuModal","handleNewGame","localStorage","removeItem","prevStates","usedBlocks","data","id","className","newGameButton","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/NewGameButton/NewGameButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport { useMenuModal } from '../MenuModal/menuModalUtils';\r\nimport styles from './NewGameButton.module.css';\r\n\r\nfunction NewGameButton({ currentQuizId }) {\r\n  const { setQuizStates } = useQuizContext();\r\n  const { closeMenuModal } = useMenuModal();\r\n\r\n  const handleNewGame = () => {\r\n    // Очищаем данные текущей викторины в localStorage\r\n    localStorage.removeItem(`data-${currentQuizId}`);\r\n    localStorage.removeItem(`usedBlocks-${currentQuizId}`); // Удаляем использованные блоки\r\n\r\n    // Сброс состояния в контексте\r\n    setQuizStates((prevStates) => ({\r\n      ...prevStates,\r\n      [currentQuizId]: {\r\n        usedBlocks: {}, // Полностью очищаем использованные блоки\r\n        data: null, // Очищаем данные\r\n      },\r\n    }));\r\n\r\n    // Закрываем меню после сброса состояния\r\n    closeMenuModal();\r\n  };\r\n\r\n  return (\r\n    <button id=\"new-game-button\" className={styles.newGameButton} onClick={handleNewGame}>\r\n      Нова гра\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default NewGameButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAc,CAAC,GAAGR,cAAc,CAAC,CAAC;EAC1C,MAAM;IAAES;EAAe,CAAC,GAAGR,YAAY,CAAC,CAAC;EAEzC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACAC,YAAY,CAACC,UAAU,CAAC,QAAQN,aAAa,EAAE,CAAC;IAChDK,YAAY,CAACC,UAAU,CAAC,cAAcN,aAAa,EAAE,CAAC,CAAC,CAAC;;IAExD;IACAE,aAAa,CAAEK,UAAU,KAAM;MAC7B,GAAGA,UAAU;MACb,CAACP,aAAa,GAAG;QACfQ,UAAU,EAAE,CAAC,CAAC;QAAE;QAChBC,IAAI,EAAE,IAAI,CAAE;MACd;IACF,CAAC,CAAC,CAAC;;IAEH;IACAN,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,oBACEL,OAAA;IAAQY,EAAE,EAAC,iBAAiB;IAACC,SAAS,EAAEf,MAAM,CAACgB,aAAc;IAACC,OAAO,EAAET,aAAc;IAAAU,QAAA,EAAC;EAEtF;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACjB,EAAA,CA3BQF,aAAa;EAAA,QACML,cAAc,EACbC,YAAY;AAAA;AAAAwB,EAAA,GAFhCpB,aAAa;AA6BtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}