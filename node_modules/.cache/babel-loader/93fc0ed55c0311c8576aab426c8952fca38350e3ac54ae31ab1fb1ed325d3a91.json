{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { useQuizContext } from '../context/QuizContext';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    quizStates,\n    updateQuizState,\n    setShowQuizPage,\n    selectedMode,\n    currentQuizId\n  } = useQuizContext();\n\n  // Использование useMemo для оптимизации вычисления currentQuizState\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\n  const [data, setData] = useState(currentQuizState.data || null);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  useEffect(() => {\n    console.log('Current Quiz ID:', currentQuizId);\n    console.log('Current Quiz State:', currentQuizState);\n    if (!data && currentQuizId && selectedMode) {\n      console.log('Loading data for mode:', selectedMode);\n      const selectedData = loadJsonDataByMode(selectedMode);\n      if (selectedData) {\n        console.log('Data loaded:', selectedData);\n        setData(selectedData.categories);\n        updateQuizState(currentQuizId, {\n          data: selectedData.categories\n        });\n      } else {\n        console.log('No data found for mode:', selectedMode);\n      }\n    }\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(ContentContainer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: () => setIsSettingsVisible(true),\n      showMainMenu: () => setShowQuizPage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: () => setIsSettingsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"otGEaEdYkYJ87pIxAwuSKYY+ZGo=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","useQuizContext","loadJsonDataByMode","jsxDEV","_jsxDEV","QuizPage","_s","quizStates","updateQuizState","setShowQuizPage","selectedMode","currentQuizId","currentQuizState","data","setData","isSettingsVisible","setIsSettingsVisible","console","log","selectedData","categories","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","showSettings","showMainMenu","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { useQuizContext } from '../context/QuizContext';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, updateQuizState, setShowQuizPage, selectedMode, currentQuizId } = useQuizContext();\r\n  \r\n  // Использование useMemo для оптимизации вычисления currentQuizState\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [data, setData] = useState(currentQuizState.data || null);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('Current Quiz ID:', currentQuizId);\r\n    console.log('Current Quiz State:', currentQuizState);\r\n\r\n    if (!data && currentQuizId && selectedMode) {\r\n      console.log('Loading data for mode:', selectedMode);\r\n      const selectedData = loadJsonDataByMode(selectedMode);\r\n      if (selectedData) {\r\n        console.log('Data loaded:', selectedData);\r\n        setData(selectedData.categories);\r\n        updateQuizState(currentQuizId, { data: selectedData.categories });\r\n      } else {\r\n        console.log('No data found for mode:', selectedMode);\r\n      }\r\n    }\r\n  }, [data, currentQuizId, selectedMode, currentQuizState, updateQuizState]);\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      {data ? (\r\n        <ContentContainer data={data} />\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal showSettings={() => setIsSettingsVisible(true)} showMainMenu={() => setShowQuizPage(false)} />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}