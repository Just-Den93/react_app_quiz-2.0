{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/QuizPage.jsx\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { AppContext } from '../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage({\n  mode\n}) {\n  _s();\n  const {\n    usedBlocks,\n    setUsedBlocks\n  } = useContext(AppContext);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    if (mode) {\n      const selectedData = loadJsonDataByMode(mode);\n      if (selectedData) {\n        setData(selectedData.categories);\n      }\n    }\n  }, [mode]);\n  const markBlockAsUsed = (categoryName, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      updatedUsedBlocks[categoryName].push(blockId);\n      return updatedUsedBlocks;\n    });\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: usedBlocks,\n      markBlockAsUsed: markBlockAsUsed,\n      data: data,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"TdFxYPGDRgHTC6xrGO8xHHCeQYs=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","loadJsonDataByMode","AppContext","jsxDEV","_jsxDEV","QuizPage","mode","_s","usedBlocks","setUsedBlocks","isSettingsVisible","setIsSettingsVisible","data","setData","selectedData","categories","markBlockAsUsed","categoryName","blockId","prevUsedBlocks","updatedUsedBlocks","push","showSettings","hideSettings","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage.jsx"],"sourcesContent":["// src/components/QuizPage.jsx\r\n\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nfunction QuizPage({ mode }) {\r\n    const { usedBlocks, setUsedBlocks } = useContext(AppContext);\r\n    const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (mode) {\r\n            const selectedData = loadJsonDataByMode(mode);\r\n            if (selectedData) {\r\n                setData(selectedData.categories);\r\n            }\r\n        }\r\n    }, [mode]);\r\n\r\n    const markBlockAsUsed = (categoryName, blockId) => {\r\n        setUsedBlocks((prevUsedBlocks) => {\r\n            const updatedUsedBlocks = { ...prevUsedBlocks };\r\n            if (!updatedUsedBlocks[categoryName]) {\r\n                updatedUsedBlocks[categoryName] = [];\r\n            }\r\n            updatedUsedBlocks[categoryName].push(blockId);\r\n\r\n            return updatedUsedBlocks;\r\n        });\r\n    };\r\n\r\n    const showSettings = () => {\r\n        setIsSettingsVisible(true);\r\n    };\r\n\r\n    const hideSettings = () => {\r\n        setIsSettingsVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.quiz_page}>\r\n            <Header />\r\n            <ContentContainer\r\n                usedBlocks={usedBlocks}\r\n                markBlockAsUsed={markBlockAsUsed}\r\n                data={data}\r\n                mode={mode}\r\n            />\r\n            <EndMessage />\r\n            <MenuModal showSettings={showSettings} />\r\n            {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGjB,UAAU,CAACU,UAAU,CAAC;EAC5D,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACN,MAAMQ,YAAY,GAAGb,kBAAkB,CAACK,IAAI,CAAC;MAC7C,IAAIQ,YAAY,EAAE;QACdD,OAAO,CAACC,YAAY,CAACC,UAAU,CAAC;MACpC;IACJ;EACJ,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMU,eAAe,GAAGA,CAACC,YAAY,EAAEC,OAAO,KAAK;IAC/CT,aAAa,CAAEU,cAAc,IAAK;MAC9B,MAAMC,iBAAiB,GAAG;QAAE,GAAGD;MAAe,CAAC;MAC/C,IAAI,CAACC,iBAAiB,CAACH,YAAY,CAAC,EAAE;QAClCG,iBAAiB,CAACH,YAAY,CAAC,GAAG,EAAE;MACxC;MACAG,iBAAiB,CAACH,YAAY,CAAC,CAACI,IAAI,CAACH,OAAO,CAAC;MAE7C,OAAOE,iBAAiB;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBX,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACvBZ,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACIP,OAAA;IAAKoB,SAAS,EAAExB,MAAM,CAACyB,SAAU;IAAAC,QAAA,gBAC7BtB,OAAA,CAACT,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1B,OAAA,CAACR,gBAAgB;MACbY,UAAU,EAAEA,UAAW;MACvBQ,eAAe,EAAEA,eAAgB;MACjCJ,IAAI,EAAEA,IAAK;MACXN,IAAI,EAAEA;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACF1B,OAAA,CAACP,UAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACd1B,OAAA,CAACN,SAAS;MAACwB,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxCpB,iBAAiB,iBAAIN,OAAA,CAACL,QAAQ;MAACgC,OAAO,EAAER;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd;AAACvB,EAAA,CAhDQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}