{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\ContentContainer.jsx\",\n  _s = $RefreshSig$();\n// src/components/ContentContainer.jsx\nimport React, { useState, useEffect } from 'react';\nimport CategoryRow from './CategoryRow';\nimport Modal from './Modal';\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\nimport styles from '../styles/ContentContainer.module.css';\nimport { loadJsonDataFiles } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentContainer({\n  usedBlocks,\n  markBlockAsUsed\n}) {\n  _s();\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [data, setData] = useState(null);\n  const [mode, setMode] = useState(null);\n  useEffect(() => {\n    const dataFiles = loadJsonDataFiles();\n    const selectedData = dataFiles.find(file => file.mode === 1); // Modify logic as per requirement\n    if (selectedData) {\n      setData(selectedData.categories);\n      setMode(selectedData.mode);\n    }\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: styles.contentContainer,\n    children: [data.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      category: category,\n      usedBlocks: usedBlocks,\n      onItemClick: block => handleItemClick(block, category.id, setSelectedBlock)\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n      block: selectedBlock,\n      onClose: () => closeModal(setSelectedBlock),\n      markBlockAsUsed: markBlockAsUsed,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentContainer, \"X/pYEvoeQqYfOauqj96Qm8jLTuk=\");\n_c = ContentContainer;\nexport default ContentContainer;\nvar _c;\n$RefreshReg$(_c, \"ContentContainer\");","map":{"version":3,"names":["React","useState","useEffect","CategoryRow","Modal","handleItemClick","closeModal","styles","loadJsonDataFiles","jsxDEV","_jsxDEV","ContentContainer","usedBlocks","markBlockAsUsed","_s","selectedBlock","setSelectedBlock","data","setData","mode","setMode","dataFiles","selectedData","find","file","categories","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","contentContainer","map","category","onItemClick","block","onClose","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/ContentContainer.jsx"],"sourcesContent":["// src/components/ContentContainer.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport CategoryRow from './CategoryRow';\r\nimport Modal from './Modal';\r\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\r\nimport styles from '../styles/ContentContainer.module.css';\r\nimport { loadJsonDataFiles } from '../utils/loadJsonData';\r\n\r\nfunction ContentContainer({ usedBlocks, markBlockAsUsed }) {\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [mode, setMode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const dataFiles = loadJsonDataFiles();\r\n    const selectedData = dataFiles.find(file => file.mode === 1); // Modify logic as per requirement\r\n    if (selectedData) {\r\n      setData(selectedData.categories);\r\n      setMode(selectedData.mode);\r\n    }\r\n  }, []);\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"content-container\" className={styles.contentContainer}>\r\n      {data.map((category) => (\r\n        <CategoryRow\r\n          key={category.id}\r\n          category={category}\r\n          usedBlocks={usedBlocks}\r\n          onItemClick={(block) => handleItemClick(block, category.id, setSelectedBlock)}\r\n        />\r\n      ))}\r\n      {selectedBlock && (\r\n        <Modal\r\n          block={selectedBlock}\r\n          onClose={() => closeModal(setSelectedBlock)}\r\n          markBlockAsUsed={markBlockAsUsed}\r\n          mode={mode}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,EAAEC,UAAU,QAAQ,gCAAgC;AAC5E,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,SAASC,iBAAiB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,gBAAgBA,CAAC;EAAEC,UAAU;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAGb,iBAAiB,CAAC,CAAC;IACrC,MAAMc,YAAY,GAAGD,SAAS,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACL,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAIG,YAAY,EAAE;MAChBJ,OAAO,CAACI,YAAY,CAACG,UAAU,CAAC;MAChCL,OAAO,CAACE,YAAY,CAACH,IAAI,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,IAAI,EAAE;IACT,oBAAOP,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEpB,OAAA;IAAKqB,EAAE,EAAC,mBAAmB;IAACC,SAAS,EAAEzB,MAAM,CAAC0B,gBAAiB;IAAAP,QAAA,GAC5DT,IAAI,CAACiB,GAAG,CAAEC,QAAQ,iBACjBzB,OAAA,CAACP,WAAW;MAEVgC,QAAQ,EAAEA,QAAS;MACnBvB,UAAU,EAAEA,UAAW;MACvBwB,WAAW,EAAGC,KAAK,IAAKhC,eAAe,CAACgC,KAAK,EAAEF,QAAQ,CAACJ,EAAE,EAAEf,gBAAgB;IAAE,GAHzEmB,QAAQ,CAACJ,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACF,CAAC,EACDf,aAAa,iBACZL,OAAA,CAACN,KAAK;MACJiC,KAAK,EAAEtB,aAAc;MACrBuB,OAAO,EAAEA,CAAA,KAAMhC,UAAU,CAACU,gBAAgB,CAAE;MAC5CH,eAAe,EAAEA,eAAgB;MACjCM,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAtCQH,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAwCzB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}