{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\app-quiz-react-project\\\\quiz-app\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useQuizContext } from '../context/QuizContext';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage({\n  id\n}) {\n  _s();\n  const {\n    getQuizState,\n    setQuizState\n  } = useQuizContext();\n  const quizState = getQuizState(id);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [usedBlocks, setUsedBlocks] = useState(() => quizState.usedBlocks || {});\n  useEffect(() => {\n    // Логика инициализации данных\n    // Например, загрузка данных или установка режима\n    setQuizState(id, {\n      ...quizState,\n      selectedMode: 1\n    }); // Пример установки режима\n  }, [id]);\n  const markBlockAsUsed = (categoryName, blockId) => {\n    setUsedBlocks(prevUsedBlocks => {\n      const updatedUsedBlocks = {\n        ...prevUsedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      updatedUsedBlocks[categoryName].push(blockId);\n      const updatedState = {\n        ...quizState,\n        usedBlocks: updatedUsedBlocks\n      };\n      setQuizState(id, updatedState);\n      return updatedUsedBlocks;\n    });\n  };\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: usedBlocks,\n      markBlockAsUsed: markBlockAsUsed,\n      data: quizState.data,\n      mode: quizState.selectedMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings,\n      showMainMenu: () => setQuizState(id, {\n        ...quizState,\n        showQuizPage: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"PDde4sPV7FuYpVIxl9MHRTeguxA=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useQuizContext","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","jsxDEV","_jsxDEV","QuizPage","id","_s","getQuizState","setQuizState","quizState","isSettingsVisible","setIsSettingsVisible","usedBlocks","setUsedBlocks","selectedMode","markBlockAsUsed","categoryName","blockId","prevUsedBlocks","updatedUsedBlocks","push","updatedState","showSettings","hideSettings","className","quiz_page","children","fileName","_jsxFileName","lineNumber","columnNumber","data","mode","showMainMenu","showQuizPage","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/app-quiz-react-project/quiz-app/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useQuizContext } from '../context/QuizContext';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\n\r\nfunction QuizPage({ id }) {\r\n  const { getQuizState, setQuizState } = useQuizContext();\r\n  const quizState = getQuizState(id);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [usedBlocks, setUsedBlocks] = useState(() => quizState.usedBlocks || {});\r\n\r\n  useEffect(() => {\r\n    // Логика инициализации данных\r\n    // Например, загрузка данных или установка режима\r\n    setQuizState(id, { ...quizState, selectedMode: 1 }); // Пример установки режима\r\n  }, [id]);\r\n\r\n  const markBlockAsUsed = (categoryName, blockId) => {\r\n    setUsedBlocks(prevUsedBlocks => {\r\n      const updatedUsedBlocks = { ...prevUsedBlocks };\r\n      if (!updatedUsedBlocks[categoryName]) {\r\n        updatedUsedBlocks[categoryName] = [];\r\n      }\r\n      updatedUsedBlocks[categoryName].push(blockId);\r\n\r\n      const updatedState = { ...quizState, usedBlocks: updatedUsedBlocks };\r\n      setQuizState(id, updatedState);\r\n\r\n      return updatedUsedBlocks;\r\n    });\r\n  };\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      <ContentContainer\r\n        usedBlocks={usedBlocks}\r\n        markBlockAsUsed={markBlockAsUsed}\r\n        data={quizState.data}\r\n        mode={quizState.selectedMode}\r\n      />\r\n      <EndMessage />\r\n      <MenuModal showSettings={showSettings} showMainMenu={() => setQuizState(id, { ...quizState, showQuizPage: false })} />\r\n      {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}