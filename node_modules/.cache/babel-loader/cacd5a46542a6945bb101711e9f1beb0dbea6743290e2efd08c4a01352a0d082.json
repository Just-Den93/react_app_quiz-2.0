{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport ContentContainer from '../ContentContainer/ContentContainer';\nimport EndMessage from '../EndMessage/EndMessage';\nimport MenuModal from '../MenuModal/MenuModal';\nimport Modal from '../Modal/Modal';\nimport WarningMessage from '../WarningMessage/WarningMessage';\nimport Settings from '../Settings/Settings';\nimport ConfettiAnimation from '../ConfettiAnimation/ConfettiAnimation';\nimport styles from './QuizPage.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nimport PCImage from '../../images/PC_horizontal_1line_black.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const {\n    quizStates,\n    setShowQuizPage,\n    currentQuizId,\n    selectedMode,\n    data,\n    markBlockAsUsed,\n    setQuizStates\n  } = useQuizContext();\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [confettiRunning, setConfettiRunning] = useState(false);\n  const [showEndMessage, setShowEndMessage] = useState(false);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const [isWarningVisible, setIsWarningVisible] = useState(false);\n\n  // Добавим управление таймером\n  const [timerStarted, setTimerStarted] = useState(false);\n  const totalBlocks = useMemo(() => {\n    return (data === null || data === void 0 ? void 0 : data.reduce((acc, category) => acc + category.blocks.length, 0)) || 0;\n  }, [data]);\n  const usedBlocksCount = useMemo(() => {\n    return Object.values(currentQuizState.usedBlocks || {}).reduce((acc, categoryBlocks) => acc + categoryBlocks.length, 0);\n  }, [currentQuizState]);\n  const handleBlockSelect = (block, category) => {\n    var _currentQuizState$use, _currentQuizState$use2;\n    setSelectedBlock(block);\n    setSelectedCategory(category);\n    const isBlockUsed = (_currentQuizState$use = currentQuizState.usedBlocks) === null || _currentQuizState$use === void 0 ? void 0 : (_currentQuizState$use2 = _currentQuizState$use[category.id]) === null || _currentQuizState$use2 === void 0 ? void 0 : _currentQuizState$use2.includes(block.id);\n    setIsWarningVisible(isBlockUsed);\n  };\n  const handleCloseModal = () => {\n    setSelectedBlock(null);\n    setSelectedCategory(null);\n    setIsWarningVisible(false);\n  };\n  const handleSelectCategory = (categoryId, blockId) => {\n    markBlockAsUsed(currentQuizId, categoryId, blockId);\n    if (usedBlocksCount === totalBlocks - 1) {\n      setConfettiRunning(true);\n      setShowEndMessage(true);\n    }\n    handleCloseModal();\n  };\n  const handleTryAgain = () => {\n    setIsWarningVisible(false);\n  };\n  const handleContinue = () => {\n    setIsWarningVisible(false);\n    handleCloseModal();\n  };\n  const handleNewGame = () => {\n    localStorage.removeItem(`data-${currentQuizId}`);\n    localStorage.removeItem(`usedBlocks-${currentQuizId}`);\n    localStorage.removeItem('quizStates');\n    setQuizStates(prevStates => ({\n      ...prevStates,\n      [currentQuizId]: {\n        usedBlocks: {},\n        data: null\n      }\n    }));\n    setConfettiRunning(false);\n    setShowEndMessage(false);\n  };\n  const handleMainMenu = (clearState = false) => {\n    if (clearState) {\n      localStorage.removeItem(`data-${currentQuizId}`);\n      setQuizStates(prevStates => ({\n        ...prevStates,\n        [currentQuizId]: {\n          usedBlocks: {},\n          data: null\n        }\n      }));\n    }\n    setShowQuizPage(false);\n    setConfettiRunning(false);\n  };\n\n  // Добавляем обработчик для принудительной остановки таймера\n  const handleForceStop = () => {\n    setTimerStarted(false); // Здесь вы можете добавить логику для обработки принудительной остановки\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(ConfettiAnimation, {\n      isRunning: confettiRunning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: PCImage,\n        alt: \"PC horizontal line\",\n        className: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n        data: data,\n        onBlockSelect: handleBlockSelect,\n        usedBlocks: currentQuizState.usedBlocks || {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n        block: selectedBlock,\n        categoryName: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name) || 'Без категории',\n        onClose: handleCloseModal,\n        selectedMode: selectedMode,\n        onSelectCategory: handleSelectCategory,\n        isWarningVisible: isWarningVisible,\n        onTryAgain: handleTryAgain,\n        onContinue: handleContinue,\n        timerStarted: timerStarted,\n        setTimerStarted: setTimerStarted,\n        handleForceStop: handleForceStop // Передаем функцию для обработки остановки\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), showEndMessage && /*#__PURE__*/_jsxDEV(EndMessage, {\n      onNewGame: handleNewGame,\n      onMainMenu: () => handleMainMenu(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: () => setIsSettingsVisible(true),\n      showMainMenu: () => handleMainMenu(false),\n      onNewGame: handleNewGame,\n      isVisible: isMenuVisible,\n      closeMenuModal: () => setIsMenuVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: () => setIsSettingsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizPage, \"1ZwCYfdMX5LbSu9Z6yGYzrov4Jw=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useMemo","useState","ContentContainer","EndMessage","MenuModal","Modal","WarningMessage","Settings","ConfettiAnimation","styles","useQuizContext","PCImage","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","_s","quizStates","setShowQuizPage","currentQuizId","selectedMode","data","markBlockAsUsed","setQuizStates","currentQuizState","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedCategory","setSelectedCategory","confettiRunning","setConfettiRunning","showEndMessage","setShowEndMessage","isMenuVisible","setIsMenuVisible","isWarningVisible","setIsWarningVisible","timerStarted","setTimerStarted","totalBlocks","reduce","acc","category","blocks","length","usedBlocksCount","Object","values","usedBlocks","categoryBlocks","handleBlockSelect","block","_currentQuizState$use","_currentQuizState$use2","isBlockUsed","id","includes","handleCloseModal","handleSelectCategory","categoryId","blockId","handleTryAgain","handleContinue","handleNewGame","localStorage","removeItem","prevStates","handleMainMenu","clearState","handleForceStop","className","quiz_page","children","isRunning","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","image","onBlockSelect","categoryName","name","onClose","onSelectCategory","onTryAgain","onContinue","onNewGame","onMainMenu","showSettings","showMainMenu","isVisible","closeMenuModal","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\nimport EndMessage from '../EndMessage/EndMessage';\r\nimport MenuModal from '../MenuModal/MenuModal';\r\nimport Modal from '../Modal/Modal';\r\nimport WarningMessage from '../WarningMessage/WarningMessage';\r\nimport Settings from '../Settings/Settings';\r\nimport ConfettiAnimation from '../ConfettiAnimation/ConfettiAnimation';\r\nimport styles from './QuizPage.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport PCImage from '../../images/PC_horizontal_1line_black.svg';\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, setShowQuizPage, currentQuizId, selectedMode, data, markBlockAsUsed, setQuizStates } = useQuizContext();\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [confettiRunning, setConfettiRunning] = useState(false);\r\n  const [showEndMessage, setShowEndMessage] = useState(false);\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n  const [isWarningVisible, setIsWarningVisible] = useState(false);\r\n  \r\n  // Добавим управление таймером\r\n  const [timerStarted, setTimerStarted] = useState(false);\r\n\r\n  const totalBlocks = useMemo(() => {\r\n    return data?.reduce((acc, category) => acc + category.blocks.length, 0) || 0;\r\n  }, [data]);\r\n\r\n  const usedBlocksCount = useMemo(() => {\r\n    return Object.values(currentQuizState.usedBlocks || {}).reduce(\r\n      (acc, categoryBlocks) => acc + categoryBlocks.length,\r\n      0\r\n    );\r\n  }, [currentQuizState]);\r\n\r\n  const handleBlockSelect = (block, category) => {\r\n    setSelectedBlock(block);\r\n    setSelectedCategory(category);\r\n\r\n    const isBlockUsed = currentQuizState.usedBlocks?.[category.id]?.includes(block.id);\r\n    setIsWarningVisible(isBlockUsed);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBlock(null);\r\n    setSelectedCategory(null);\r\n    setIsWarningVisible(false);\r\n  };\r\n\r\n  const handleSelectCategory = (categoryId, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryId, blockId);\r\n\r\n    if (usedBlocksCount === totalBlocks - 1) {\r\n      setConfettiRunning(true);\r\n      setShowEndMessage(true);\r\n    }\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleTryAgain = () => {\r\n    setIsWarningVisible(false);\r\n  };\r\n\r\n  const handleContinue = () => {\r\n    setIsWarningVisible(false);\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleNewGame = () => {\r\n    localStorage.removeItem(`data-${currentQuizId}`);\r\n    localStorage.removeItem(`usedBlocks-${currentQuizId}`);\r\n    localStorage.removeItem('quizStates');\r\n    setQuizStates((prevStates) => ({\r\n      ...prevStates,\r\n      [currentQuizId]: {\r\n        usedBlocks: {},\r\n        data: null,\r\n      },\r\n    }));\r\n\r\n    setConfettiRunning(false);\r\n    setShowEndMessage(false);\r\n  };\r\n\r\n  const handleMainMenu = (clearState = false) => {\r\n    if (clearState) {\r\n      localStorage.removeItem(`data-${currentQuizId}`);\r\n      setQuizStates((prevStates) => ({\r\n        ...prevStates,\r\n        [currentQuizId]: {\r\n          usedBlocks: {},\r\n          data: null,\r\n        },\r\n      }));\r\n    }\r\n    setShowQuizPage(false);\r\n    setConfettiRunning(false);\r\n  };\r\n\r\n  // Добавляем обработчик для принудительной остановки таймера\r\n  const handleForceStop = () => {\r\n    setTimerStarted(false); // Здесь вы можете добавить логику для обработки принудительной остановки\r\n  };\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <ConfettiAnimation isRunning={confettiRunning} />\r\n      {data ? (\r\n        <>\r\n          <img src={PCImage} alt=\"PC horizontal line\" className={styles.image} />\r\n          <ContentContainer\r\n            data={data}\r\n            onBlockSelect={handleBlockSelect}\r\n            usedBlocks={currentQuizState.usedBlocks || {}}\r\n          />\r\n\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              categoryName={selectedCategory?.name || 'Без категории'}\r\n              onClose={handleCloseModal}\r\n              selectedMode={selectedMode}\r\n              onSelectCategory={handleSelectCategory}\r\n              isWarningVisible={isWarningVisible}\r\n              onTryAgain={handleTryAgain}\r\n              onContinue={handleContinue}\r\n              timerStarted={timerStarted}\r\n              setTimerStarted={setTimerStarted}\r\n              handleForceStop={handleForceStop} // Передаем функцию для обработки остановки\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n\r\n      {showEndMessage && (\r\n        <EndMessage\r\n          onNewGame={handleNewGame}\r\n          onMainMenu={() => handleMainMenu(true)}\r\n        />\r\n      )}\r\n\r\n      <MenuModal\r\n        showSettings={() => setIsSettingsVisible(true)}\r\n        showMainMenu={() => handleMainMenu(false)}\r\n        onNewGame={handleNewGame}\r\n        isVisible={isMenuVisible}\r\n        closeMenuModal={() => setIsMenuVisible(false)}\r\n      />\r\n\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}