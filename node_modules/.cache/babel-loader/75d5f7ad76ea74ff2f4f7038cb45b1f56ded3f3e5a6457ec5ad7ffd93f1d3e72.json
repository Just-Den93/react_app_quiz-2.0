{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\context\\\\GameStateContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\n\n// Создаем контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStateContext = /*#__PURE__*/createContext();\nexport function useGameState() {\n  _s();\n  return useContext(GameStateContext);\n}\n_s(useGameState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function GameStateProvider({\n  children\n}) {\n  _s2();\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\n    return localStorage.getItem('currentQuizId');\n  });\n  const [quizStates, setQuizStates] = useState(() => {\n    const savedStates = localStorage.getItem('quizStates');\n    return savedStates ? JSON.parse(savedStates) : {};\n  });\n  const [data, setData] = useState(() => {\n    const savedData = localStorage.getItem('data');\n    return savedData ? JSON.parse(savedData) : null;\n  });\n  const [completedGames, setCompletedGames] = useState(() => {\n    const savedGames = localStorage.getItem('completedGames');\n    return savedGames ? JSON.parse(savedGames) : 0;\n  });\n  useEffect(() => {\n    if (currentQuizId) {\n      const selectedData = loadJsonDataByMode(currentQuizId);\n      const savedData = localStorage.getItem('data');\n      if (selectedData && JSON.stringify(selectedData) !== savedData) {\n        setData(selectedData);\n        localStorage.setItem('data', JSON.stringify(selectedData));\n      }\n    }\n  }, [currentQuizId]);\n  const updateQuizState = (uuid, newState) => {\n    setQuizStates(prevStates => {\n      const updatedStates = {\n        ...prevStates,\n        [uuid]: {\n          ...prevStates[uuid],\n          ...newState\n        }\n      };\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\n      return updatedStates;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GameStateContext.Provider, {\n    value: {\n      currentQuizId,\n      setCurrentQuizId,\n      quizStates,\n      setQuizStates,\n      data,\n      completedGames,\n      updateQuizState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s2(GameStateProvider, \"It+FjQEQt3IWJ35/SDOZntEXRY4=\");\n_c = GameStateProvider;\nvar _c;\n$RefreshReg$(_c, \"GameStateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadJsonDataByMode","jsxDEV","_jsxDEV","GameStateContext","useGameState","_s","GameStateProvider","children","_s2","currentQuizId","setCurrentQuizId","localStorage","getItem","quizStates","setQuizStates","savedStates","JSON","parse","data","setData","savedData","completedGames","setCompletedGames","savedGames","selectedData","stringify","setItem","updateQuizState","uuid","newState","prevStates","updatedStates","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/context/GameStateContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\n// Создаем контекст\r\nconst GameStateContext = createContext();\r\n\r\nexport function useGameState() {\r\n  return useContext(GameStateContext);\r\n}\r\n\r\nexport function GameStateProvider({ children }) {\r\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\r\n    return localStorage.getItem('currentQuizId');\r\n  });\r\n\r\n  const [quizStates, setQuizStates] = useState(() => {\r\n    const savedStates = localStorage.getItem('quizStates');\r\n    return savedStates ? JSON.parse(savedStates) : {};\r\n  });\r\n\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('data');\r\n    return savedData ? JSON.parse(savedData) : null;\r\n  });\r\n\r\n  const [completedGames, setCompletedGames] = useState(() => {\r\n    const savedGames = localStorage.getItem('completedGames');\r\n    return savedGames ? JSON.parse(savedGames) : 0;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentQuizId) {\r\n      const selectedData = loadJsonDataByMode(currentQuizId);\r\n      const savedData = localStorage.getItem('data');\r\n      if (selectedData && JSON.stringify(selectedData) !== savedData) {\r\n        setData(selectedData);\r\n        localStorage.setItem('data', JSON.stringify(selectedData));\r\n      }\r\n    }\r\n  }, [currentQuizId]);\r\n\r\n  const updateQuizState = (uuid, newState) => {\r\n    setQuizStates((prevStates) => {\r\n      const updatedStates = {\r\n        ...prevStates,\r\n        [uuid]: {\r\n          ...prevStates[uuid],\r\n          ...newState,\r\n        },\r\n      };\r\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GameStateContext.Provider value={{\r\n      currentQuizId, \r\n      setCurrentQuizId, \r\n      quizStates, \r\n      setQuizStates, \r\n      data, \r\n      completedGames, \r\n      updateQuizState\r\n    }}>\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}