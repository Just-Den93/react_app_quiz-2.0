{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\nexport function useQuizContext() {\n  _s();\n  return useContext(QuizContext);\n}\n_s(useQuizContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function QuizProvider({\n  children\n}) {\n  _s2();\n  const [showQuizPage, setShowQuizPage] = useState(() => {\n    const savedState = localStorage.getItem('showQuizPage');\n    return savedState === 'true';\n  });\n  const [selectedMode, setSelectedMode] = useState(() => {\n    const mode = localStorage.getItem('selectedMode');\n    return mode || null;\n  });\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\n    return localStorage.getItem('currentQuizId');\n  });\n  const [quizStates, setQuizStates] = useState(() => {\n    const savedStates = localStorage.getItem('quizStates');\n    return savedStates ? JSON.parse(savedStates) : {};\n  });\n  const [data, setData] = useState(() => {\n    const savedData = localStorage.getItem('data');\n    return savedData ? JSON.parse(savedData) : null;\n  });\n  const [theme, setTheme] = useState(() => {\n    return localStorage.getItem('theme') || 'default';\n  });\n  useEffect(() => {\n    if (selectedMode && currentQuizId) {\n      const selectedData = loadJsonDataByMode(selectedMode);\n      const savedData = localStorage.getItem('data');\n      if (selectedData && JSON.stringify(selectedData.categories) !== savedData) {\n        setData(selectedData.categories);\n        updateQuizState(currentQuizId, {\n          data: selectedData.categories\n        });\n        localStorage.setItem('data', JSON.stringify(selectedData.categories));\n      }\n    }\n  }, [selectedMode, currentQuizId]);\n  useEffect(() => {\n    if (selectedMode !== null) {\n      localStorage.setItem('selectedMode', selectedMode);\n    }\n  }, [selectedMode]);\n  useEffect(() => {\n    localStorage.setItem('showQuizPage', showQuizPage.toString());\n  }, [showQuizPage]);\n  useEffect(() => {\n    if (currentQuizId !== null) {\n      localStorage.setItem('currentQuizId', currentQuizId);\n    }\n  }, [currentQuizId]);\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const updateQuizState = (uuid, newState) => {\n    setQuizStates(prevStates => {\n      const updatedStates = {\n        ...prevStates,\n        [uuid]: {\n          ...prevStates[uuid],\n          ...newState\n        }\n      };\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\n      return updatedStates;\n    });\n  };\n  const markBlockAsUsed = (quizId, categoryId, blockId) => {\n    if (!categoryId) {\n      console.error('categoryId не определен, невозможно отметить блок как используемый');\n      return;\n    }\n    setQuizStates(prevStates => {\n      const previousState = prevStates[quizId] || {};\n      const updatedUsedBlocks = {\n        ...previousState.usedBlocks\n      };\n      if (!updatedUsedBlocks[categoryId]) {\n        updatedUsedBlocks[categoryId] = [];\n      }\n      if (!updatedUsedBlocks[categoryId].includes(blockId)) {\n        updatedUsedBlocks[categoryId].push(blockId);\n      }\n      const updatedStates = {\n        ...prevStates,\n        [quizId]: {\n          ...previousState,\n          usedBlocks: updatedUsedBlocks\n        }\n      };\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\n      localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\n      return updatedStates;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      showQuizPage,\n      setShowQuizPage,\n      selectedMode,\n      setSelectedMode,\n      currentQuizId,\n      setCurrentQuizId,\n      quizStates,\n      setQuizStates,\n      updateQuizState,\n      markBlockAsUsed,\n      data,\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuizProvider, \"85tzzsmYHi951EOj2CKVLgbHRb0=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loadJsonDataByMode","jsxDEV","_jsxDEV","QuizContext","useQuizContext","_s","QuizProvider","children","_s2","showQuizPage","setShowQuizPage","savedState","localStorage","getItem","selectedMode","setSelectedMode","mode","currentQuizId","setCurrentQuizId","quizStates","setQuizStates","savedStates","JSON","parse","data","setData","savedData","theme","setTheme","selectedData","stringify","categories","updateQuizState","setItem","toString","uuid","newState","prevStates","updatedStates","markBlockAsUsed","quizId","categoryId","blockId","console","error","previousState","updatedUsedBlocks","usedBlocks","includes","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nconst QuizContext = createContext();\r\n\r\nexport function useQuizContext() {\r\n  return useContext(QuizContext);\r\n}\r\n\r\nexport function QuizProvider({ children }) {\r\n  const [showQuizPage, setShowQuizPage] = useState(() => {\r\n    const savedState = localStorage.getItem('showQuizPage');\r\n    return savedState === 'true';\r\n  });\r\n\r\n  const [selectedMode, setSelectedMode] = useState(() => {\r\n    const mode = localStorage.getItem('selectedMode');\r\n    return mode || null;\r\n  });\r\n\r\n  const [currentQuizId, setCurrentQuizId] = useState(() => {\r\n    return localStorage.getItem('currentQuizId');\r\n  });\r\n\r\n  const [quizStates, setQuizStates] = useState(() => {\r\n    const savedStates = localStorage.getItem('quizStates');\r\n    return savedStates ? JSON.parse(savedStates) : {};\r\n  });\r\n\r\n  const [data, setData] = useState(() => {\r\n    const savedData = localStorage.getItem('data');\r\n    return savedData ? JSON.parse(savedData) : null;\r\n  });\r\n\r\n  const [theme, setTheme] = useState(() => {\r\n    return localStorage.getItem('theme') || 'default';\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedMode && currentQuizId) {\r\n      const selectedData = loadJsonDataByMode(selectedMode);\r\n      const savedData = localStorage.getItem('data');\r\n\r\n      if (selectedData && JSON.stringify(selectedData.categories) !== savedData) {\r\n        setData(selectedData.categories);\r\n        updateQuizState(currentQuizId, { data: selectedData.categories });\r\n        localStorage.setItem('data', JSON.stringify(selectedData.categories));\r\n      }\r\n    }\r\n  }, [selectedMode, currentQuizId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMode !== null) {\r\n      localStorage.setItem('selectedMode', selectedMode);\r\n    }\r\n  }, [selectedMode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('showQuizPage', showQuizPage.toString());\r\n  }, [showQuizPage]);\r\n\r\n  useEffect(() => {\r\n    if (currentQuizId !== null) {\r\n      localStorage.setItem('currentQuizId', currentQuizId);\r\n    }\r\n  }, [currentQuizId]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const updateQuizState = (uuid, newState) => {\r\n    setQuizStates(prevStates => {\r\n      const updatedStates = {\r\n        ...prevStates,\r\n        [uuid]: {\r\n          ...prevStates[uuid],\r\n          ...newState,\r\n        },\r\n      };\r\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  const markBlockAsUsed = (quizId, categoryId, blockId) => {\r\n    if (!categoryId) {\r\n      console.error('categoryId не определен, невозможно отметить блок как используемый');\r\n      return;\r\n    }\r\n\r\n    setQuizStates(prevStates => {\r\n      const previousState = prevStates[quizId] || {};\r\n      const updatedUsedBlocks = { ...previousState.usedBlocks };\r\n\r\n      if (!updatedUsedBlocks[categoryId]) {\r\n        updatedUsedBlocks[categoryId] = [];\r\n      }\r\n\r\n      if (!updatedUsedBlocks[categoryId].includes(blockId)) {\r\n        updatedUsedBlocks[categoryId].push(blockId);\r\n      }\r\n\r\n      const updatedStates = {\r\n        ...prevStates,\r\n        [quizId]: {\r\n          ...previousState,\r\n          usedBlocks: updatedUsedBlocks,\r\n        },\r\n      };\r\n\r\n      localStorage.setItem('quizStates', JSON.stringify(updatedStates));\r\n      localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\r\n\r\n      return updatedStates;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <QuizContext.Provider value={{\r\n      showQuizPage,\r\n      setShowQuizPage,\r\n      selectedMode,\r\n      setSelectedMode,\r\n      currentQuizId,\r\n      setCurrentQuizId,\r\n      quizStates,\r\n      setQuizStates,\r\n      updateQuizState,\r\n      markBlockAsUsed,\r\n      data,\r\n      theme,\r\n      setTheme,\r\n    }}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}