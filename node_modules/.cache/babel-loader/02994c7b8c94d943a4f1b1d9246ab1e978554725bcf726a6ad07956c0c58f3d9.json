{"ast":null,"code":"import { handleError } from './errorHandling';\nexport function loadJsonDataFiles() {\n  try {\n    const context = require.context('../data', false, /\\.json$/);\n    return context.keys().map(key => ({\n      ...context(key),\n      filename: key\n    }));\n  } catch (error) {\n    handleError(error, 'Не вдалося завантажити файли вікторини.');\n    return [];\n  }\n}\nexport function loadUniqueUuids() {\n  try {\n    const dataFiles = loadJsonDataFiles();\n    const uniqueUuids = Array.from(new Set(dataFiles.map(file => file.uuid)));\n    return uniqueUuids.map(uuid => {\n      const quizData = dataFiles.find(file => file.uuid === uuid);\n      if (!quizData) {\n        throw new Error('Не знайдено дані вікторини');\n      }\n      return {\n        uuid: quizData.uuid,\n        mode: quizData.mode,\n        name: quizData[\"quiz name\"],\n        categories: quizData.categories\n      };\n    });\n  } catch (error) {\n    handleError(error, 'Помилка при обробці даних вікторини.');\n    return [];\n  }\n}\nexport function loadJsonDataByMode(mode) {\n  try {\n    const dataFiles = loadJsonDataFiles();\n    const modeData = dataFiles.find(file => file.mode === mode);\n    if (!modeData) {\n      throw new Error('Не знайдено вікторину для вказаного режиму');\n    }\n    return modeData;\n  } catch (error) {\n    handleError(error, 'Не вдалося завантажити дані для вибраного режиму гри.');\n    return null;\n  }\n}\nexport function loadJsonFileCount() {\n  try {\n    const context = require.context('../data', false, /\\.json$/);\n    return context.keys().length;\n  } catch (error) {\n    handleError(error, 'Не вдалося підрахувати кількість файлів вікторини.');\n    return 0;\n  }\n}","map":{"version":3,"names":["handleError","loadJsonDataFiles","context","require","keys","map","key","filename","error","loadUniqueUuids","dataFiles","uniqueUuids","Array","from","Set","file","uuid","quizData","find","Error","mode","name","categories","loadJsonDataByMode","modeData","loadJsonFileCount","length"],"sources":["E:/quiz-app-react/src/utils/loadJsonData.js"],"sourcesContent":["import { handleError } from './errorHandling';\r\n\r\nexport function loadJsonDataFiles() {\r\n  try {\r\n    const context = require.context('../data', false, /\\.json$/);\r\n    return context.keys().map(key => ({\r\n      ...context(key),\r\n      filename: key,\r\n    }));\r\n  } catch (error) {\r\n    handleError(error, 'Не вдалося завантажити файли вікторини.');\r\n    return [];\r\n  }\r\n}\r\n\r\nexport function loadUniqueUuids() {\r\n  try {\r\n    const dataFiles = loadJsonDataFiles();\r\n    const uniqueUuids = Array.from(new Set(dataFiles.map(file => file.uuid)));\r\n\r\n    return uniqueUuids.map(uuid => {\r\n      const quizData = dataFiles.find(file => file.uuid === uuid);\r\n      if (!quizData) {\r\n        throw new Error('Не знайдено дані вікторини');\r\n      }\r\n      return {\r\n        uuid: quizData.uuid,\r\n        mode: quizData.mode,\r\n        name: quizData[\"quiz name\"],\r\n        categories: quizData.categories,\r\n      };\r\n    });\r\n  } catch (error) {\r\n    handleError(error, 'Помилка при обробці даних вікторини.');\r\n    return [];\r\n  }\r\n}\r\n\r\nexport function loadJsonDataByMode(mode) {\r\n  try {\r\n    const dataFiles = loadJsonDataFiles();\r\n    const modeData = dataFiles.find(file => file.mode === mode);\r\n    \r\n    if (!modeData) {\r\n      throw new Error('Не знайдено вікторину для вказаного режиму');\r\n    }\r\n    \r\n    return modeData;\r\n  } catch (error) {\r\n    handleError(error, 'Не вдалося завантажити дані для вибраного режиму гри.');\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function loadJsonFileCount() {\r\n  try {\r\n    const context = require.context('../data', false, /\\.json$/);\r\n    return context.keys().length;\r\n  } catch (error) {\r\n    handleError(error, 'Не вдалося підрахувати кількість файлів вікторини.');\r\n    return 0;\r\n  }\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAE7C,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;IAC5D,OAAOA,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,KAAK;MAChC,GAAGJ,OAAO,CAACI,GAAG,CAAC;MACfC,QAAQ,EAAED;IACZ,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdR,WAAW,CAACQ,KAAK,EAAE,yCAAyC,CAAC;IAC7D,OAAO,EAAE;EACX;AACF;AAEA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMC,SAAS,GAAGT,iBAAiB,CAAC,CAAC;IACrC,MAAMU,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,SAAS,CAACL,GAAG,CAACU,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAEzE,OAAOL,WAAW,CAACN,GAAG,CAACW,IAAI,IAAI;MAC7B,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKA,IAAI,CAAC;MAC3D,IAAI,CAACC,QAAQ,EAAE;QACb,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,OAAO;QACLH,IAAI,EAAEC,QAAQ,CAACD,IAAI;QACnBI,IAAI,EAAEH,QAAQ,CAACG,IAAI;QACnBC,IAAI,EAAEJ,QAAQ,CAAC,WAAW,CAAC;QAC3BK,UAAU,EAAEL,QAAQ,CAACK;MACvB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdR,WAAW,CAACQ,KAAK,EAAE,sCAAsC,CAAC;IAC1D,OAAO,EAAE;EACX;AACF;AAEA,OAAO,SAASe,kBAAkBA,CAACH,IAAI,EAAE;EACvC,IAAI;IACF,MAAMV,SAAS,GAAGT,iBAAiB,CAAC,CAAC;IACrC,MAAMuB,QAAQ,GAAGd,SAAS,CAACQ,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACK,IAAI,KAAKA,IAAI,CAAC;IAE3D,IAAI,CAACI,QAAQ,EAAE;MACb,MAAM,IAAIL,KAAK,CAAC,4CAA4C,CAAC;IAC/D;IAEA,OAAOK,QAAQ;EACjB,CAAC,CAAC,OAAOhB,KAAK,EAAE;IACdR,WAAW,CAACQ,KAAK,EAAE,uDAAuD,CAAC;IAC3E,OAAO,IAAI;EACb;AACF;AAEA,OAAO,SAASiB,iBAAiBA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMvB,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;IAC5D,OAAOA,OAAO,CAACE,IAAI,CAAC,CAAC,CAACsB,MAAM;EAC9B,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACdR,WAAW,CAACQ,KAAK,EAAE,oDAAoD,CAAC;IACxE,OAAO,CAAC;EACV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}