{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Modal\\\\Modal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  block,\n  onClose,\n  selectedMode,\n  markBlockAsUsed,\n  // добавляем markBlockAsUsed\n  timerStarted,\n  timerEnded,\n  showAnswer,\n  setTimerStarted,\n  handleTimerEnd,\n  handleShowAnswer,\n  handleForceStop\n}) {\n  console.log('Modal opened with block:', block);\n  const ModeComponent = modeComponents[selectedMode];\n  if (!block) {\n    return null;\n  }\n  const handleSelectCategory = () => {\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id); // помечаем блок как использованный\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), ModeComponent ? /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block,\n        showAnswer: showAnswer,\n        setTimerStarted: setTimerStarted,\n        timerStarted: timerStarted,\n        timerEnded: timerEnded,\n        handleTimerEnd: handleTimerEnd,\n        handleShowAnswer: handleShowAnswer,\n        handleForceStop: handleForceStop,\n        handleSelectCategory: handleSelectCategory // добавляем обработчик\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Unknown mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["Modal","block","onClose","selectedMode","markBlockAsUsed","timerStarted","timerEnded","showAnswer","setTimerStarted","handleTimerEnd","handleShowAnswer","handleForceStop","console","log","ModeComponent","modeComponents","handleSelectCategory","currentQuizId","categoryId","id","_jsxDEV","className","styles","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Modal/Modal.jsx"],"sourcesContent":["function Modal({\r\n  block,\r\n  onClose,\r\n  selectedMode,\r\n  markBlockAsUsed, // добавляем markBlockAsUsed\r\n  timerStarted,\r\n  timerEnded,\r\n  showAnswer,\r\n  setTimerStarted,\r\n  handleTimerEnd,\r\n  handleShowAnswer,\r\n  handleForceStop,\r\n}) {\r\n  console.log('Modal opened with block:', block);\r\n  const ModeComponent = modeComponents[selectedMode];\r\n\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  const handleSelectCategory = () => {\r\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id); // помечаем блок как использованный\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        {ModeComponent ? (\r\n          <ModeComponent\r\n            block={block}\r\n            showAnswer={showAnswer}\r\n            setTimerStarted={setTimerStarted}\r\n            timerStarted={timerStarted}\r\n            timerEnded={timerEnded}\r\n            handleTimerEnd={handleTimerEnd}\r\n            handleShowAnswer={handleShowAnswer}\r\n            handleForceStop={handleForceStop}\r\n            handleSelectCategory={handleSelectCategory} // добавляем обработчик\r\n          />\r\n        ) : (\r\n          <div>Unknown mode</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;"],"mappings":";;AAAA,SAASA,KAAKA,CAAC;EACbC,KAAK;EACLC,OAAO;EACPC,YAAY;EACZC,eAAe;EAAE;EACjBC,YAAY;EACZC,UAAU;EACVC,UAAU;EACVC,eAAe;EACfC,cAAc;EACdC,gBAAgB;EAChBC;AACF,CAAC,EAAE;EACDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEZ,KAAK,CAAC;EAC9C,MAAMa,aAAa,GAAGC,cAAc,CAACZ,YAAY,CAAC;EAElD,IAAI,CAACF,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,MAAMe,oBAAoB,GAAGA,CAAA,KAAM;IACjCZ,eAAe,CAACa,aAAa,EAAEhB,KAAK,CAACiB,UAAU,EAAEjB,KAAK,CAACkB,EAAE,CAAC,CAAC,CAAC;IAC5DjB,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEkB,OAAA;IAAKC,SAAS,EAAE,GAAGC,MAAM,CAACC,KAAK,IAAID,MAAM,CAACE,IAAI,EAAG;IAACC,OAAO,EAAEvB,OAAQ;IAAAwB,QAAA,eACjEN,OAAA;MAAKC,SAAS,EAAEC,MAAM,CAACK,YAAa;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,gBACvEN,OAAA;QAAMC,SAAS,EAAEC,MAAM,CAACQ,WAAY;QAACL,OAAO,EAAEvB,OAAQ;QAAAwB,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpEpB,aAAa,gBACZM,OAAA,CAACN,aAAa;QACZb,KAAK,EAAEA,KAAM;QACbM,UAAU,EAAEA,UAAW;QACvBC,eAAe,EAAEA,eAAgB;QACjCH,YAAY,EAAEA,YAAa;QAC3BC,UAAU,EAAEA,UAAW;QACvBG,cAAc,EAAEA,cAAe;QAC/BC,gBAAgB,EAAEA,gBAAiB;QACnCC,eAAe,EAAEA,eAAgB;QACjCK,oBAAoB,EAAEA,oBAAqB,CAAC;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,gBAEFd,OAAA;QAAAM,QAAA,EAAK;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GA/CQnC,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}