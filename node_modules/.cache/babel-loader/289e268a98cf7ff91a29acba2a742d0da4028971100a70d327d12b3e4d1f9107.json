{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\context\\\\QuizContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Создаем контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContext = /*#__PURE__*/createContext();\n\n// Хук для доступа к контексту\nexport function useQuizContext() {\n  _s();\n  return useContext(QuizContext);\n}\n\n// Провайдер контекста\n_s(useQuizContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function QuizProvider({\n  children\n}) {\n  _s2();\n  const [showQuizPage, setShowQuizPage] = useState(() => {\n    const savedState = localStorage.getItem('showQuizPage');\n    return savedState === 'true';\n  });\n  const [selectedMode, setSelectedMode] = useState(null);\n  const [currentQuizId, setCurrentQuizId] = useState(null);\n  const [quizStates, setQuizStates] = useState({});\n  const updateQuizState = (uuid, newState) => {\n    setQuizStates(prevStates => ({\n      ...prevStates,\n      [uuid]: {\n        ...prevStates[uuid],\n        ...newState\n      }\n    }));\n  };\n  const markBlockAsUsed = (quizId, categoryName, blockId) => {\n    if (!categoryName) {\n      console.error('categoryName не определено, невозможно отметить блок как используемый');\n      return;\n    }\n    setQuizStates(prevStates => {\n      const previousState = prevStates[quizId] || {};\n      const updatedUsedBlocks = {\n        ...previousState.usedBlocks\n      };\n      if (!updatedUsedBlocks[categoryName]) {\n        updatedUsedBlocks[categoryName] = [];\n      }\n      if (!updatedUsedBlocks[categoryName].includes(blockId)) {\n        updatedUsedBlocks[categoryName].push(blockId);\n      }\n      localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\n      return {\n        ...prevStates,\n        [quizId]: {\n          ...previousState,\n          usedBlocks: updatedUsedBlocks\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: {\n      showQuizPage,\n      setShowQuizPage,\n      selectedMode,\n      setSelectedMode,\n      currentQuizId,\n      setCurrentQuizId,\n      quizStates,\n      updateQuizState,\n      markBlockAsUsed // Убедитесь, что функция передается здесь\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s2(QuizProvider, \"g0eZwtgt1H+M9hwDOAoW0jbP1Ow=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","QuizContext","useQuizContext","_s","QuizProvider","children","_s2","showQuizPage","setShowQuizPage","savedState","localStorage","getItem","selectedMode","setSelectedMode","currentQuizId","setCurrentQuizId","quizStates","setQuizStates","updateQuizState","uuid","newState","prevStates","markBlockAsUsed","quizId","categoryName","blockId","console","error","previousState","updatedUsedBlocks","usedBlocks","includes","push","setItem","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/context/QuizContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Создаем контекст\r\nconst QuizContext = createContext();\r\n\r\n// Хук для доступа к контексту\r\nexport function useQuizContext() {\r\n  return useContext(QuizContext);\r\n}\r\n\r\n// Провайдер контекста\r\nexport function QuizProvider({ children }) {\r\n  const [showQuizPage, setShowQuizPage] = useState(() => {\r\n    const savedState = localStorage.getItem('showQuizPage');\r\n    return savedState === 'true';\r\n  });\r\n  const [selectedMode, setSelectedMode] = useState(null);\r\n  const [currentQuizId, setCurrentQuizId] = useState(null);\r\n  const [quizStates, setQuizStates] = useState({});\r\n\r\n  const updateQuizState = (uuid, newState) => {\r\n    setQuizStates(prevStates => ({\r\n      ...prevStates,\r\n      [uuid]: {\r\n        ...prevStates[uuid],\r\n        ...newState,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const markBlockAsUsed = (quizId, categoryName, blockId) => {\r\n    if (!categoryName) {\r\n      console.error('categoryName не определено, невозможно отметить блок как используемый');\r\n      return;\r\n    }\r\n\r\n    setQuizStates(prevStates => {\r\n      const previousState = prevStates[quizId] || {};\r\n      const updatedUsedBlocks = { ...previousState.usedBlocks };\r\n\r\n      if (!updatedUsedBlocks[categoryName]) {\r\n        updatedUsedBlocks[categoryName] = [];\r\n      }\r\n\r\n      if (!updatedUsedBlocks[categoryName].includes(blockId)) {\r\n        updatedUsedBlocks[categoryName].push(blockId);\r\n      }\r\n\r\n      localStorage.setItem(`usedBlocks-${quizId}`, JSON.stringify(updatedUsedBlocks));\r\n\r\n      return {\r\n        ...prevStates,\r\n        [quizId]: {\r\n          ...previousState,\r\n          usedBlocks: updatedUsedBlocks,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <QuizContext.Provider value={{\r\n      showQuizPage,\r\n      setShowQuizPage,\r\n      selectedMode,\r\n      setSelectedMode,\r\n      currentQuizId,\r\n      setCurrentQuizId,\r\n      quizStates,\r\n      updateQuizState,\r\n      markBlockAsUsed, // Убедитесь, что функция передается здесь\r\n    }}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,SAASM,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;;AAEA;AAAAE,EAAA,CAJgBD,cAAc;AAK9B,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrD,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACvD,OAAOF,UAAU,KAAK,MAAM;EAC9B,CAAC,CAAC;EACF,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMoB,eAAe,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC1CH,aAAa,CAACI,UAAU,KAAK;MAC3B,GAAGA,UAAU;MACb,CAACF,IAAI,GAAG;QACN,GAAGE,UAAU,CAACF,IAAI,CAAC;QACnB,GAAGC;MACL;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,eAAe,GAAGA,CAACC,MAAM,EAAEC,YAAY,EAAEC,OAAO,KAAK;IACzD,IAAI,CAACD,YAAY,EAAE;MACjBE,OAAO,CAACC,KAAK,CAAC,uEAAuE,CAAC;MACtF;IACF;IAEAV,aAAa,CAACI,UAAU,IAAI;MAC1B,MAAMO,aAAa,GAAGP,UAAU,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC;MAC9C,MAAMM,iBAAiB,GAAG;QAAE,GAAGD,aAAa,CAACE;MAAW,CAAC;MAEzD,IAAI,CAACD,iBAAiB,CAACL,YAAY,CAAC,EAAE;QACpCK,iBAAiB,CAACL,YAAY,CAAC,GAAG,EAAE;MACtC;MAEA,IAAI,CAACK,iBAAiB,CAACL,YAAY,CAAC,CAACO,QAAQ,CAACN,OAAO,CAAC,EAAE;QACtDI,iBAAiB,CAACL,YAAY,CAAC,CAACQ,IAAI,CAACP,OAAO,CAAC;MAC/C;MAEAf,YAAY,CAACuB,OAAO,CAAC,cAAcV,MAAM,EAAE,EAAEW,IAAI,CAACC,SAAS,CAACN,iBAAiB,CAAC,CAAC;MAE/E,OAAO;QACL,GAAGR,UAAU;QACb,CAACE,MAAM,GAAG;UACR,GAAGK,aAAa;UAChBE,UAAU,EAAED;QACd;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAE;MAC3B9B,YAAY;MACZC,eAAe;MACfI,YAAY;MACZC,eAAe;MACfC,aAAa;MACbC,gBAAgB;MAChBC,UAAU;MACVE,eAAe;MACfI,eAAe,CAAE;IACnB,CAAE;IAAAjB,QAAA,EACCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACnC,GAAA,CAhEeF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}