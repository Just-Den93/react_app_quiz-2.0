{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Modal\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from '../QAMode/QAMode';\nimport SelectionMode from '../SelectionMode/SelectionMode';\nimport styles from './Modal.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modeComponents = {\n  1: QAMode,\n  2: SelectionMode\n};\nfunction Modal({\n  block,\n  onClose,\n  selectedMode,\n  setTimerStarted,\n  // Убедимся, что этот колбэк используется для сброса таймера\n  handleTimerEnd,\n  handleShowAnswer,\n  handleForceStop,\n  timerStarted,\n  // Это состояние будет использоваться для определения начала таймера\n  timerEnded,\n  showAnswer\n}) {\n  _s();\n  const ModeComponent = modeComponents[selectedMode];\n  const {\n    currentQuizId,\n    markBlockAsUsed\n  } = useQuizContext();\n  if (!block || !ModeComponent) {\n    return null;\n  }\n\n  // Сброс данных при каждом новом открытии модального окна\n  React.useEffect(() => {\n    setTimerStarted(false); // Сбрасываем таймер\n  }, [block, setTimerStarted]);\n  const handleSelectCategory = () => {\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block,\n        showAnswer: showAnswer,\n        setTimerStarted: setTimerStarted,\n        timerStarted: timerStarted,\n        timerEnded: timerEnded,\n        handleTimerEnd: handleTimerEnd,\n        handleShowAnswer: handleShowAnswer,\n        handleSelectCategory: handleSelectCategory,\n        handleForceStop: handleForceStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"xfyF8uPLQEZDEtrcwNMxV28tqYI=\", false, function () {\n  return [useQuizContext];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","styles","useQuizContext","jsxDEV","_jsxDEV","modeComponents","Modal","block","onClose","selectedMode","setTimerStarted","handleTimerEnd","handleShowAnswer","handleForceStop","timerStarted","timerEnded","showAnswer","_s","ModeComponent","currentQuizId","markBlockAsUsed","useEffect","handleSelectCategory","categoryId","id","className","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Modal/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from '../QAMode/QAMode';\r\nimport SelectionMode from '../SelectionMode/SelectionMode';\r\nimport styles from './Modal.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\n\r\nconst modeComponents = {\r\n  1: QAMode,\r\n  2: SelectionMode,\r\n};\r\n\r\nfunction Modal({\r\n  block,\r\n  onClose,\r\n  selectedMode,\r\n  setTimerStarted, // Убедимся, что этот колбэк используется для сброса таймера\r\n  handleTimerEnd,\r\n  handleShowAnswer,\r\n  handleForceStop,\r\n  timerStarted, // Это состояние будет использоваться для определения начала таймера\r\n  timerEnded,\r\n  showAnswer,\r\n}) {\r\n  const ModeComponent = modeComponents[selectedMode];\r\n  const { currentQuizId, markBlockAsUsed } = useQuizContext();\r\n\r\n  if (!block || !ModeComponent) {\r\n    return null;\r\n  }\r\n\r\n  // Сброс данных при каждом новом открытии модального окна\r\n  React.useEffect(() => {\r\n    setTimerStarted(false); // Сбрасываем таймер\r\n  }, [block, setTimerStarted]);\r\n\r\n  const handleSelectCategory = () => {\r\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        <ModeComponent\r\n          block={block}\r\n          showAnswer={showAnswer}\r\n          setTimerStarted={setTimerStarted}\r\n          timerStarted={timerStarted}\r\n          timerEnded={timerEnded}\r\n          handleTimerEnd={handleTimerEnd}\r\n          handleShowAnswer={handleShowAnswer}\r\n          handleSelectCategory={handleSelectCategory}\r\n          handleForceStop={handleForceStop}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,cAAc,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAEN,MAAM;EACT,CAAC,EAAEC;AACL,CAAC;AAED,SAASM,KAAKA,CAAC;EACbC,KAAK;EACLC,OAAO;EACPC,YAAY;EACZC,eAAe;EAAE;EACjBC,cAAc;EACdC,gBAAgB;EAChBC,eAAe;EACfC,YAAY;EAAE;EACdC,UAAU;EACVC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,aAAa,GAAGb,cAAc,CAACI,YAAY,CAAC;EAClD,MAAM;IAAEU,aAAa;IAAEC;EAAgB,CAAC,GAAGlB,cAAc,CAAC,CAAC;EAE3D,IAAI,CAACK,KAAK,IAAI,CAACW,aAAa,EAAE;IAC5B,OAAO,IAAI;EACb;;EAEA;EACApB,KAAK,CAACuB,SAAS,CAAC,MAAM;IACpBX,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACH,KAAK,EAAEG,eAAe,CAAC,CAAC;EAE5B,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjCF,eAAe,CAACD,aAAa,EAAEZ,KAAK,CAACgB,UAAU,EAAEhB,KAAK,CAACiB,EAAE,CAAC;IAC1DhB,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEJ,OAAA;IAAKqB,SAAS,EAAE,GAAGxB,MAAM,CAACyB,KAAK,IAAIzB,MAAM,CAAC0B,IAAI,EAAG;IAACC,OAAO,EAAEpB,OAAQ;IAAAqB,QAAA,eACjEzB,OAAA;MAAKqB,SAAS,EAAExB,MAAM,CAAC6B,YAAa;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,gBACvEzB,OAAA;QAAMqB,SAAS,EAAExB,MAAM,CAACgC,WAAY;QAACL,OAAO,EAAEpB,OAAQ;QAAAqB,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrEjC,OAAA,CAACc,aAAa;QACZX,KAAK,EAAEA,KAAM;QACbS,UAAU,EAAEA,UAAW;QACvBN,eAAe,EAAEA,eAAgB;QACjCI,YAAY,EAAEA,YAAa;QAC3BC,UAAU,EAAEA,UAAW;QACvBJ,cAAc,EAAEA,cAAe;QAC/BC,gBAAgB,EAAEA,gBAAiB;QACnCU,oBAAoB,EAAEA,oBAAqB;QAC3CT,eAAe,EAAEA;MAAgB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA/CQX,KAAK;EAAA,QAa+BJ,cAAc;AAAA;AAAAoC,EAAA,GAblDhC,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}