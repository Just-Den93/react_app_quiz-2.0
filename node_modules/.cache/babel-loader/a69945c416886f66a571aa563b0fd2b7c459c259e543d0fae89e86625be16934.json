{"ast":null,"code":"import React,{useMemo,useState,useEffect}from'react';import ContentContainer from'../ContentContainer/ContentContainer';import EndMessage from'../EndMessage/EndMessage';import MenuModal from'../MenuModal/MenuModal';import Modal from'../Modal/Modal';import Settings from'../Settings/Settings';import styles from'./QuizPage.module.css';import{useQuizContext}from'../../context/QuizContext';import PCImage from'../../images/PC_horizontal_1line_black.svg';// Убедитесь, что путь к изображению верен  \nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function QuizPage(){const{quizStates,setShowQuizPage,currentQuizId,selectedMode,data,markBlockAsUsed}=useQuizContext();const currentQuizState=useMemo(()=>quizStates[currentQuizId]||{},[quizStates,currentQuizId]);const[isSettingsVisible,setIsSettingsVisible]=useState(false);const[selectedBlock,setSelectedBlock]=useState(null);const[selectedCategory,setSelectedCategory]=useState(null);const handleBlockSelect=(block,category)=>{console.log('Selected Block:',block);// Логгируем выбранный блок\nconsole.log('Selected Category:',category);// Логгируем выбранную категорию\nsetSelectedBlock(block);setSelectedCategory(category);};const handleCloseModal=()=>{setSelectedBlock(null);setSelectedCategory(null);};const handleSelectCategory=(categoryId,blockId)=>{markBlockAsUsed(currentQuizId,categoryId,blockId);// Отмечаем блок как использованный\nhandleCloseModal();// Закрываем модальное окно после выбора категории\n};useEffect(()=>{console.log('Data in QuizPage:',data);// Логгируем данные при каждом рендере\n},[data]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.quiz_page,children:[data?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{src:PCImage,alt:\"PC horizontal line\",className:styles.image}),\" \",/*#__PURE__*/_jsx(ContentContainer,{data:data,onBlockSelect:handleBlockSelect,usedBlocks:currentQuizState.usedBlocks||{}}),selectedBlock&&/*#__PURE__*/_jsx(Modal,{block:selectedBlock,categoryName:(selectedCategory===null||selectedCategory===void 0?void 0:selectedCategory.name)||'Без категории'// Проверяем categoryName\n,onClose:handleCloseModal,selectedMode:selectedMode,onSelectCategory:handleSelectCategory// Передаем функцию для обработки выбора категории\n})]}):/*#__PURE__*/_jsx(\"div\",{children:\"No data available.\"}),/*#__PURE__*/_jsx(EndMessage,{}),/*#__PURE__*/_jsx(MenuModal,{showSettings:()=>setIsSettingsVisible(true),showMainMenu:()=>setShowQuizPage(false)}),isSettingsVisible&&/*#__PURE__*/_jsx(Settings,{onClose:()=>setIsSettingsVisible(false)})]});}export default QuizPage;","map":{"version":3,"names":["React","useMemo","useState","useEffect","ContentContainer","EndMessage","MenuModal","Modal","Settings","styles","useQuizContext","PCImage","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","QuizPage","quizStates","setShowQuizPage","currentQuizId","selectedMode","data","markBlockAsUsed","currentQuizState","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedCategory","setSelectedCategory","handleBlockSelect","block","category","console","log","handleCloseModal","handleSelectCategory","categoryId","blockId","className","quiz_page","children","src","alt","image","onBlockSelect","usedBlocks","categoryName","name","onClose","onSelectCategory","showSettings","showMainMenu"],"sources":["E:/quiz-app-react/src/components/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\nimport EndMessage from '../EndMessage/EndMessage';\r\nimport MenuModal from '../MenuModal/MenuModal';\r\nimport Modal from '../Modal/Modal';\r\nimport Settings from '../Settings/Settings';\r\nimport styles from './QuizPage.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport PCImage from '../../images/PC_horizontal_1line_black.svg'; // Убедитесь, что путь к изображению верен  \r\n\r\nfunction QuizPage() {\r\n  const { quizStates, setShowQuizPage, currentQuizId, selectedMode, data, markBlockAsUsed } = useQuizContext();\r\n\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  const handleBlockSelect = (block, category) => {\r\n    console.log('Selected Block:', block); // Логгируем выбранный блок\r\n    console.log('Selected Category:', category); // Логгируем выбранную категорию\r\n    setSelectedBlock(block);\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBlock(null);\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n  const handleSelectCategory = (categoryId, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryId, blockId);  // Отмечаем блок как использованный\r\n    handleCloseModal();  // Закрываем модальное окно после выбора категории\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Data in QuizPage:', data); // Логгируем данные при каждом рендере\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      {data ? (\r\n        <>\r\n        <img src={PCImage} alt=\"PC horizontal line\" className={styles.image} /> {/* Добавляем изображение */}\r\n          <ContentContainer \r\n            data={data} \r\n            onBlockSelect={handleBlockSelect} \r\n            usedBlocks={currentQuizState.usedBlocks || {}} \r\n          />\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              categoryName={selectedCategory?.name || 'Без категории'} // Проверяем categoryName\r\n              onClose={handleCloseModal}\r\n              selectedMode={selectedMode}\r\n              onSelectCategory={handleSelectCategory}  // Передаем функцию для обработки выбора категории\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal \r\n        showSettings={() => setIsSettingsVisible(true)} \r\n        showMainMenu={() => setShowQuizPage(false)} \r\n      />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}