{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizCard\\\\QuizCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuizContext } from '../../context/QuizContext';\nimport styles from './QuizCard.module.css';\nimport quizImage from '../../images/quizpng.png';\nimport { ReactComponent as PCImage } from '../../images/PC_horizontal_1line_color.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizCard({\n  startQuiz,\n  mode,\n  name,\n  category\n}) {\n  _s();\n  const {\n    completedGames\n  } = useQuizContext();\n  const totalQuestions = category.blocks.length; // Получаем количество вопросов в категории\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: quizImage,\n        alt: \"Quiz Image\",\n        className: styles.imageContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questionCount,\n        children: [totalQuestions, \" \\u0437\\u0430\\u043F\\u0438\\u0442\\u0430\\u043D\\u044C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.details,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bottomRow,\n        children: [/*#__PURE__*/_jsxDEV(PCImage, {\n          className: styles.affiliationIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.games,\n          children: [\"\\u0406\\u0433\\u0440\\u0438: \", completedGames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.startButton,\n          onClick: startQuiz,\n          children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0441\\u0442\\u0438 \\u043D\\u0430\\u0436\\u0438\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizCard, \"2B1zF8R0GHhMxJh8aq+n8H8h1WU=\", false, function () {\n  return [useQuizContext];\n});\n_c = QuizCard;\nQuizCard.propTypes = {\n  startQuiz: PropTypes.func.isRequired,\n  mode: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  // Добавляем новый проп для имени викторины\n  category: PropTypes.object.isRequired // Добавляем новый проп для категории\n};\nexport default QuizCard;\nvar _c;\n$RefreshReg$(_c, \"QuizCard\");","map":{"version":3,"names":["React","PropTypes","useQuizContext","styles","quizImage","ReactComponent","PCImage","jsxDEV","_jsxDEV","QuizCard","startQuiz","mode","name","category","_s","completedGames","totalQuestions","blocks","length","className","card","children","imageWrapper","src","alt","imageContent","fileName","_jsxFileName","lineNumber","columnNumber","questionCount","details","bottomRow","affiliationIcon","games","startButton","onClick","_c","propTypes","func","isRequired","number","string","object","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizCard/QuizCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\nimport styles from './QuizCard.module.css';\r\nimport quizImage from '../../images/quizpng.png';\r\nimport { ReactComponent as PCImage } from '../../images/PC_horizontal_1line_color.svg';\r\n\r\nfunction QuizCard({ startQuiz, mode, name, category }) {\r\n  const { completedGames } = useQuizContext();\r\n  const totalQuestions = category.blocks.length; // Получаем количество вопросов в категории\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <div className={styles.imageWrapper}>\r\n        <img src={quizImage} alt=\"Quiz Image\" className={styles.imageContent} />\r\n        <div className={styles.questionCount}>{totalQuestions} запитань</div> {/* Плашка с количеством вопросов */}\r\n      </div>\r\n      <div className={styles.details}>\r\n        <h2>{name}</h2> {/* Отображаем название викторины */}\r\n        <div className={styles.bottomRow}>\r\n          <PCImage className={styles.affiliationIcon} />\r\n          <p className={styles.games}>Ігри: {completedGames}</p>\r\n          <button className={styles.startButton} onClick={startQuiz}>\r\n            Провести наживо\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuizCard.propTypes = {\r\n  startQuiz: PropTypes.func.isRequired,\r\n  mode: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired, // Добавляем новый проп для имени викторины\r\n  category: PropTypes.object.isRequired, // Добавляем новый проп для категории\r\n};\r\n\r\nexport default QuizCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}