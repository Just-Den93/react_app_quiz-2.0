{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from './QAMode';\nimport SelectionMode from './SelectionMode';\nimport Timer from './Timer';\nimport styles from '../styles/Modal.module.css';\nimport { useModalLogic } from '../utils/modalUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal({\n  block,\n  onClose,\n  markBlockAsUsed,\n  mode\n}) {\n  _s();\n  const {\n    timerStarted,\n    timerEnded,\n    showAnswer,\n    setTimerStarted,\n    handleTimerEnd,\n    handleShowAnswer,\n    handleSelectCategory,\n    handleForceStop\n  } = useModalLogic(block, markBlockAsUsed, onClose);\n  if (!block) {\n    return null;\n  }\n  const renderContent = () => {\n    if (mode === 1) {\n      return /*#__PURE__*/_jsxDEV(QAMode, {\n        question: block.question,\n        answer: block.answer,\n        subAnswer: block.subAnswer,\n        showAnswer: showAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    } else if (mode === 2) {\n      return /*#__PURE__*/_jsxDEV(SelectionMode, {\n        question: block.question,\n        options: block.options,\n        answer: block.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.selectedInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.infoCategoryName,\n          children: block.categoryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectedNumber,\n          children: block.id + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlBlock,\n        children: [!timerStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.startTimerButton,\n          onClick: () => setTimerStarted(true),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/refresh-ccw-clock-svgrepo-com.svg\",\n            alt: \"Start Timer\",\n            className: styles.startButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : !timerEnded ? /*#__PURE__*/_jsxDEV(Timer, {\n          duration: 30,\n          onEnd: handleTimerEnd,\n          onForceStop: handleForceStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : !showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.showAnswerButton,\n          onClick: handleShowAnswer,\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438 \\u0432\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0434\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.selectCategoryButton,\n          onClick: handleSelectCategory,\n          children: \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u0438 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"6yEjQtkuBuS02q7Rvp9ubgO7p3c=\", false, function () {\n  return [useModalLogic];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","Timer","styles","useModalLogic","jsxDEV","_jsxDEV","Modal","block","onClose","markBlockAsUsed","mode","_s","timerStarted","timerEnded","showAnswer","setTimerStarted","handleTimerEnd","handleShowAnswer","handleSelectCategory","handleForceStop","renderContent","question","answer","subAnswer","fileName","_jsxFileName","lineNumber","columnNumber","options","className","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","selectedInfo","infoCategoryName","categoryName","selectedNumber","id","content","controlBlock","startTimerButton","src","alt","startButtonIcon","duration","onEnd","onForceStop","showAnswerButton","selectCategoryButton","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from './QAMode';\r\nimport SelectionMode from './SelectionMode';\r\nimport Timer from './Timer';\r\nimport styles from '../styles/Modal.module.css';\r\nimport { useModalLogic } from '../utils/modalUtils';\r\n\r\nfunction Modal({ block, onClose, markBlockAsUsed, mode }) {\r\n  const {\r\n    timerStarted,\r\n    timerEnded,\r\n    showAnswer,\r\n    setTimerStarted,\r\n    handleTimerEnd,\r\n    handleShowAnswer,\r\n    handleSelectCategory,\r\n    handleForceStop,\r\n  } = useModalLogic(block, markBlockAsUsed, onClose);\r\n\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  const renderContent = () => {\r\n    if (mode === 1) {\r\n      return <QAMode question={block.question} answer={block.answer} subAnswer={block.subAnswer} showAnswer={showAnswer} />;\r\n    } else if (mode === 2) {\r\n      return <SelectionMode question={block.question} options={block.options} answer={block.answer} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        <div className={styles.selectedInfo}>\r\n          <span className={styles.infoCategoryName}>{block.categoryName}</span>\r\n          <div className={styles.selectedNumber}>{block.id + 1}</div>\r\n        </div>\r\n        <div className={styles.content}>\r\n          {renderContent()}\r\n        </div>\r\n        <div className={styles.controlBlock}>\r\n          {!timerStarted ? (\r\n            <button className={styles.startTimerButton} onClick={() => setTimerStarted(true)}>\r\n              <img src=\"./images/refresh-ccw-clock-svgrepo-com.svg\" alt=\"Start Timer\" className={styles.startButtonIcon} />\r\n            </button>\r\n          ) : !timerEnded ? (\r\n            <Timer duration={30} onEnd={handleTimerEnd} onForceStop={handleForceStop} />\r\n          ) : (\r\n            !showAnswer && (\r\n              <button className={styles.showAnswerButton} onClick={handleShowAnswer}>\r\n                Показати відповідь\r\n              </button>\r\n            )\r\n          )}\r\n          {showAnswer && (\r\n            <button className={styles.selectCategoryButton} onClick={handleSelectCategory}>\r\n              Обрати категорію\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}