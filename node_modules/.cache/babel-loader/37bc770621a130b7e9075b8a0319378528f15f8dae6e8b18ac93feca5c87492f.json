{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\ConfettiAnimation\\\\ConfettiAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport confetti from \"canvas-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfettiAnimation = ({\n  isRunning\n}) => {\n  _s();\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    const defaults = {\n      spread: 360,\n      ticks: 50,\n      gravity: 0.5,\n      decay: 0.94,\n      startVelocity: 30,\n      shapes: [\"star\", \"circle\"],\n      colors: [\"#FFE400\", \"#FFBD00\", \"#E89400\", \"#FFCA6C\", \"#FDFFB8\"]\n    };\n    const shoot = () => {\n      const randomX = Math.random(); // Случайное значение для X (от 0 до 1)\n      const randomY = Math.random(); // Случайное значение для Y (от 0 до 1)\n\n      confetti({\n        ...defaults,\n        particleCount: 40,\n        scalar: 1.2,\n        origin: {\n          x: randomX,\n          y: randomY\n        } // Появление конфетти в случайной позиции\n      });\n      confetti({\n        ...defaults,\n        particleCount: 10,\n        scalar: 0.75,\n        origin: {\n          x: randomX,\n          y: randomY\n        } // Появление конфетти в случайной позиции\n      });\n    };\n    if (isRunning) {\n      // Запускаем анимацию, если isRunning = true\n      intervalRef.current = setInterval(shoot, 200);\n    } else {\n      // Останавливаем анимацию, если isRunning = false\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n\n    // Очищаем интервал при размонтировании компонента\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning]); // Слушаем изменения состояния isRunning\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s(ConfettiAnimation, \"AcQ1i4tD0owQ+S+iAErNNAWnC24=\");\n_c = ConfettiAnimation;\nexport default ConfettiAnimation;\nvar _c;\n$RefreshReg$(_c, \"ConfettiAnimation\");","map":{"version":3,"names":["React","useEffect","useRef","confetti","jsxDEV","_jsxDEV","ConfettiAnimation","isRunning","_s","intervalRef","defaults","spread","ticks","gravity","decay","startVelocity","shapes","colors","shoot","randomX","Math","random","randomY","particleCount","scalar","origin","x","y","current","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/ConfettiAnimation/ConfettiAnimation.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport confetti from \"canvas-confetti\";\r\n\r\nconst ConfettiAnimation = ({ isRunning }) => {\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const defaults = {\r\n      spread: 360,\r\n      ticks: 50,\r\n      gravity: 0.5,\r\n      decay: 0.94,\r\n      startVelocity: 30,\r\n      shapes: [\"star\", \"circle\"],\r\n      colors: [\"#FFE400\", \"#FFBD00\", \"#E89400\", \"#FFCA6C\", \"#FDFFB8\"],\r\n    };\r\n\r\n    const shoot = () => {\r\n      const randomX = Math.random(); // Случайное значение для X (от 0 до 1)\r\n      const randomY = Math.random(); // Случайное значение для Y (от 0 до 1)\r\n\r\n      confetti({\r\n        ...defaults,\r\n        particleCount: 40,\r\n        scalar: 1.2,\r\n        origin: { x: randomX, y: randomY }, // Появление конфетти в случайной позиции\r\n      });\r\n\r\n      confetti({\r\n        ...defaults,\r\n        particleCount: 10,\r\n        scalar: 0.75,\r\n        origin: { x: randomX, y: randomY }, // Появление конфетти в случайной позиции\r\n      });\r\n    };\r\n\r\n    if (isRunning) {\r\n      // Запускаем анимацию, если isRunning = true\r\n      intervalRef.current = setInterval(shoot, 200);\r\n    } else {\r\n      // Останавливаем анимацию, если isRunning = false\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    }\r\n\r\n    // Очищаем интервал при размонтировании компонента\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, [isRunning]); // Слушаем изменения состояния isRunning\r\n\r\n  return <div />;\r\n};\r\n\r\nexport default ConfettiAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,WAAW,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG;MACfC,MAAM,EAAE,GAAG;MACXC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,GAAG;MACZC,KAAK,EAAE,IAAI;MACXC,aAAa,EAAE,EAAE;MACjBC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;MAC1BC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAChE,CAAC;IAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClB,MAAMC,OAAO,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC/B,MAAMC,OAAO,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;MAE/BlB,QAAQ,CAAC;QACP,GAAGO,QAAQ;QACXa,aAAa,EAAE,EAAE;QACjBC,MAAM,EAAE,GAAG;QACXC,MAAM,EAAE;UAAEC,CAAC,EAAEP,OAAO;UAAEQ,CAAC,EAAEL;QAAQ,CAAC,CAAE;MACtC,CAAC,CAAC;MAEFnB,QAAQ,CAAC;QACP,GAAGO,QAAQ;QACXa,aAAa,EAAE,EAAE;QACjBC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE;UAAEC,CAAC,EAAEP,OAAO;UAAEQ,CAAC,EAAEL;QAAQ,CAAC,CAAE;MACtC,CAAC,CAAC;IACJ,CAAC;IAED,IAAIf,SAAS,EAAE;MACb;MACAE,WAAW,CAACmB,OAAO,GAAGC,WAAW,CAACX,KAAK,EAAE,GAAG,CAAC;IAC/C,CAAC,MAAM;MACL;MACA,IAAIT,WAAW,CAACmB,OAAO,EAAE;QACvBE,aAAa,CAACrB,WAAW,CAACmB,OAAO,CAAC;QAClCnB,WAAW,CAACmB,OAAO,GAAG,IAAI;MAC5B;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAInB,WAAW,CAACmB,OAAO,EAAE;QACvBE,aAAa,CAACrB,WAAW,CAACmB,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBAAOF,OAAA;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChB,CAAC;AAAC1B,EAAA,CArDIF,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAuDvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}