{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage\\\\QuizPage.jsx\";\nimport React, { useMemo, useState } from 'react';\n// import Header from '../Header/Header';\nimport ContentContainer from '../ContentContainer/ContentContainer';\nimport EndMessage from '../EndMessage/EndMessage';\nimport MenuModal from '../MenuModal/MenuModal';\nimport Modal from '../Modal/Modal';\nimport Settings from '../Settings/Settings';\nimport styles from './QuizPage.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nfunction QuizPage() {\n  const {\n    quizStates,\n    setShowQuizPage,\n    currentQuizId,\n    selectedMode,\n    data,\n    markBlockAsUsed\n  } = useQuizContext();\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleBlockSelect = (block, category) => {\n    setSelectedBlock(block);\n    setSelectedCategory(category);\n  };\n  const handleCloseModal = () => {\n    setSelectedBlock(null);\n    setSelectedCategory(null);\n  };\n  const handleSelectCategory = (categoryId, blockId) => {\n    markBlockAsUsed(currentQuizId, categoryId, blockId); // Отмечаем блок как использованный\n    setSelectedBlock(null); // Закрываем модальное окно\n    setSelectedCategory(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.quiz_page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContentContainer, {\n    data: data,\n    onBlockSelect: handleBlockSelect,\n    usedBlocks: currentQuizState.usedBlocks || {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), selectedBlock && /*#__PURE__*/React.createElement(Modal, {\n    block: selectedBlock,\n    categoryName: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name,\n    onClose: handleCloseModal,\n    selectedMode: selectedMode,\n    onSelectCategory: handleSelectCategory // Передаем функцию для обработки выбора категории\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"No data available.\"), /*#__PURE__*/React.createElement(EndMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MenuModal, {\n    showSettings: () => setIsSettingsVisible(true),\n    showMainMenu: () => setShowQuizPage(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), isSettingsVisible && /*#__PURE__*/React.createElement(Settings, {\n    onClose: () => setIsSettingsVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }));\n}\nexport default QuizPage;","map":{"version":3,"names":["React","useMemo","useState","ContentContainer","EndMessage","MenuModal","Modal","Settings","styles","useQuizContext","QuizPage","quizStates","setShowQuizPage","currentQuizId","selectedMode","data","markBlockAsUsed","currentQuizState","isSettingsVisible","setIsSettingsVisible","selectedBlock","setSelectedBlock","selectedCategory","setSelectedCategory","handleBlockSelect","block","category","handleCloseModal","handleSelectCategory","categoryId","blockId","createElement","className","quiz_page","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onBlockSelect","usedBlocks","categoryName","name","onClose","onSelectCategory","showSettings","showMainMenu"],"sources":["E:/quiz-app-react/src/components/QuizPage/QuizPage.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\n// import Header from '../Header/Header';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\nimport EndMessage from '../EndMessage/EndMessage';\r\nimport MenuModal from '../MenuModal/MenuModal';\r\nimport Modal from '../Modal/Modal';\r\nimport Settings from '../Settings/Settings';\r\nimport styles from './QuizPage.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\n\r\n\r\n\r\n\r\nfunction QuizPage() {\r\n  const { quizStates, setShowQuizPage, currentQuizId, selectedMode, data, markBlockAsUsed } = useQuizContext();\r\n\r\n\r\n\r\n\r\n  const currentQuizState = useMemo(() => quizStates[currentQuizId] || {}, [quizStates, currentQuizId]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n\r\n\r\n\r\n  const handleBlockSelect = (block, category) => {\r\n    setSelectedBlock(block);\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedBlock(null);\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSelectCategory = (categoryId, blockId) => {\r\n    markBlockAsUsed(currentQuizId, categoryId, blockId);  // Отмечаем блок как использованный\r\n    setSelectedBlock(null);  // Закрываем модальное окно\r\n    setSelectedCategory(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      {/* <Header /> */}\r\n      {data ? (\r\n        <>\r\n          <ContentContainer data={data} onBlockSelect={handleBlockSelect} usedBlocks={currentQuizState.usedBlocks || {}} />\r\n          {selectedBlock && (\r\n            <Modal\r\n              block={selectedBlock}\r\n              categoryName={selectedCategory?.name}\r\n              onClose={handleCloseModal}\r\n              selectedMode={selectedMode}\r\n              onSelectCategory={handleSelectCategory}  // Передаем функцию для обработки выбора категории\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>No data available.</div>\r\n      )}\r\n      <EndMessage />\r\n      <MenuModal showSettings={() => setIsSettingsVisible(true)} showMainMenu={() => setShowQuizPage(false)} />\r\n      {isSettingsVisible && <Settings onClose={() => setIsSettingsVisible(false)} />}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}