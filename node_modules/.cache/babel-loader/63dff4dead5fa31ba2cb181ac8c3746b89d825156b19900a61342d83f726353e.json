{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\ContentContainer.jsx\",\n  _s = $RefreshSig$();\n// src/components/ContentContainer.jsx\nimport React, { useState, useEffect } from 'react';\nimport CategoryRow from './CategoryRow';\nimport Modal from './Modal';\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\nimport styles from '../styles/ContentContainer.module.css';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentContainer({\n  usedBlocks,\n  markBlockAsUsed,\n  mode\n}) {\n  _s();\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const selectedData = loadJsonDataByMode(mode);\n    if (selectedData) {\n      setData(selectedData.categories);\n    }\n  }, [mode]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: styles.contentContainer,\n    children: [data.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      category: category,\n      usedBlocks: usedBlocks,\n      onItemClick: block => handleItemClick(block, category.id, setSelectedBlock)\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), selectedBlock && /*#__PURE__*/_jsxDEV(Modal, {\n      block: selectedBlock,\n      onClose: () => closeModal(setSelectedBlock),\n      markBlockAsUsed: markBlockAsUsed,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentContainer, \"9sDaWZkvfvwVqtpw2HMIMFv9Z3c=\");\n_c = ContentContainer;\nexport default ContentContainer;\nvar _c;\n$RefreshReg$(_c, \"ContentContainer\");","map":{"version":3,"names":["React","useState","useEffect","CategoryRow","Modal","handleItemClick","closeModal","styles","loadJsonDataByMode","jsxDEV","_jsxDEV","ContentContainer","usedBlocks","markBlockAsUsed","mode","_s","selectedBlock","setSelectedBlock","data","setData","selectedData","categories","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","contentContainer","map","category","onItemClick","block","onClose","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/ContentContainer.jsx"],"sourcesContent":["// src/components/ContentContainer.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport CategoryRow from './CategoryRow';\r\nimport Modal from './Modal';\r\nimport { handleItemClick, closeModal } from '../utils/contentContainerUtils';\r\nimport styles from '../styles/ContentContainer.module.css';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nfunction ContentContainer({ usedBlocks, markBlockAsUsed, mode }) {\r\n  const [selectedBlock, setSelectedBlock] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const selectedData = loadJsonDataByMode(mode);\r\n    if (selectedData) {\r\n      setData(selectedData.categories);\r\n    }\r\n  }, [mode]);\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"content-container\" className={styles.contentContainer}>\r\n      {data.map((category) => (\r\n        <CategoryRow\r\n          key={category.id}\r\n          category={category}\r\n          usedBlocks={usedBlocks}\r\n          onItemClick={(block) => handleItemClick(block, category.id, setSelectedBlock)}\r\n        />\r\n      ))}\r\n      {selectedBlock && (\r\n        <Modal\r\n          block={selectedBlock}\r\n          onClose={() => closeModal(setSelectedBlock)}\r\n          markBlockAsUsed={markBlockAsUsed}\r\n          mode={mode}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentContainer;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,EAAEC,UAAU,QAAQ,gCAAgC;AAC5E,OAAOC,MAAM,MAAM,uCAAuC;AAC1D,SAASC,kBAAkB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,gBAAgBA,CAAC;EAAEC,UAAU;EAAEC,eAAe;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGZ,kBAAkB,CAACM,IAAI,CAAC;IAC7C,IAAIM,YAAY,EAAE;MAChBD,OAAO,CAACC,YAAY,CAACC,UAAU,CAAC;IAClC;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,IAAI,CAACI,IAAI,EAAE;IACT,oBAAOR,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEhB,OAAA;IAAKiB,EAAE,EAAC,mBAAmB;IAACC,SAAS,EAAErB,MAAM,CAACsB,gBAAiB;IAAAP,QAAA,GAC5DJ,IAAI,CAACY,GAAG,CAAEC,QAAQ,iBACjBrB,OAAA,CAACP,WAAW;MAEV4B,QAAQ,EAAEA,QAAS;MACnBnB,UAAU,EAAEA,UAAW;MACvBoB,WAAW,EAAGC,KAAK,IAAK5B,eAAe,CAAC4B,KAAK,EAAEF,QAAQ,CAACJ,EAAE,EAAEV,gBAAgB;IAAE,GAHzEc,QAAQ,CAACJ,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACF,CAAC,EACDV,aAAa,iBACZN,OAAA,CAACN,KAAK;MACJ6B,KAAK,EAAEjB,aAAc;MACrBkB,OAAO,EAAEA,CAAA,KAAM5B,UAAU,CAACW,gBAAgB,CAAE;MAC5CJ,eAAe,EAAEA,eAAgB;MACjCC,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CAnCQJ,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAqCzB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}