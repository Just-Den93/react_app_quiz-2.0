{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\nimport EndMessage from './EndMessage';\nimport MenuModal from './MenuModal';\nimport Settings from './Settings';\nimport styles from '../styles/QuizPage.module.css';\nimport { fetchQuizData, markBlockAsUsed } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  showMainMenu,\n  handleNewGame,\n  mode\n}) => {\n  _s();\n  // Using useParams if needed\n  const {\n    mode: paramMode\n  } = useParams();\n  const dispatch = useDispatch();\n  const quizState = useSelector(state => state.quiz[mode || paramMode]);\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\n  useEffect(() => {\n    if (mode || paramMode) {\n      console.log('Fetching quiz data for mode:', mode || paramMode); // Add logging\n      dispatch(fetchQuizData(mode || paramMode));\n    }\n  }, [mode, paramMode, dispatch]);\n  const showSettings = () => {\n    setIsSettingsVisible(true);\n  };\n  const hideSettings = () => {\n    setIsSettingsVisible(false);\n  };\n  const markBlock = (categoryName, blockId) => {\n    dispatch(markBlockAsUsed({\n      mode: mode || paramMode,\n      categoryName,\n      blockId\n    }));\n  };\n  if (!quizState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.quiz_page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      usedBlocks: quizState.usedBlocks || {},\n      markBlockAsUsed: markBlock,\n      data: quizState.categories,\n      mode: mode || paramMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuModal, {\n      showSettings: showSettings,\n      showMainMenu: showMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isSettingsVisible && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: hideSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"5a45wGuUnBOSkYXWfMaaPYws54c=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useSelector","useDispatch","Header","ContentContainer","EndMessage","MenuModal","Settings","styles","fetchQuizData","markBlockAsUsed","jsxDEV","_jsxDEV","QuizPage","showMainMenu","handleNewGame","mode","_s","paramMode","dispatch","quizState","state","quiz","isSettingsVisible","setIsSettingsVisible","console","log","showSettings","hideSettings","markBlock","categoryName","blockId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quiz_page","usedBlocks","data","categories","onClose","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/QuizPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Header from './Header';\r\nimport ContentContainer from './ContentContainer';\r\nimport EndMessage from './EndMessage';\r\nimport MenuModal from './MenuModal';\r\nimport Settings from './Settings';\r\nimport styles from '../styles/QuizPage.module.css';\r\nimport { fetchQuizData, markBlockAsUsed } from '../store/actions';\r\n\r\nconst QuizPage = ({ showMainMenu, handleNewGame, mode }) => {\r\n  // Using useParams if needed\r\n  const { mode: paramMode } = useParams();\r\n  const dispatch = useDispatch();\r\n  const quizState = useSelector((state) => state.quiz[mode || paramMode]);\r\n  const [isSettingsVisible, setIsSettingsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (mode || paramMode) {\r\n      console.log('Fetching quiz data for mode:', mode || paramMode); // Add logging\r\n      dispatch(fetchQuizData(mode || paramMode));\r\n    }\r\n  }, [mode, paramMode, dispatch]);\r\n\r\n  const showSettings = () => {\r\n    setIsSettingsVisible(true);\r\n  };\r\n\r\n  const hideSettings = () => {\r\n    setIsSettingsVisible(false);\r\n  };\r\n\r\n  const markBlock = (categoryName, blockId) => {\r\n    dispatch(markBlockAsUsed({ mode: mode || paramMode, categoryName, blockId }));\r\n  };\r\n\r\n  if (!quizState) {\r\n    return <div>Данные не загружены</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.quiz_page}>\r\n      <Header />\r\n      <ContentContainer\r\n        usedBlocks={quizState.usedBlocks || {}}\r\n        markBlockAsUsed={markBlock}\r\n        data={quizState.categories}\r\n        mode={mode || paramMode}\r\n      />\r\n      <EndMessage />\r\n      <MenuModal showSettings={showSettings} showMainMenu={showMainMenu} />\r\n      {isSettingsVisible && <Settings onClose={hideSettings} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}