{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app-react\\\\src\\\\components\\\\Modal\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport QAMode from '../QAMode/QAMode';\nimport SelectionMode from '../SelectionMode/SelectionMode';\nimport styles from './Modal.module.css';\nimport { useQuizContext } from '../../context/QuizContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modeComponents = {\n  1: QAMode,\n  2: SelectionMode\n};\nfunction Modal({\n  block,\n  onClose,\n  selectedMode,\n  setSelectedBlock\n}) {\n  _s();\n  const ModeComponent = modeComponents[selectedMode];\n  const {\n    markBlockAsUsed,\n    currentQuizId\n  } = useQuizContext();\n  if (!block) {\n    return null;\n  }\n  const handleSelectCategory = () => {\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id);\n    onClose();\n    setSelectedBlock(null); // Закрываем модальное окно\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.modal} ${styles.show}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closeButton,\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), ModeComponent ? /*#__PURE__*/_jsxDEV(ModeComponent, {\n        block: block,\n        handleSelectCategory: handleSelectCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Unknown mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"6OXOmKWIUeEYx+WsJJgZTHPFvE8=\", false, function () {\n  return [useQuizContext];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","QAMode","SelectionMode","styles","useQuizContext","jsxDEV","_jsxDEV","modeComponents","Modal","block","onClose","selectedMode","setSelectedBlock","_s","ModeComponent","markBlockAsUsed","currentQuizId","handleSelectCategory","categoryId","id","className","modal","show","onClick","children","modalContent","e","stopPropagation","closeButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/quiz-app-react/src/components/Modal/Modal.jsx"],"sourcesContent":["import React from 'react';\r\nimport QAMode from '../QAMode/QAMode';\r\nimport SelectionMode from '../SelectionMode/SelectionMode';\r\nimport styles from './Modal.module.css';\r\nimport { useQuizContext } from '../../context/QuizContext';\r\n\r\nconst modeComponents = {\r\n  1: QAMode,\r\n  2: SelectionMode,\r\n};\r\n\r\nfunction Modal({\r\n  block,\r\n  onClose,\r\n  selectedMode,\r\n  setSelectedBlock\r\n}) {\r\n  const ModeComponent = modeComponents[selectedMode];\r\n  const { markBlockAsUsed, currentQuizId } = useQuizContext();\r\n\r\n  if (!block) {\r\n    return null;\r\n  }\r\n\r\n  const handleSelectCategory = () => {\r\n    markBlockAsUsed(currentQuizId, block.categoryId, block.id);\r\n    onClose();\r\n    setSelectedBlock(null); // Закрываем модальное окно\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.modal} ${styles.show}`} onClick={onClose}>\r\n      <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n        <span className={styles.closeButton} onClick={onClose}>&times;</span>\r\n        {ModeComponent ? (\r\n          <ModeComponent\r\n            block={block}\r\n            handleSelectCategory={handleSelectCategory}\r\n          />\r\n        ) : (\r\n          <div>Unknown mode</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,cAAc,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAEN,MAAM;EACT,CAAC,EAAEC;AACL,CAAC;AAED,SAASM,KAAKA,CAAC;EACbC,KAAK;EACLC,OAAO;EACPC,YAAY;EACZC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,aAAa,GAAGP,cAAc,CAACI,YAAY,CAAC;EAClD,MAAM;IAAEI,eAAe;IAAEC;EAAc,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAE3D,IAAI,CAACK,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCF,eAAe,CAACC,aAAa,EAAEP,KAAK,CAACS,UAAU,EAAET,KAAK,CAACU,EAAE,CAAC;IAC1DT,OAAO,CAAC,CAAC;IACTE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAKc,SAAS,EAAE,GAAGjB,MAAM,CAACkB,KAAK,IAAIlB,MAAM,CAACmB,IAAI,EAAG;IAACC,OAAO,EAAEb,OAAQ;IAAAc,QAAA,eACjElB,OAAA;MAAKc,SAAS,EAAEjB,MAAM,CAACsB,YAAa;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,gBACvElB,OAAA;QAAMc,SAAS,EAAEjB,MAAM,CAACyB,WAAY;QAACL,OAAO,EAAEb,OAAQ;QAAAc,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpElB,aAAa,gBACZR,OAAA,CAACQ,aAAa;QACZL,KAAK,EAAEA,KAAM;QACbQ,oBAAoB,EAAEA;MAAqB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,gBAEF1B,OAAA;QAAAkB,QAAA,EAAK;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAlCQL,KAAK;EAAA,QAO+BJ,cAAc;AAAA;AAAA6B,EAAA,GAPlDzB,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}